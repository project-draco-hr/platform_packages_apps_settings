{
  mServicesCategory=(PreferenceCategory)findPreference(SERVICES_CATEGORY);
  mSystemsCategory=(PreferenceCategory)findPreference(SYSTEM_CATEGORY);
  mToggleLargeTextPreference=(CheckBoxPreference)findPreference(TOGGLE_LARGE_TEXT_PREFERENCE);
  mTogglePowerButtonEndsCallPreference=(CheckBoxPreference)findPreference(TOGGLE_POWER_BUTTON_ENDS_CALL_PREFERENCE);
  if (!KeyCharacterMap.deviceHasKey(KeyEvent.KEYCODE_POWER) || !Utils.isVoiceCapable(getActivity())) {
    mSystemsCategory.removePreference(mTogglePowerButtonEndsCallPreference);
  }
  mToggleAutoRotateScreenPreference=(CheckBoxPreference)findPreference(TOGGLE_AUTO_ROTATE_SCREEN_PREFERENCE);
  mToggleTouchExplorationPreference=findPreference(TOGGLE_TOUCH_EXPLORATION_PREFERENCE);
  mSelectLongPressTimeoutPreference=(ListPreference)findPreference(SELECT_LONG_PRESS_TIMEOUT_PREFERENCE);
  mSelectLongPressTimeoutPreference.setOnPreferenceChangeListener(this);
  if (mLongPressTimeoutValuetoTitleMap.size() == 0) {
    String[] timeoutValues=getResources().getStringArray(R.array.long_press_timeout_selector_values);
    mLongPressTimeoutDefault=Integer.parseInt(timeoutValues[0]);
    String[] timeoutTitles=getResources().getStringArray(R.array.long_press_timeout_selector_titles);
    final int timeoutValueCount=timeoutValues.length;
    for (int i=0; i < timeoutValueCount; i++) {
      mLongPressTimeoutValuetoTitleMap.put(timeoutValues[i],timeoutTitles[i]);
    }
  }
  mToggleScriptInjectionPreference=(AccessibilityEnableScriptInjectionPreference)findPreference(TOGGLE_SCRIPT_INJECTION_PREFERENCE);
}
