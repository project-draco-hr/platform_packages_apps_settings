{
switch (dialogId) {
case DIALOG_ID_DISABLE_ACCESSIBILITY:
    return (new AlertDialog.Builder(getActivity())).setTitle(android.R.string.dialog_alert_title).setIcon(android.R.drawable.ic_dialog_alert).setMessage(getResources().getString(R.string.accessibility_service_disable_warning)).setCancelable(true).setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int which){
        Settings.Secure.putInt(getContentResolver(),Settings.Secure.ACCESSIBILITY_ENABLED,0);
        mToggleAccessibilitySwitch.setCheckedNoBeforeCheckedChangeListener(false);
        updatePreferencesForAccessibilityState();
      }
    }
).setNegativeButton(android.R.string.cancel,new DialogInterface.OnClickListener(){
      public void onClick(      DialogInterface dialog,      int which){
        mToggleAccessibilitySwitch.setCheckedNoBeforeCheckedChangeListener(true);
      }
    }
).create();
case DIALOG_ID_ENABLE_SCRIPT_INJECTION:
  return new AlertDialog.Builder(getActivity()).setTitle(android.R.string.dialog_alert_title).setIcon(android.R.drawable.ic_dialog_alert).setMessage(getActivity().getString(R.string.accessibility_script_injection_security_warning)).setCancelable(true).setPositiveButton(R.string.accessibility_script_injection_button_allow,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      Settings.Secure.putInt(getContentResolver(),Settings.Secure.ACCESSIBILITY_SCRIPT_INJECTION,1);
      mToggleScriptInjectionPreference.setSummary(getString(R.string.accessibility_script_injection_allowed));
    }
  }
).setNegativeButton(R.string.accessibility_script_injection_button_disallow,null).create();
case DIALOG_ID_NO_ACCESSIBILITY_SERVICES:
return new AlertDialog.Builder(getActivity()).setTitle(R.string.accessibility_service_no_apps_title).setMessage(R.string.accessibility_service_no_apps_message).setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
  public void onClick(  DialogInterface dialog,  int which){
    dialog.dismiss();
    String screenreaderMarketLink=SystemProperties.get("ro.screenreader.market",DEFAULT_SCREENREADER_MARKET_LINK);
    Uri marketUri=Uri.parse(screenreaderMarketLink);
    Intent marketIntent=new Intent(Intent.ACTION_VIEW,marketUri);
    startActivity(marketIntent);
  }
}
).setNegativeButton(android.R.string.cancel,null).create();
default :
return null;
}
}
