{
  mToggleLargeTextPreference.setEnabled(accessibilityEnabled);
  if (accessibilityEnabled) {
    mCurConfig.fontScale=mToggleLargeTextPreference.isChecked() ? LARGE_FONT_SCALE : 1;
  }
 else {
    mCurConfig.fontScale=1;
  }
  try {
    ActivityManagerNative.getDefault().updatePersistentConfiguration(mCurConfig);
  }
 catch (  RemoteException re) {
  }
  if (mTogglePowerButtonEndsCallPreference != null) {
    mTogglePowerButtonEndsCallPreference.setEnabled(accessibilityEnabled);
    final int powerButtonEndsCall;
    if (accessibilityEnabled) {
      powerButtonEndsCall=mTogglePowerButtonEndsCallPreference.isChecked() ? Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_HANGUP : Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF;
    }
 else {
      powerButtonEndsCall=Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR_SCREEN_OFF;
    }
    Settings.Secure.putInt(getContentResolver(),Settings.Secure.INCALL_POWER_BUTTON_BEHAVIOR,powerButtonEndsCall);
  }
  mToggleTouchExplorationPreference.setEnabled(accessibilityEnabled);
  final boolean touchExplorationEnabled=(Settings.Secure.getInt(getContentResolver(),Settings.Secure.TOUCH_EXPLORATION_ENABLED,0) == 1);
  if (touchExplorationEnabled) {
    mToggleTouchExplorationPreference.setSummary(getString(R.string.accessibility_service_state_on));
    mToggleTouchExplorationPreference.getExtras().putBoolean(EXTRA_CHECKED,true);
  }
 else {
    mToggleTouchExplorationPreference.setSummary(getString(R.string.accessibility_service_state_off));
    mToggleTouchExplorationPreference.getExtras().putBoolean(EXTRA_CHECKED,false);
  }
  mSelectLongPressTimeoutPreference.setEnabled(accessibilityEnabled);
  final int longPressTimeout;
  if (accessibilityEnabled) {
    longPressTimeout=Integer.parseInt(mSelectLongPressTimeoutPreference.getValue());
  }
 else {
    longPressTimeout=mLongPressTimeoutDefault;
  }
  Settings.Secure.putInt(getContentResolver(),Settings.Secure.LONG_PRESS_TIMEOUT,longPressTimeout);
  String value=mSelectLongPressTimeoutPreference.getValue();
  mSelectLongPressTimeoutPreference.setSummary(mLongPressTimeoutValuetoTitleMap.get(value));
  mToggleScriptInjectionPreference.setEnabled(accessibilityEnabled);
  final boolean scriptInjectionAllowed;
  if (accessibilityEnabled) {
    scriptInjectionAllowed=mToggleScriptInjectionPreference.isInjectionAllowed();
  }
 else {
    scriptInjectionAllowed=false;
  }
  Settings.Secure.putInt(getContentResolver(),Settings.Secure.ACCESSIBILITY_SCRIPT_INJECTION,scriptInjectionAllowed ? 1 : 0);
}
