{
  if (UserHandle.myUserId() != UserHandle.USER_SYSTEM) {
    Log.i(TAG,"Can only set scorer for owner/system user.");
    return false;
  }
  NetworkScorerAppData newScorer=NetworkScorerAppManager.getScorer(this,mNewPackageName);
  if (newScorer == null) {
    Log.e(TAG,"New package " + mNewPackageName + " is not a valid scorer.");
    return false;
  }
  NetworkScorerAppData oldScorer=NetworkScorerAppManager.getActiveScorer(this);
  if (oldScorer != null && TextUtils.equals(oldScorer.mPackageName,mNewPackageName)) {
    Log.i(TAG,"New package " + mNewPackageName + " is already the active scorer.");
    setResult(RESULT_OK);
    return false;
  }
  CharSequence newName=newScorer.mScorerName;
  final AlertController.AlertParams p=mAlertParams;
  p.mTitle=getString(R.string.network_scorer_change_active_dialog_title);
  if (oldScorer != null) {
    p.mMessage=getString(R.string.network_scorer_change_active_dialog_text,newName,oldScorer.mScorerName);
  }
 else {
    p.mMessage=getString(R.string.network_scorer_change_active_no_previous_dialog_text,newName);
  }
  p.mPositiveButtonText=getString(R.string.yes);
  p.mNegativeButtonText=getString(R.string.no);
  p.mPositiveButtonListener=this;
  p.mNegativeButtonListener=this;
  setupAlert();
  return true;
}
