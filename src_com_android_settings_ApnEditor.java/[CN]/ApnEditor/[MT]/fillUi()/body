{
  if (mFirstTime) {
    mFirstTime=false;
    mName.setText(mCursor.getString(NAME_INDEX));
    mApn.setText(mCursor.getString(APN_INDEX));
    mProxy.setText(mCursor.getString(PROXY_INDEX));
    mPort.setText(mCursor.getString(PORT_INDEX));
    mUser.setText(mCursor.getString(USER_INDEX));
    mServer.setText(mCursor.getString(SERVER_INDEX));
    mPassword.setText(mCursor.getString(PASSWORD_INDEX));
    mMmsProxy.setText(mCursor.getString(MMSPROXY_INDEX));
    mMmsPort.setText(mCursor.getString(MMSPORT_INDEX));
    mMmsc.setText(mCursor.getString(MMSC_INDEX));
    mMcc.setText(mCursor.getString(MCC_INDEX));
    mMnc.setText(mCursor.getString(MNC_INDEX));
    mApnType.setText(mCursor.getString(TYPE_INDEX));
    if (mNewApn) {
      String numeric=mTelephonyManager.getSimOperator(mSubId);
      if (numeric != null && numeric.length() > 4) {
        String mcc=numeric.substring(0,3);
        String mnc=numeric.substring(3);
        mMcc.setText(mcc);
        mMnc.setText(mnc);
        mCurMnc=mnc;
        mCurMcc=mcc;
      }
    }
    int authVal=mCursor.getInt(AUTH_TYPE_INDEX);
    if (authVal != -1) {
      mAuthType.setValueIndex(authVal);
    }
 else {
      mAuthType.setValue(null);
    }
    mProtocol.setValue(mCursor.getString(PROTOCOL_INDEX));
    mRoamingProtocol.setValue(mCursor.getString(ROAMING_PROTOCOL_INDEX));
    mCarrierEnabled.setChecked(mCursor.getInt(CARRIER_ENABLED_INDEX) == 1);
    mBearerInitialVal=mCursor.getInt(BEARER_INDEX);
    HashSet<String> bearers=new HashSet<String>();
    int bearerBitmask=mCursor.getInt(BEARER_BITMASK_INDEX);
    if (bearerBitmask == 0) {
      if (mBearerInitialVal == 0) {
        bearers.add("" + 0);
      }
    }
 else {
      int i=1;
      while (bearerBitmask != 0) {
        if ((bearerBitmask & 1) == 1) {
          bearers.add("" + i);
        }
        bearerBitmask>>=1;
        i++;
      }
    }
    if (mBearerInitialVal != 0 && bearers.contains("" + mBearerInitialVal) == false) {
      bearers.add("" + mBearerInitialVal);
    }
    mBearerMulti.setValues(bearers);
    mMvnoType.setValue(mCursor.getString(MVNO_TYPE_INDEX));
    mMvnoMatchData.setEnabled(false);
    mMvnoMatchData.setText(mCursor.getString(MVNO_MATCH_DATA_INDEX));
  }
  mName.setSummary(checkNull(mName.getText()));
  mApn.setSummary(checkNull(mApn.getText()));
  mProxy.setSummary(checkNull(mProxy.getText()));
  mPort.setSummary(checkNull(mPort.getText()));
  mUser.setSummary(checkNull(mUser.getText()));
  mServer.setSummary(checkNull(mServer.getText()));
  mPassword.setSummary(starify(mPassword.getText()));
  mMmsProxy.setSummary(checkNull(mMmsProxy.getText()));
  mMmsPort.setSummary(checkNull(mMmsPort.getText()));
  mMmsc.setSummary(checkNull(mMmsc.getText()));
  mMcc.setSummary(checkNull(mMcc.getText()));
  mMnc.setSummary(checkNull(mMnc.getText()));
  mApnType.setSummary(checkNull(mApnType.getText()));
  String authVal=mAuthType.getValue();
  if (authVal != null) {
    int authValIndex=Integer.parseInt(authVal);
    mAuthType.setValueIndex(authValIndex);
    String[] values=mRes.getStringArray(R.array.apn_auth_entries);
    mAuthType.setSummary(values[authValIndex]);
  }
 else {
    mAuthType.setSummary(sNotSet);
  }
  mProtocol.setSummary(checkNull(protocolDescription(mProtocol.getValue(),mProtocol)));
  mRoamingProtocol.setSummary(checkNull(protocolDescription(mRoamingProtocol.getValue(),mRoamingProtocol)));
  mBearerMulti.setSummary(checkNull(bearerMultiDescription(mBearerMulti.getValues())));
  mMvnoType.setSummary(checkNull(mvnoDescription(mMvnoType.getValue())));
  mMvnoMatchData.setSummary(checkNull(mMvnoMatchData.getText()));
  boolean ceEditable=getResources().getBoolean(R.bool.config_allow_edit_carrier_enabled);
  if (ceEditable) {
    mCarrierEnabled.setEnabled(true);
  }
 else {
    mCarrierEnabled.setEnabled(false);
  }
}
