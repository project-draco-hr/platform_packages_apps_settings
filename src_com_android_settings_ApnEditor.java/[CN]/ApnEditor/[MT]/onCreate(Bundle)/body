{
  super.onCreate(icicle);
  addPreferencesFromResource(R.xml.apn_editor);
  sNotSet=getResources().getString(R.string.apn_not_set);
  mName=(EditTextPreference)findPreference("apn_name");
  mApn=(EditTextPreference)findPreference("apn_apn");
  mProxy=(EditTextPreference)findPreference("apn_http_proxy");
  mPort=(EditTextPreference)findPreference("apn_http_port");
  mUser=(EditTextPreference)findPreference("apn_user");
  mServer=(EditTextPreference)findPreference("apn_server");
  mPassword=(EditTextPreference)findPreference("apn_password");
  mMmsProxy=(EditTextPreference)findPreference("apn_mms_proxy");
  mMmsPort=(EditTextPreference)findPreference("apn_mms_port");
  mMmsc=(EditTextPreference)findPreference("apn_mmsc");
  mMcc=(EditTextPreference)findPreference("apn_mcc");
  mMnc=(EditTextPreference)findPreference("apn_mnc");
  mApnType=(EditTextPreference)findPreference("apn_type");
  mAuthType=(ListPreference)findPreference(KEY_AUTH_TYPE);
  mAuthType.setOnPreferenceChangeListener(this);
  mProtocol=(ListPreference)findPreference(KEY_PROTOCOL);
  mProtocol.setOnPreferenceChangeListener(this);
  mRoamingProtocol=(ListPreference)findPreference(KEY_ROAMING_PROTOCOL);
  mRoamingProtocol.setOnPreferenceChangeListener(this);
  mCarrierEnabled=(SwitchPreference)findPreference(KEY_CARRIER_ENABLED);
  mBearerMulti=(MultiSelectListPreference)findPreference(KEY_BEARER_MULTI);
  mBearerMulti.setOnPreferenceChangeListener(this);
  mMvnoType=(ListPreference)findPreference(KEY_MVNO_TYPE);
  mMvnoType.setOnPreferenceChangeListener(this);
  mMvnoMatchData=(EditTextPreference)findPreference("mvno_match_data");
  mRes=getResources();
  final Intent intent=getIntent();
  final String action=intent.getAction();
  mSubId=intent.getIntExtra(ApnSettings.SUB_ID,SubscriptionManager.INVALID_SUBSCRIPTION_ID);
  mFirstTime=icicle == null;
  if (action.equals(Intent.ACTION_EDIT)) {
    Uri uri=intent.getData();
    if (!uri.isPathPrefixMatch(Telephony.Carriers.CONTENT_URI)) {
      Log.e(TAG,"Edit request not for carrier table. Uri: " + uri);
      finish();
      return;
    }
    mUri=uri;
  }
 else   if (action.equals(Intent.ACTION_INSERT)) {
    if (mFirstTime || icicle.getInt(SAVED_POS) == 0) {
      Uri uri=intent.getData();
      if (!uri.isPathPrefixMatch(Telephony.Carriers.CONTENT_URI)) {
        Log.e(TAG,"Insert request not for carrier table. Uri: " + uri);
        finish();
        return;
      }
      mUri=getContentResolver().insert(uri,new ContentValues());
    }
 else {
      mUri=ContentUris.withAppendedId(Telephony.Carriers.CONTENT_URI,icicle.getInt(SAVED_POS));
    }
    mNewApn=true;
    mMvnoTypeStr=intent.getStringExtra(ApnSettings.MVNO_TYPE);
    mMvnoMatchDataStr=intent.getStringExtra(ApnSettings.MVNO_MATCH_DATA);
    if (mUri == null) {
      Log.w(TAG,"Failed to insert new telephony provider into " + getIntent().getData());
      finish();
      return;
    }
    setResult(RESULT_OK,(new Intent()).setAction(mUri.toString()));
  }
 else {
    finish();
    return;
  }
  mCursor=getActivity().managedQuery(mUri,sProjection,null,null);
  mCursor.moveToFirst();
  mTelephonyManager=(TelephonyManager)getSystemService(TELEPHONY_SERVICE);
  for (int i=0; i < getPreferenceScreen().getPreferenceCount(); i++) {
    getPreferenceScreen().getPreference(i).setOnPreferenceChangeListener(this);
  }
  fillUi();
}
