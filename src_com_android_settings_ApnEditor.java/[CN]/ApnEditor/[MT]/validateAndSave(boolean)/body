{
  String name=checkNotSet(mName.getText());
  String apn=checkNotSet(mApn.getText());
  String mcc=checkNotSet(mMcc.getText());
  String mnc=checkNotSet(mMnc.getText());
  if (getErrorMsg() != null && !force) {
    ErrorDialog.showError(this);
    return false;
  }
  if (!mCursor.moveToFirst()) {
    Log.w(TAG,"Could not go to the first row in the Cursor when saving data.");
    return false;
  }
  if (force && mNewApn && name.length() < 1 && apn.length() < 1) {
    getContentResolver().delete(mUri,null,null);
    mUri=null;
    return false;
  }
  ContentValues values=new ContentValues();
  values.put(Telephony.Carriers.NAME,name.length() < 1 ? getResources().getString(R.string.untitled_apn) : name);
  values.put(Telephony.Carriers.APN,apn);
  values.put(Telephony.Carriers.PROXY,checkNotSet(mProxy.getText()));
  values.put(Telephony.Carriers.PORT,checkNotSet(mPort.getText()));
  values.put(Telephony.Carriers.MMSPROXY,checkNotSet(mMmsProxy.getText()));
  values.put(Telephony.Carriers.MMSPORT,checkNotSet(mMmsPort.getText()));
  values.put(Telephony.Carriers.USER,checkNotSet(mUser.getText()));
  values.put(Telephony.Carriers.SERVER,checkNotSet(mServer.getText()));
  values.put(Telephony.Carriers.PASSWORD,checkNotSet(mPassword.getText()));
  values.put(Telephony.Carriers.MMSC,checkNotSet(mMmsc.getText()));
  String authVal=mAuthType.getValue();
  if (authVal != null) {
    values.put(Telephony.Carriers.AUTH_TYPE,Integer.parseInt(authVal));
  }
  values.put(Telephony.Carriers.PROTOCOL,checkNotSet(mProtocol.getValue()));
  values.put(Telephony.Carriers.ROAMING_PROTOCOL,checkNotSet(mRoamingProtocol.getValue()));
  values.put(Telephony.Carriers.TYPE,checkNotSet(mApnType.getText()));
  values.put(Telephony.Carriers.MCC,mcc);
  values.put(Telephony.Carriers.MNC,mnc);
  values.put(Telephony.Carriers.NUMERIC,mcc + mnc);
  if (mCurMnc != null && mCurMcc != null) {
    if (mCurMnc.equals(mnc) && mCurMcc.equals(mcc)) {
      values.put(Telephony.Carriers.CURRENT,1);
    }
  }
  Set<String> bearerSet=mBearerMulti.getValues();
  int bearerBitmask=0;
  for (  String bearer : bearerSet) {
    if (Integer.parseInt(bearer) == 0) {
      bearerBitmask=0;
      break;
    }
 else {
      bearerBitmask|=ServiceState.getBitmaskForTech(Integer.parseInt(bearer));
    }
  }
  values.put(Telephony.Carriers.BEARER_BITMASK,bearerBitmask);
  int bearerVal;
  if (bearerBitmask == 0 || mBearerInitialVal == 0) {
    bearerVal=0;
  }
 else   if (ServiceState.bitmaskHasTech(bearerBitmask,mBearerInitialVal)) {
    bearerVal=mBearerInitialVal;
  }
 else {
    bearerVal=0;
  }
  values.put(Telephony.Carriers.BEARER,bearerVal);
  values.put(Telephony.Carriers.MVNO_TYPE,checkNotSet(mMvnoType.getValue()));
  values.put(Telephony.Carriers.MVNO_MATCH_DATA,checkNotSet(mMvnoMatchData.getText()));
  values.put(Telephony.Carriers.CARRIER_ENABLED,mCarrierEnabled.isChecked() ? 1 : 0);
  getContentResolver().update(mUri,values,null,null);
  return true;
}
