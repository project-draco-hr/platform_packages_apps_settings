{
  final TelephonyManager tm=(TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);
  final String mccmnc=mSubscriptionInfo == null ? "" : tm.getSimOperator(mSubscriptionInfo.getSubscriptionId());
  Log.d(TAG,"mccmnc = " + mccmnc);
  StringBuilder where=new StringBuilder("numeric=\"" + mccmnc + "\" AND NOT (type='ia' AND (apn=\"\" OR apn IS NULL)) AND user_visible!=0");
  if (mHideImsApn) {
    where.append(" AND NOT (type='ims')");
  }
  Cursor cursor=getContentResolver().query(Telephony.Carriers.CONTENT_URI,new String[]{"_id","name","apn","type","mvno_type","mvno_match_data"},where.toString(),null,Telephony.Carriers.DEFAULT_SORT_ORDER);
  if (cursor != null) {
    IccRecords r=null;
    if (mUiccController != null && mSubscriptionInfo != null) {
      r=mUiccController.getIccRecords(SubscriptionManager.getPhoneId(mSubscriptionInfo.getSubscriptionId()),UiccController.APP_FAM_3GPP);
    }
    PreferenceGroup apnList=(PreferenceGroup)findPreference("apn_list");
    apnList.removeAll();
    ArrayList<ApnPreference> mnoApnList=new ArrayList<ApnPreference>();
    ArrayList<ApnPreference> mvnoApnList=new ArrayList<ApnPreference>();
    ArrayList<ApnPreference> mnoMmsApnList=new ArrayList<ApnPreference>();
    ArrayList<ApnPreference> mvnoMmsApnList=new ArrayList<ApnPreference>();
    mSelectedKey=getSelectedApnKey();
    cursor.moveToFirst();
    while (!cursor.isAfterLast()) {
      String name=cursor.getString(NAME_INDEX);
      String apn=cursor.getString(APN_INDEX);
      String key=cursor.getString(ID_INDEX);
      String type=cursor.getString(TYPES_INDEX);
      String mvnoType=cursor.getString(MVNO_TYPE_INDEX);
      String mvnoMatchData=cursor.getString(MVNO_MATCH_DATA_INDEX);
      ApnPreference pref=new ApnPreference(getActivity());
      pref.setKey(key);
      pref.setTitle(name);
      pref.setSummary(apn);
      pref.setPersistent(false);
      pref.setOnPreferenceChangeListener(this);
      boolean selectable=((type == null) || !type.equals("mms"));
      pref.setSelectable(selectable);
      if (selectable) {
        if ((mSelectedKey != null) && mSelectedKey.equals(key)) {
          pref.setChecked();
        }
        addApnToList(pref,mnoApnList,mvnoApnList,r,mvnoType,mvnoMatchData);
      }
 else {
        addApnToList(pref,mnoMmsApnList,mvnoMmsApnList,r,mvnoType,mvnoMatchData);
      }
      cursor.moveToNext();
    }
    cursor.close();
    if (!mvnoApnList.isEmpty()) {
      mnoApnList=mvnoApnList;
      mnoMmsApnList=mvnoMmsApnList;
    }
    for (    Preference preference : mnoApnList) {
      apnList.addPreference(preference);
    }
    for (    Preference preference : mnoMmsApnList) {
      apnList.addPreference(preference);
    }
  }
}
