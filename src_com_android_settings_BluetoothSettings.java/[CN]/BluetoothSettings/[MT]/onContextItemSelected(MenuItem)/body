{
  AdapterView.AdapterContextMenuInfo info;
  if (!(item.getMenuInfo() instanceof AdapterContextMenuInfo)) {
    return false;
  }
  info=(AdapterView.AdapterContextMenuInfo)item.getMenuInfo();
  Preference pref=(Preference)getPreferenceScreen().getRootAdapter().getItem(info.position);
  String address=getAddressFromKey(pref.getKey());
  mBluetooth.cancelDiscovery();
switch (item.getItemId()) {
case MENU_DISCONNECT:
    if (mBluetoothHeadset.isConnected(address)) {
      mBluetoothHeadset.disconnectHeadset();
    }
  break;
case MENU_CONNECT:
if (!mBluetoothHeadset.isConnected(address)) {
  updateRemoteDeviceStatus(address,STR_CONNECTING);
  connect(pref,address);
}
break;
case MENU_UNPAIR:
if (mBluetooth.hasBonding(address)) {
mBluetooth.removeBonding(address);
updateRemoteDeviceStatus(address);
}
break;
case MENU_PAIR:
if (!mBluetooth.hasBonding(address)) {
pair(pref,address);
}
break;
}
return true;
}
