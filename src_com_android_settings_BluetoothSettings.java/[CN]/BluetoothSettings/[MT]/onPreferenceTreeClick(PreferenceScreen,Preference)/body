{
  if (preference == mBTToggle) {
    toggleBT();
    return false;
  }
 else   if (preference == mBTVisibility) {
    boolean vis=mBTVisibility.isChecked();
    if (!vis) {
      mBluetooth.setMode(BluetoothDevice.MODE_CONNECTABLE);
      mHandler.removeMessages(HANDLE_DISCOVERABLE_TIMEOUT);
    }
 else {
      mBluetooth.setMode(BluetoothDevice.MODE_DISCOVERABLE);
      mBTVisibility.setSummaryOn(getResources().getString(R.string.bluetooth_is_discoverable,String.valueOf(mDiscoverableTime)));
      mDiscoverableStartTime=SystemClock.elapsedRealtime();
      mHandler.sendMessageDelayed(mHandler.obtainMessage(HANDLE_DISCOVERABLE_TIMEOUT),1000);
    }
  }
 else {
    String key=preference.getKey();
    if (key.startsWith(BT_KEY_PREFIX)) {
      String address=getAddressFromKey(key);
      if (mBluetoothHeadset.isConnected(address)) {
        askDisconnect(address);
      }
 else       if (mBluetooth.hasBonding(address)) {
        if (mIsEnabled) {
          mBluetooth.cancelDiscovery();
        }
        updateRemoteDeviceStatus(address,STR_CONNECTING);
        connect(preference,address);
      }
 else {
        if (mIsEnabled) {
          mBluetooth.cancelDiscovery();
        }
        pair(preference,address);
      }
    }
  }
  return false;
}
