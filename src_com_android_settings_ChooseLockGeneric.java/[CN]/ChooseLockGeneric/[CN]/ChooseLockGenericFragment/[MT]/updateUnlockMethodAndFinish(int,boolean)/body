{
  if (!mPasswordConfirmed) {
    throw new IllegalStateException("Tried to update password without confirming it");
  }
  final boolean isFallback=getActivity().getIntent().getBooleanExtra(LockPatternUtils.LOCKSCREEN_BIOMETRIC_WEAK_FALLBACK,false);
  quality=upgradeQuality(quality,null);
  if (quality >= DevicePolicyManager.PASSWORD_QUALITY_NUMERIC) {
    int minLength=mDPM.getPasswordMinimumLength(null);
    if (minLength < MIN_PASSWORD_LENGTH) {
      minLength=MIN_PASSWORD_LENGTH;
    }
    final int maxLength=mDPM.getPasswordMaximumLength(quality);
    Intent intent=ChooseLockPassword.createIntent(getActivity(),quality,isFallback,minLength,maxLength,mRequirePassword,false);
    if (isFallback) {
      startActivityForResult(intent,FALLBACK_REQUEST);
      return;
    }
 else {
      mFinishPending=true;
      intent.addFlags(Intent.FLAG_ACTIVITY_FORWARD_RESULT);
      startActivity(intent);
    }
  }
 else   if (quality == DevicePolicyManager.PASSWORD_QUALITY_SOMETHING) {
    Intent intent=ChooseLockPattern.createIntent(getActivity(),isFallback,mRequirePassword,false);
    if (isFallback) {
      startActivityForResult(intent,FALLBACK_REQUEST);
      return;
    }
 else {
      mFinishPending=true;
      intent.addFlags(Intent.FLAG_ACTIVITY_FORWARD_RESULT);
      startActivity(intent);
    }
  }
 else   if (quality == DevicePolicyManager.PASSWORD_QUALITY_BIOMETRIC_WEAK) {
    Intent intent=getBiometricSensorIntent();
    mFinishPending=true;
    startActivity(intent);
  }
 else   if (quality == DevicePolicyManager.PASSWORD_QUALITY_UNSPECIFIED) {
    mChooseLockSettingsHelper.utils().clearLock(false);
    mChooseLockSettingsHelper.utils().setLockScreenDisabled(disabled);
    getActivity().setResult(Activity.RESULT_OK);
    finish();
  }
 else {
    finish();
  }
}
