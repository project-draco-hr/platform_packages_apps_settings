{
  final String pin=mPasswordEntry.getText().toString();
  if (TextUtils.isEmpty(pin)) {
    return;
  }
  String errorMsg=null;
  if (mUiStage == Stage.Introduction) {
    errorMsg=validatePassword(pin);
    if (errorMsg == null) {
      mFirstPin=pin;
      mPasswordEntry.setText("");
      updateStage(Stage.NeedToConfirm);
    }
  }
 else   if (mUiStage == Stage.NeedToConfirm) {
    if (mFirstPin.equals(pin)) {
      final boolean isFallback=getActivity().getIntent().getBooleanExtra(LockPatternUtils.LOCKSCREEN_BIOMETRIC_WEAK_FALLBACK,false);
      mLockPatternUtils.clearLock(isFallback);
      mLockPatternUtils.saveLockPassword(pin,mRequestedQuality,isFallback);
      getActivity().finish();
    }
 else {
      CharSequence tmp=mPasswordEntry.getText();
      if (tmp != null) {
        Selection.setSelection((Spannable)tmp,0,tmp.length());
      }
      updateStage(Stage.ConfirmWrong);
    }
  }
  if (errorMsg != null) {
    showError(errorMsg,mUiStage);
  }
}
