{
  super.onCreate(savedInstanceState);
  mLockPatternUtils=new LockPatternUtils(this);
  mRequestedQuality=getIntent().getIntExtra(LockPatternUtils.PASSWORD_TYPE_KEY,mRequestedQuality);
  mPasswordMinLength=getIntent().getIntExtra(PASSWORD_MIN_KEY,mPasswordMinLength);
  mPasswordMaxLength=getIntent().getIntExtra(PASSWORD_MAX_KEY,mPasswordMaxLength);
  final boolean confirmCredentials=getIntent().getBooleanExtra("confirm_credentials",true);
  int minMode=mLockPatternUtils.getRequestedPasswordQuality();
  if (mRequestedQuality < minMode) {
    mRequestedQuality=minMode;
  }
  int minLength=mLockPatternUtils.getRequestedMinimumPasswordLength();
  if (mPasswordMinLength < minLength) {
    mPasswordMinLength=minLength;
  }
  initViews();
  mChooseLockSettingsHelper=new ChooseLockSettingsHelper(this);
  if (savedInstanceState == null) {
    updateStage(Stage.Introduction);
    if (confirmCredentials) {
      mChooseLockSettingsHelper.launchConfirmationActivity(CONFIRM_EXISTING_REQUEST,null,null);
    }
  }
}
