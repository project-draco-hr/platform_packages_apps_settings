{
  super.onViewCreated(view,savedInstanceState);
  mCancelButton=(Button)view.findViewById(R.id.cancel_button);
  mCancelButton.setOnClickListener(this);
  mNextButton=(Button)view.findViewById(R.id.next_button);
  mNextButton.setOnClickListener(this);
  mIsAlphaMode=DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC == mRequestedQuality || DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC == mRequestedQuality || DevicePolicyManager.PASSWORD_QUALITY_COMPLEX == mRequestedQuality;
  mKeyboardView=(PasswordEntryKeyboardView)view.findViewById(R.id.keyboard);
  mPasswordEntry=(TextView)view.findViewById(R.id.password_entry);
  mPasswordEntry.setOnEditorActionListener(this);
  mPasswordEntry.addTextChangedListener(this);
  mPasswordEntryInputDisabler=new TextViewInputDisabler(mPasswordEntry);
  final Activity activity=getActivity();
  mKeyboardHelper=new PasswordEntryKeyboardHelper(activity,mKeyboardView,mPasswordEntry);
  mKeyboardHelper.setKeyboardMode(mIsAlphaMode ? PasswordEntryKeyboardHelper.KEYBOARD_MODE_ALPHA : PasswordEntryKeyboardHelper.KEYBOARD_MODE_NUMERIC);
  mHeaderText=(TextView)view.findViewById(R.id.headerText);
  mKeyboardView.requestFocus();
  int currentType=mPasswordEntry.getInputType();
  mPasswordEntry.setInputType(mIsAlphaMode ? currentType : (InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_VARIATION_PASSWORD));
  Intent intent=getActivity().getIntent();
  final boolean confirmCredentials=intent.getBooleanExtra(ChooseLockGeneric.CONFIRM_CREDENTIALS,true);
  mCurrentPassword=intent.getStringExtra(ChooseLockSettingsHelper.EXTRA_KEY_PASSWORD);
  mHasChallenge=intent.getBooleanExtra(ChooseLockSettingsHelper.EXTRA_KEY_HAS_CHALLENGE,false);
  mChallenge=intent.getLongExtra(ChooseLockSettingsHelper.EXTRA_KEY_CHALLENGE,0);
  if (savedInstanceState == null) {
    updateStage(Stage.Introduction);
    if (confirmCredentials) {
      mChooseLockSettingsHelper.launchConfirmationActivity(CONFIRM_EXISTING_REQUEST,getString(R.string.unlock_set_unlock_launch_picker_title),true,mUserId);
    }
  }
 else {
    mFirstPin=savedInstanceState.getString(KEY_FIRST_PIN);
    final String state=savedInstanceState.getString(KEY_UI_STAGE);
    if (state != null) {
      mUiStage=Stage.valueOf(state);
      updateStage(mUiStage);
    }
    if (mCurrentPassword == null) {
      mCurrentPassword=savedInstanceState.getString(KEY_CURRENT_PASSWORD);
    }
    mSaveAndFinishWorker=(SaveAndFinishWorker)getFragmentManager().findFragmentByTag(FRAGMENT_TAG_SAVE_AND_FINISH);
  }
  if (activity instanceof SettingsActivity) {
    final SettingsActivity sa=(SettingsActivity)activity;
    int id=mIsAlphaMode ? R.string.lockpassword_choose_your_password_header : R.string.lockpassword_choose_your_pin_header;
    CharSequence title=getText(id);
    sa.setTitle(title);
  }
}
