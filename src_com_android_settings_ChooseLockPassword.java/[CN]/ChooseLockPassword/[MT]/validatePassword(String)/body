{
  if (password.length() < mPasswordMinLength) {
    return getString(mIsAlphaMode ? R.string.lockpassword_password_too_short : R.string.lockpassword_pin_too_short,mPasswordMinLength);
  }
  if (password.length() > mPasswordMaxLength) {
    return getString(mIsAlphaMode ? R.string.lockpassword_password_too_long : R.string.lockpassword_pin_too_long,mPasswordMaxLength);
  }
  boolean hasAlpha=false;
  boolean hasDigit=false;
  boolean hasSymbol=false;
  for (int i=0; i < password.length(); i++) {
    char c=password.charAt(i);
    if (c <= 32 || c > 127) {
      return getString(R.string.lockpassword_illegal_character);
    }
    if (c >= '0' && c <= '9') {
      hasDigit=true;
    }
 else     if ((c >= 'A' && c <= 'Z') || (c >= 'a' && c <= 'z')) {
      hasAlpha=true;
    }
 else {
      hasSymbol=true;
    }
  }
  if (DevicePolicyManager.PASSWORD_QUALITY_NUMERIC == mRequestedQuality && (hasAlpha | hasSymbol)) {
    return getString(R.string.lockpassword_pin_contains_non_digits);
  }
 else {
    final boolean alphabetic=DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC == mRequestedQuality;
    final boolean alphanumeric=DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC == mRequestedQuality;
    final boolean symbolic=false;
    if ((alphabetic || alphanumeric) && !hasAlpha) {
      return getString(R.string.lockpassword_password_requires_alpha);
    }
    if (alphanumeric && !hasDigit) {
      return getString(R.string.lockpassword_password_requires_digit);
    }
    if (symbolic && !hasSymbol) {
      return getString(R.string.lockpassword_password_requires_symbol);
    }
  }
  return null;
}
