{
  if (mDone)   return;
  LockPatternUtils utils=mChooseLockSettingsHelper.utils();
  final boolean lockVirgin=!utils.isPatternEverChosen();
  boolean wasSecureBefore=utils.isSecure();
  final boolean required=getActivity().getIntent().getBooleanExtra(EncryptionInterstitial.EXTRA_REQUIRE_PASSWORD,true);
  utils.setCredentialRequiredToDecrypt(required);
  utils.saveLockPattern(mChosenPattern,mCurrentPattern);
  if (lockVirgin) {
    utils.setVisiblePatternEnabled(true);
  }
  if (!wasSecureBefore) {
    startActivity(getRedactionInterstitialIntent(getActivity()));
  }
  if (mHasChallenge) {
    Intent intent=new Intent();
    byte[] token=utils.verifyPattern(mChosenPattern,mChallenge);
    intent.putExtra(ChooseLockSettingsHelper.EXTRA_KEY_CHALLENGE_TOKEN,token);
    getActivity().setResult(RESULT_FINISHED,intent);
  }
 else {
    getActivity().setResult(RESULT_FINISHED);
  }
  getActivity().finish();
  mDone=true;
}
