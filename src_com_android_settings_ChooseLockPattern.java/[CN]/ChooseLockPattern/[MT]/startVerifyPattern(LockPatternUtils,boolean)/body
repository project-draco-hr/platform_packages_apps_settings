{
  mLockPatternView.disableInput();
  if (mPendingLockCheck != null) {
    mPendingLockCheck.cancel(false);
  }
  mPendingLockCheck=LockPatternChecker.verifyPattern(utils,mChosenPattern,mChallenge,UserHandle.myUserId(),new LockPatternChecker.OnVerifyCallback(){
    @Override public void onVerified(    byte[] token,    int timeoutMs){
      if (token == null) {
        Log.e(TAG,"critical: no token returned for known good pattern");
      }
      mLockPatternView.enableInput();
      mPendingLockCheck=null;
      if (!wasSecureBefore) {
        Intent intent=getRedactionInterstitialIntent(getActivity());
        if (intent != null) {
          startActivity(intent);
        }
      }
      Intent intent=new Intent();
      intent.putExtra(ChooseLockSettingsHelper.EXTRA_KEY_CHALLENGE_TOKEN,token);
      getActivity().setResult(RESULT_FINISHED,intent);
      doFinish();
    }
  }
);
}
