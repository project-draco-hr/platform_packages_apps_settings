{
  final Stage previousStage=mUiStage;
  mUiStage=stage;
  if (stage == Stage.ChoiceTooShort) {
    mHeaderText.setText(getResources().getString(stage.headerMessage,LockPatternUtils.MIN_LOCK_PATTERN_SIZE));
  }
 else {
    mHeaderText.setText(stage.headerMessage);
  }
  if (stage.footerMessage == ID_EMPTY_MESSAGE) {
    mFooterText.setText("");
  }
 else {
    mFooterText.setText(stage.footerMessage);
  }
  if (stage.leftMode == LeftButtonMode.Gone) {
    mFooterLeftButton.setVisibility(View.GONE);
  }
 else {
    mFooterLeftButton.setVisibility(View.VISIBLE);
    mFooterLeftButton.setText(stage.leftMode.text);
    mFooterLeftButton.setEnabled(stage.leftMode.enabled);
  }
  mFooterRightButton.setText(stage.rightMode.text);
  mFooterRightButton.setEnabled(stage.rightMode.enabled);
  if (stage.patternEnabled) {
    mLockPatternView.enableInput();
  }
 else {
    mLockPatternView.disableInput();
  }
  mLockPatternView.setDisplayMode(DisplayMode.Correct);
switch (mUiStage) {
case Introduction:
    mLockPatternView.clearPattern();
  break;
case HelpScreen:
mLockPatternView.setPattern(DisplayMode.Animate,mAnimatePattern);
break;
case ChoiceTooShort:
mLockPatternView.setDisplayMode(DisplayMode.Wrong);
postClearPatternRunnable();
break;
case FirstChoiceValid:
break;
case NeedToConfirm:
mLockPatternView.clearPattern();
break;
case ConfirmWrong:
mLockPatternView.setDisplayMode(DisplayMode.Wrong);
postClearPatternRunnable();
break;
case ChoiceConfirmed:
break;
}
if (previousStage != stage) {
mHeaderText.announceForAccessibility(mHeaderText.getText());
}
}
