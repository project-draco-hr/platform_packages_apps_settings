{
  final int storedQuality=mLockPatternUtils.getKeyguardStoredPasswordQuality();
  View view=inflater.inflate(R.layout.confirm_lock_password,null);
  view.findViewById(R.id.cancel_button).setOnClickListener(this);
  mContinueButton=(Button)view.findViewById(R.id.next_button);
  mContinueButton.setOnClickListener(this);
  mContinueButton.setEnabled(false);
  mPasswordEntry=(TextView)view.findViewById(R.id.password_entry);
  mPasswordEntry.setOnEditorActionListener(this);
  mPasswordEntry.addTextChangedListener(this);
  mKeyboardView=(PasswordEntryKeyboardView)view.findViewById(R.id.keyboard);
  mHeaderText=(TextView)view.findViewById(R.id.headerText);
  mIsAlpha=DevicePolicyManager.PASSWORD_QUALITY_ALPHABETIC == storedQuality || DevicePolicyManager.PASSWORD_QUALITY_ALPHANUMERIC == storedQuality || DevicePolicyManager.PASSWORD_QUALITY_COMPLEX == storedQuality;
  mHeaderText.setText(getDefaultHeader());
  final Activity activity=getActivity();
  mKeyboardHelper=new PasswordEntryKeyboardHelper(activity,mKeyboardView,mPasswordEntry);
  mKeyboardHelper.setKeyboardMode(mIsAlpha ? PasswordEntryKeyboardHelper.KEYBOARD_MODE_ALPHA : PasswordEntryKeyboardHelper.KEYBOARD_MODE_NUMERIC);
  mKeyboardView.requestFocus();
  int currentType=mPasswordEntry.getInputType();
  mPasswordEntry.setInputType(mIsAlpha ? currentType : (InputType.TYPE_CLASS_NUMBER | InputType.TYPE_NUMBER_VARIATION_PASSWORD));
  if (activity instanceof PreferenceActivity) {
    final PreferenceActivity preferenceActivity=(PreferenceActivity)activity;
    int id=getDefaultHeader();
    CharSequence title=getText(id);
    preferenceActivity.showBreadCrumbs(title,title);
  }
  return view;
}
