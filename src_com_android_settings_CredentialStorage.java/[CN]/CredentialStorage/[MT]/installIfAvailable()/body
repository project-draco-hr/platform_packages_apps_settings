{
  if (mInstallBundle != null && !mInstallBundle.isEmpty()) {
    Bundle bundle=mInstallBundle;
    mInstallBundle=null;
    final int uid=bundle.getInt(Credentials.EXTRA_INSTALL_AS_UID,-1);
    if (bundle.containsKey(Credentials.EXTRA_USER_PRIVATE_KEY_NAME)) {
      String key=bundle.getString(Credentials.EXTRA_USER_PRIVATE_KEY_NAME);
      byte[] value=bundle.getByteArray(Credentials.EXTRA_USER_PRIVATE_KEY_DATA);
      int flags=KeyStore.FLAG_ENCRYPTED;
      if (uid == Process.WIFI_UID && isHardwareBackedKey(value)) {
        Log.d(TAG,"Saving private key with FLAG_NONE for WIFI_UID");
        flags=KeyStore.FLAG_NONE;
      }
      if (!mKeyStore.importKey(key,value,uid,flags)) {
        Log.e(TAG,"Failed to install " + key + " as user "+ uid);
        return;
      }
    }
    int flags=(uid == Process.WIFI_UID) ? KeyStore.FLAG_NONE : KeyStore.FLAG_ENCRYPTED;
    if (bundle.containsKey(Credentials.EXTRA_USER_CERTIFICATE_NAME)) {
      String certName=bundle.getString(Credentials.EXTRA_USER_CERTIFICATE_NAME);
      byte[] certData=bundle.getByteArray(Credentials.EXTRA_USER_CERTIFICATE_DATA);
      if (!mKeyStore.put(certName,certData,uid,flags)) {
        Log.e(TAG,"Failed to install " + certName + " as user "+ uid);
        return;
      }
    }
    if (bundle.containsKey(Credentials.EXTRA_CA_CERTIFICATES_NAME)) {
      String caListName=bundle.getString(Credentials.EXTRA_CA_CERTIFICATES_NAME);
      byte[] caListData=bundle.getByteArray(Credentials.EXTRA_CA_CERTIFICATES_DATA);
      if (!mKeyStore.put(caListName,caListData,uid,flags)) {
        Log.e(TAG,"Failed to install " + caListName + " as user "+ uid);
        return;
      }
    }
    setResult(RESULT_OK);
  }
}
