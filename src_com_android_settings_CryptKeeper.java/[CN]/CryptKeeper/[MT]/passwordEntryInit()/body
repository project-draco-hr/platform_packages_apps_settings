{
  mPasswordEntry=(EditText)findViewById(R.id.passwordEntry);
  if (mPasswordEntry != null) {
    mPasswordEntry.setOnEditorActionListener(this);
    mPasswordEntry.requestFocus();
    mPasswordEntry.setOnKeyListener(this);
    mPasswordEntry.setOnTouchListener(this);
    mPasswordEntry.addTextChangedListener(this);
  }
  mLockPatternView=(LockPatternView)findViewById(R.id.lockPattern);
  if (mLockPatternView != null) {
    mLockPatternView.setOnPatternListener(mChooseNewLockPatternListener);
  }
  if (!getTelephonyManager().isVoiceCapable()) {
    final View emergencyCall=findViewById(R.id.emergencyCallButton);
    if (emergencyCall != null) {
      Log.d(TAG,"Removing the emergency Call button");
      emergencyCall.setVisibility(View.GONE);
    }
  }
  final View imeSwitcher=findViewById(R.id.switch_ime_button);
  final InputMethodManager imm=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
  if (imeSwitcher != null && hasMultipleEnabledIMEsOrSubtypes(imm,false)) {
    imeSwitcher.setVisibility(View.VISIBLE);
    imeSwitcher.setOnClickListener(new OnClickListener(){
      @Override public void onClick(      View v){
        imm.showInputMethodPicker(false);
      }
    }
);
  }
  if (mWakeLock == null) {
    Log.d(TAG,"Acquiring wakelock.");
    final PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);
    if (pm != null) {
      mWakeLock=pm.newWakeLock(PowerManager.FULL_WAKE_LOCK,TAG);
      mWakeLock.acquire();
      mReleaseWakeLockCountdown=96;
    }
  }
  if (mLockPatternView == null && !mCooldown) {
    mHandler.postDelayed(new Runnable(){
      @Override public void run(){
        imm.showSoftInputUnchecked(0,null);
      }
    }
,0);
  }
  updateEmergencyCallButtonState();
  mHandler.removeMessages(MESSAGE_NOTIFY);
  mHandler.sendEmptyMessageDelayed(MESSAGE_NOTIFY,120 * 1000);
  getWindow().addFlags(WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD | WindowManager.LayoutParams.FLAG_SHOW_WHEN_LOCKED);
}
