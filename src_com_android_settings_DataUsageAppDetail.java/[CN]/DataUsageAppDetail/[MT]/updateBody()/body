{
  final PackageManager pm=getActivity().getPackageManager();
  mUid=getArguments().getInt(Intent.EXTRA_UID);
  mTitle.setText(pm.getNameForUid(mUid));
  final String[] packageNames=pm.getPackagesForUid(mUid);
  if (packageNames != null && packageNames.length > 0) {
    mAppSettingsIntent=new Intent(Intent.ACTION_MANAGE_NETWORK_USAGE);
    mAppSettingsIntent.setPackage(packageNames[0]);
    mAppSettingsIntent.addCategory(Intent.CATEGORY_DEFAULT);
    final boolean matchFound=pm.resolveActivity(mAppSettingsIntent,0) != null;
    mAppSettings.setEnabled(matchFound);
  }
 else {
    mAppSettingsIntent=null;
    mAppSettings.setEnabled(false);
  }
  try {
    mHistory=mStatsService.getHistoryForUid(mUid,TEMPLATE_MOBILE_ALL);
  }
 catch (  RemoteException e) {
    throw new RuntimeException("problem reading network stats",e);
  }
  mChart.bindNetworkStats(mHistory);
  final long[] bounds=getHistoryBounds(mHistory);
  mChart.setVisibleRange(bounds[0],bounds[1] + DateUtils.WEEK_IN_MILLIS,bounds[1]);
  updateDetailData();
  final Context context=getActivity();
  if (NetworkPolicyManager.isUidValidForPolicy(context,mUid)) {
    mRestrictBackgroundView.setVisibility(View.VISIBLE);
    final int uidPolicy;
    try {
      uidPolicy=mPolicyService.getUidPolicy(mUid);
    }
 catch (    RemoteException e) {
      throw new RuntimeException("problem reading network policy",e);
    }
    final boolean restrictBackground=(mUidPolicy & POLICY_REJECT_PAID_BACKGROUND) != 0;
    mRestrictBackground.setChecked(restrictBackground);
    refreshPreferenceViews();
  }
 else {
    mRestrictBackgroundView.setVisibility(View.GONE);
  }
}
