{
  mItems.clear();
  mLargest=0;
  final int currentUserId=ActivityManager.getCurrentUser();
  final List<UserHandle> profiles=mUm.getUserProfiles();
  final SparseArray<AppItem> knownItems=new SparseArray<AppItem>();
  NetworkStats.Entry entry=null;
  final int size=stats != null ? stats.size() : 0;
  for (int i=0; i < size; i++) {
    entry=stats.getValues(i,entry);
    final int uid=entry.uid;
    final int collapseKey;
    final int category;
    final int userId=UserHandle.getUserId(uid);
    if (UserHandle.isApp(uid)) {
      if (profiles.contains(new UserHandle(userId))) {
        if (userId != currentUserId) {
          final int managedKey=UidDetailProvider.buildKeyForUser(userId);
          accumulate(managedKey,knownItems,entry,AppItem.CATEGORY_USER);
        }
        collapseKey=uid;
        category=AppItem.CATEGORY_APP;
      }
 else {
        collapseKey=UidDetailProvider.buildKeyForUser(userId);
        category=AppItem.CATEGORY_USER;
      }
    }
 else     if (uid == UID_REMOVED || uid == UID_TETHERING) {
      collapseKey=uid;
      category=AppItem.CATEGORY_APP;
    }
 else {
      collapseKey=android.os.Process.SYSTEM_UID;
      category=AppItem.CATEGORY_APP;
    }
    accumulate(collapseKey,knownItems,entry,category);
  }
  final int restrictedUidsMax=restrictedUids.length;
  for (int i=0; i < restrictedUidsMax; ++i) {
    final int uid=restrictedUids[i];
    if (!profiles.contains(new UserHandle(UserHandle.getUserId(uid)))) {
      continue;
    }
    AppItem item=knownItems.get(uid);
    if (item == null) {
      item=new AppItem(uid);
      item.total=-1;
      mItems.add(item);
      knownItems.put(item.key,item);
    }
    item.restricted=true;
  }
  if (!mItems.isEmpty()) {
    final AppItem title=new AppItem();
    title.category=AppItem.CATEGORY_APP_TITLE;
    mItems.add(title);
  }
  Collections.sort(mItems);
  notifyDataSetChanged();
}
