{
  mItems.clear();
  final AppItem systemItem=new AppItem(android.os.Process.SYSTEM_UID);
  final SparseArray<AppItem> knownUids=new SparseArray<AppItem>();
  NetworkStats.Entry entry=null;
  final int size=stats != null ? stats.size() : 0;
  for (int i=0; i < size; i++) {
    entry=stats.getValues(i,entry);
    final boolean isApp=UserHandle.isApp(entry.uid);
    final int appId=isApp ? UserHandle.getAppId(entry.uid) : entry.uid;
    if (isApp || appId == UID_REMOVED || appId == UID_TETHERING) {
      AppItem item=knownUids.get(appId);
      if (item == null) {
        item=new AppItem(appId);
        knownUids.put(appId,item);
        mItems.add(item);
      }
      item.total+=entry.rxBytes + entry.txBytes;
      item.addUid(entry.uid);
    }
 else {
      systemItem.total+=entry.rxBytes + entry.txBytes;
      systemItem.addUid(entry.uid);
    }
  }
  for (  int appId : restrictedAppIds) {
    AppItem item=knownUids.get(appId);
    if (item == null) {
      item=new AppItem(appId);
      item.total=-1;
      mItems.add(item);
    }
    item.restricted=true;
  }
  if (systemItem.total > 0) {
    mItems.add(systemItem);
  }
  Collections.sort(mItems);
  mLargest=(mItems.size() > 0) ? mItems.get(0).total : 0;
  notifyDataSetChanged();
}
