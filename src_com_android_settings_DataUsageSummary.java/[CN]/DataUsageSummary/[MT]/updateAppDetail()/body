{
  final Context context=getActivity();
  final PackageManager pm=context.getPackageManager();
  final LayoutInflater inflater=getActivity().getLayoutInflater();
  if (isAppDetailMode()) {
    mAppDetail.setVisibility(View.VISIBLE);
    mCycleAdapter.setChangeVisible(false);
  }
 else {
    mAppDetail.setVisibility(View.GONE);
    mCycleAdapter.setChangeVisible(true);
    mChart.bindDetailNetworkStats(null);
    return;
  }
  mChart.bindNetworkPolicy(null);
  final int primaryUid=getAppDetailPrimaryUid();
  final UidDetail detail=mUidDetailProvider.getUidDetail(primaryUid,true);
  mAppIcon.setImageDrawable(detail.icon);
  mAppTitles.removeAllViews();
  if (detail.detailLabels != null) {
    for (    CharSequence label : detail.detailLabels) {
      mAppTitles.addView(inflateAppTitle(inflater,mAppTitles,label));
    }
  }
 else {
    mAppTitles.addView(inflateAppTitle(inflater,mAppTitles,detail.label));
  }
  final String[] packageNames=pm.getPackagesForUid(primaryUid);
  if (packageNames != null && packageNames.length > 0) {
    mAppSettingsIntent=new Intent(Intent.ACTION_MANAGE_NETWORK_USAGE);
    mAppSettingsIntent.setPackage(packageNames[0]);
    mAppSettingsIntent.addCategory(Intent.CATEGORY_DEFAULT);
    final boolean matchFound=pm.resolveActivity(mAppSettingsIntent,0) != null;
    mAppSettings.setEnabled(matchFound);
  }
 else {
    mAppSettingsIntent=null;
    mAppSettings.setEnabled(false);
  }
  updateDetailData();
  if (NetworkPolicyManager.isUidValidForPolicy(context,primaryUid) && !getRestrictBackground() && isBandwidthControlEnabled()&& hasMobileRadio(context)) {
    setPreferenceTitle(mAppRestrictView,R.string.data_usage_app_restrict_background);
    if (hasLimitedNetworks()) {
      setPreferenceSummary(mAppRestrictView,getString(R.string.data_usage_app_restrict_background_summary));
    }
 else {
      setPreferenceSummary(mAppRestrictView,getString(R.string.data_usage_app_restrict_background_summary_disabled));
    }
    mAppRestrictView.setVisibility(View.VISIBLE);
    mAppRestrict.setChecked(getAppRestrictBackground());
  }
 else {
    mAppRestrictView.setVisibility(View.GONE);
  }
}
