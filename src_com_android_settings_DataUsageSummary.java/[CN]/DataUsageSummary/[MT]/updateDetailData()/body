{
  if (LOGD)   Log.d(TAG,"updateDetailData()");
  final long start=mChart.getInspectStart();
  final long end=mChart.getInspectEnd();
  final long now=System.currentTimeMillis();
  final Context context=getActivity();
  NetworkStatsHistory.Entry entry=null;
  if (isAppDetailMode() && mChartData != null && mChartData.detail != null) {
    entry=mChartData.detailDefault.getValues(start,end,now,entry);
    final long defaultBytes=entry.rxBytes + entry.txBytes;
    entry=mChartData.detailForeground.getValues(start,end,now,entry);
    final long foregroundBytes=entry.rxBytes + entry.txBytes;
    final long totalBytes=defaultBytes + foregroundBytes;
    if (mAppTotal != null) {
      mAppTotal.setText(Formatter.formatFileSize(context,totalBytes));
    }
    mAppBackground.setText(Formatter.formatFileSize(context,defaultBytes));
    mAppForeground.setText(Formatter.formatFileSize(context,foregroundBytes));
    entry=mChartData.detail.getValues(start,end,now,null);
    getLoaderManager().destroyLoader(LOADER_SUMMARY);
    mCycleSummary.setVisibility(View.GONE);
  }
 else {
    if (mChartData != null) {
      entry=mChartData.network.getValues(start,end,now,null);
    }
    mCycleSummary.setVisibility(View.VISIBLE);
    getLoaderManager().restartLoader(LOADER_SUMMARY,SummaryForAllUidLoader.buildArgs(mTemplate,start,end),mSummaryCallbacks);
  }
  final long totalBytes=entry != null ? entry.rxBytes + entry.txBytes : 0;
  final String totalPhrase=Formatter.formatFileSize(context,totalBytes);
  mCycleSummary.setText(totalPhrase);
  if (TAB_MOBILE.equals(mCurrentTab) || TAB_3G.equals(mCurrentTab) || TAB_4G.equals(mCurrentTab)) {
    if (isAppDetailMode()) {
      mDisclaimer.setVisibility(View.GONE);
    }
 else {
      mDisclaimer.setVisibility(View.VISIBLE);
    }
  }
 else {
    mDisclaimer.setVisibility(View.GONE);
  }
  ensureLayoutTransitions();
}
