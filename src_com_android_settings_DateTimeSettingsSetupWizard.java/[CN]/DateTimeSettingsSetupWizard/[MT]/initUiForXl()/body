{
  final boolean autoTimeZoneEnabled=false;
  final CompoundButton autoTimeZoneButton=(CompoundButton)findViewById(R.id.time_zone_auto);
  autoTimeZoneButton.setChecked(autoTimeZoneEnabled);
  autoTimeZoneButton.setOnCheckedChangeListener(this);
  autoTimeZoneButton.setEnabled(false);
  final boolean autoDateTimeEnabled=isAutoDateTimeEnabled();
  final CompoundButton autoDateTimeButton=(CompoundButton)findViewById(R.id.date_time_auto);
  autoDateTimeButton.setChecked(autoDateTimeEnabled);
  autoDateTimeButton.setText(autoDateTimeEnabled ? R.string.date_time_auto_summaryOn : R.string.date_time_auto_summaryOff);
  autoDateTimeButton.setOnCheckedChangeListener(this);
  final TimeZone tz=TimeZone.getDefault();
  mTimeZone=(Button)findViewById(R.id.current_time_zone);
  mTimeZone.setText(DateTimeSettings.getTimeZoneText(tz));
  mTimeZone.setOnClickListener(this);
  mTimeZone.setEnabled(!autoDateTimeEnabled);
  mTimePicker=(TimePicker)findViewById(R.id.time_picker);
  mTimePicker.setEnabled(!autoDateTimeEnabled);
  mDatePicker=(DatePicker)findViewById(R.id.date_picker);
  mDatePicker.setEnabled(!autoDateTimeEnabled);
  mInputMethodManager=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
  ((ZonePicker)getFragmentManager().findFragmentById(R.id.zone_picker_fragment)).setZoneSelectionListener(this);
  ((Button)findViewById(R.id.next_button)).setOnClickListener(this);
  ((Button)findViewById(R.id.skip_button)).setOnClickListener(this);
}
