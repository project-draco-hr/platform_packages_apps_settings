{
  final View layoutRoot=findViewById(R.id.layout_root);
  layoutRoot.setSystemUiVisibility(View.STATUS_BAR_DISABLE_BACK);
  setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
  final TimeZone tz=TimeZone.getDefault();
  mSelectedTimeZone=tz;
  mTimeZoneButton=(Button)findViewById(R.id.time_zone_button);
  mTimeZoneButton.setText(tz.getDisplayName());
  mTimeZoneButton.setOnClickListener(this);
  mTimeZoneAdapter=ZonePicker.constructTimezoneAdapter(this,false,R.layout.date_time_setup_custom_list_item_2);
  final boolean autoDateTimeEnabled;
  final Intent intent=getIntent();
  if (intent.hasExtra(EXTRA_INITIAL_AUTO_DATETIME_VALUE)) {
    autoDateTimeEnabled=intent.getBooleanExtra(EXTRA_INITIAL_AUTO_DATETIME_VALUE,false);
  }
 else {
    autoDateTimeEnabled=isAutoDateTimeEnabled();
  }
  mAutoDateTimeButton=(CompoundButton)findViewById(R.id.date_time_auto_button);
  mAutoDateTimeButton.setChecked(autoDateTimeEnabled);
  mAutoDateTimeButton.setText(autoDateTimeEnabled ? R.string.date_time_auto_summaryOn : R.string.date_time_auto_summaryOff);
  mAutoDateTimeButton.setOnCheckedChangeListener(this);
  mTimePicker=(TimePicker)findViewById(R.id.time_picker);
  mTimePicker.setEnabled(!autoDateTimeEnabled);
  mDatePicker=(DatePicker)findViewById(R.id.date_picker);
  mDatePicker.setEnabled(!autoDateTimeEnabled);
  mDatePicker.setCalendarViewShown(false);
  mInputMethodManager=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
  ((Button)findViewById(R.id.next_button)).setOnClickListener(this);
  final Button skipButton=(Button)findViewById(R.id.skip_button);
  if (skipButton != null) {
    skipButton.setOnClickListener(this);
  }
}
