{
  super.onCreate(icicle);
  mWindowManager=IWindowManager.Stub.asInterface(ServiceManager.getService("window"));
  mBackupManager=IBackupManager.Stub.asInterface(ServiceManager.getService(Context.BACKUP_SERVICE));
  addPreferencesFromResource(R.xml.development_prefs);
  mEnableAdb=(CheckBoxPreference)findPreference(ENABLE_ADB);
  mAllPrefs.add(mEnableAdb);
  mResetCbPrefs.add(mEnableAdb);
  mKeepScreenOn=(CheckBoxPreference)findPreference(KEEP_SCREEN_ON);
  mAllPrefs.add(mKeepScreenOn);
  mResetCbPrefs.add(mKeepScreenOn);
  mAllowMockLocation=(CheckBoxPreference)findPreference(ALLOW_MOCK_LOCATION);
  mAllPrefs.add(mAllowMockLocation);
  mResetCbPrefs.add(mAllowMockLocation);
  mPassword=(PreferenceScreen)findPreference(LOCAL_BACKUP_PASSWORD);
  mAllPrefs.add(mPassword);
  mDebugAppPref=findPreference(DEBUG_APP_KEY);
  mAllPrefs.add(mDebugAppPref);
  mWaitForDebugger=(CheckBoxPreference)findPreference(WAIT_FOR_DEBUGGER_KEY);
  mAllPrefs.add(mWaitForDebugger);
  mResetCbPrefs.add(mWaitForDebugger);
  mStrictMode=(CheckBoxPreference)findPreference(STRICT_MODE_KEY);
  mAllPrefs.add(mStrictMode);
  mResetCbPrefs.add(mStrictMode);
  mPointerLocation=(CheckBoxPreference)findPreference(POINTER_LOCATION_KEY);
  mAllPrefs.add(mPointerLocation);
  mResetCbPrefs.add(mPointerLocation);
  mShowTouches=(CheckBoxPreference)findPreference(SHOW_TOUCHES_KEY);
  mAllPrefs.add(mShowTouches);
  mResetCbPrefs.add(mShowTouches);
  mShowScreenUpdates=(CheckBoxPreference)findPreference(SHOW_SCREEN_UPDATES_KEY);
  mAllPrefs.add(mShowScreenUpdates);
  mResetCbPrefs.add(mShowScreenUpdates);
  mDisableOverlays=(CheckBoxPreference)findPreference(DISABLE_OVERLAYS_KEY);
  mAllPrefs.add(mDisableOverlays);
  mResetCbPrefs.add(mDisableOverlays);
  mShowCpuUsage=(CheckBoxPreference)findPreference(SHOW_CPU_USAGE_KEY);
  mAllPrefs.add(mShowCpuUsage);
  mResetCbPrefs.add(mShowCpuUsage);
  mForceHardwareUi=(CheckBoxPreference)findPreference(FORCE_HARDWARE_UI_KEY);
  mAllPrefs.add(mForceHardwareUi);
  mResetCbPrefs.add(mForceHardwareUi);
  mWindowAnimationScale=(ListPreference)findPreference(WINDOW_ANIMATION_SCALE_KEY);
  mAllPrefs.add(mWindowAnimationScale);
  mWindowAnimationScale.setOnPreferenceChangeListener(this);
  mTransitionAnimationScale=(ListPreference)findPreference(TRANSITION_ANIMATION_SCALE_KEY);
  mAllPrefs.add(mTransitionAnimationScale);
  mTransitionAnimationScale.setOnPreferenceChangeListener(this);
  mAnimatorDurationScale=(ListPreference)findPreference(ANIMATOR_DURATION_SCALE_KEY);
  mAllPrefs.add(mAnimatorDurationScale);
  mAnimatorDurationScale.setOnPreferenceChangeListener(this);
  mImmediatelyDestroyActivities=(CheckBoxPreference)findPreference(IMMEDIATELY_DESTROY_ACTIVITIES_KEY);
  mAllPrefs.add(mImmediatelyDestroyActivities);
  mResetCbPrefs.add(mImmediatelyDestroyActivities);
  mAppProcessLimit=(ListPreference)findPreference(APP_PROCESS_LIMIT_KEY);
  mAllPrefs.add(mAppProcessLimit);
  mAppProcessLimit.setOnPreferenceChangeListener(this);
  mShowAllANRs=(CheckBoxPreference)findPreference(SHOW_ALL_ANRS_KEY);
  mAllPrefs.add(mShowAllANRs);
  mResetCbPrefs.add(mShowAllANRs);
  final Preference verifierDeviceIdentifier=findPreference(VERIFIER_DEVICE_IDENTIFIER);
  final PackageManager pm=getActivity().getPackageManager();
  final VerifierDeviceIdentity verifierIndentity=pm.getVerifierDeviceIdentity();
  if (verifierIndentity != null) {
    verifierDeviceIdentifier.setSummary(verifierIndentity.toString());
  }
  Preference hdcpChecking=findPreference(HDCP_CHECKING_KEY);
  if (hdcpChecking != null) {
    mAllPrefs.add(hdcpChecking);
  }
  removeHdcpOptionsForProduction();
}
