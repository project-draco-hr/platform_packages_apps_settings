{
  if (HDCP_CHECKING_KEY.equals(preference.getKey())) {
    SystemProperties.set(HDCP_CHECKING_PROPERTY,newValue.toString());
    updateHdcpValues();
    pokeSystemProperties();
    return true;
  }
 else   if (preference == mLogdSize) {
    writeLogdSizeOption(newValue);
    return true;
  }
 else   if (preference == mWindowAnimationScale) {
    writeAnimationScaleOption(0,mWindowAnimationScale,newValue);
    return true;
  }
 else   if (preference == mTransitionAnimationScale) {
    writeAnimationScaleOption(1,mTransitionAnimationScale,newValue);
    return true;
  }
 else   if (preference == mAnimatorDurationScale) {
    writeAnimationScaleOption(2,mAnimatorDurationScale,newValue);
    return true;
  }
 else   if (preference == mOverlayDisplayDevices) {
    writeOverlayDisplayDevicesOptions(newValue);
    return true;
  }
 else   if (preference == mOpenGLTraces) {
    writeOpenGLTracesOptions(newValue);
    return true;
  }
 else   if (preference == mTrackFrameTime) {
    writeTrackFrameTimeOptions(newValue);
    return true;
  }
 else   if (preference == mDebugHwOverdraw) {
    writeDebugHwOverdrawOptions(newValue);
    return true;
  }
 else   if (preference == mShowNonRectClip) {
    writeShowNonRectClipOptions(newValue);
    return true;
  }
 else   if (preference == mAppProcessLimit) {
    writeAppProcessLimitOptions(newValue);
    return true;
  }
 else   if (preference == mSimulateColorSpace) {
    writeSimulateColorSpace(newValue);
    return true;
  }
  return false;
}
