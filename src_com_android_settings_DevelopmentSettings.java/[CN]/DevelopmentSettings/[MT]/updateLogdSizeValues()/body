{
  if (mLogdSize != null) {
    String currentTag=SystemProperties.get(SELECT_LOGD_TAG_PROPERTY);
    String currentValue=SystemProperties.get(SELECT_LOGD_SIZE_PROPERTY);
    if ((currentTag != null) && currentTag.equals("S")) {
      currentValue="32768";
    }
    if (currentValue == null) {
      currentValue=SystemProperties.get(SELECT_LOGD_DEFAULT_SIZE_PROPERTY);
      if (currentValue == null) {
        if (SystemProperties.get("ro.config.low_ram").equals("true")) {
          currentValue="64K";
        }
 else {
          currentValue="256K";
        }
      }
    }
    String[] values=getResources().getStringArray(R.array.select_logd_size_values);
    String[] titles=getResources().getStringArray(R.array.select_logd_size_titles);
    int index=2;
    if (SystemProperties.get("ro.config.low_ram").equals("true")) {
      mLogdSize.setEntries(R.array.select_logd_size_lowram_titles);
      titles=getResources().getStringArray(R.array.select_logd_size_lowram_titles);
      index=1;
    }
    String[] summaries=getResources().getStringArray(R.array.select_logd_size_summaries);
    for (int i=0; i < titles.length; i++) {
      if (currentValue.equals(values[i]) || currentValue.equals(titles[i])) {
        index=i;
        break;
      }
    }
    mLogdSize.setValue(values[index]);
    mLogdSize.setSummary(summaries[index]);
    mLogdSize.setOnPreferenceChangeListener(this);
  }
}
