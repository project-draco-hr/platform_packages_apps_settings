{
  final int initialDensity=getInitialDisplayDensity(mDisplayId);
  if (initialDensity <= 0) {
    return false;
  }
  final Resources res=getContext().getResources();
  final DisplayMetrics metrics=res.getDisplayMetrics();
  final int currentDensity=metrics.densityDpi;
  int currentDensityIndex=-1;
  final int minDimensionPx=Math.min(metrics.widthPixels,metrics.heightPixels);
  final int maxDensity=DisplayMetrics.DENSITY_MEDIUM * minDimensionPx / MIN_DIMENSION_DP;
  final float maxScale=Math.min(MAX_SCALE,maxDensity / (float)initialDensity);
  final float minScale=MIN_SCALE;
  final int numLarger=(int)MathUtils.constrain((maxScale - 1) / MIN_SCALE_INTERVAL,0,LARGER_SUMMARIES.length);
  final int numSmaller=(int)MathUtils.constrain((1 - minScale) / MIN_SCALE_INTERVAL,0,SMALLER_SUMMARIES.length);
  CharSequence[] values=new CharSequence[1 + numSmaller + numLarger];
  CharSequence[] entries=new CharSequence[values.length];
  int curIndex=0;
  if (numSmaller > 0) {
    final float interval=(1 - minScale) / numSmaller;
    for (int i=numSmaller - 1; i >= 0; i--) {
      final int density=(int)(initialDensity * (1 - (i + 1) * interval));
      if (currentDensity == density) {
        currentDensityIndex=curIndex;
      }
      values[curIndex]=Integer.toString(density);
      entries[curIndex]=res.getText(SMALLER_SUMMARIES[i]);
      curIndex++;
    }
  }
  if (currentDensity == initialDensity) {
    currentDensityIndex=curIndex;
  }
  values[curIndex]=Integer.toString(DENSITY_VALUE_NORMAL);
  entries[curIndex]=res.getText(DENSITY_SUMMARY_NORMAL);
  curIndex++;
  if (numLarger > 0) {
    final float interval=(maxScale - 1) / numLarger;
    for (int i=0; i < numLarger; i++) {
      final int density=(int)(initialDensity * (1 + (i + 1) * interval));
      if (currentDensity == density) {
        currentDensityIndex=curIndex;
      }
      values[curIndex]=Integer.toString(density);
      entries[curIndex]=res.getText(LARGER_SUMMARIES[i]);
      curIndex++;
    }
  }
  final int displayIndex;
  if (currentDensityIndex >= 0) {
    displayIndex=currentDensityIndex;
  }
 else {
    values=Arrays.copyOf(values,values.length + 1);
    values[curIndex]=res.getString(R.string.force_density_summary_custom,currentDensity);
    entries=Arrays.copyOf(entries,values.length + 1);
    entries[curIndex]=Integer.toString(currentDensity);
    displayIndex=curIndex;
  }
  super.setEntryValues(values);
  super.setEntries(entries);
  setValueIndex(displayIndex);
  return true;
}
