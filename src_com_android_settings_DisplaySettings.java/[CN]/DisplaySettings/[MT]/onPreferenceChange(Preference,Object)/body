{
  final String key=preference.getKey();
  if (KEY_SCREEN_TIMEOUT.equals(key)) {
    try {
      int value=Integer.parseInt((String)objValue);
      Settings.System.putInt(getContentResolver(),SCREEN_OFF_TIMEOUT,value);
      updateTimeoutPreferenceDescription(value);
    }
 catch (    NumberFormatException e) {
      Log.e(TAG,"could not persist screen timeout setting",e);
    }
  }
  if (KEY_FONT_SIZE.equals(key)) {
    writeFontSizePreference(objValue);
  }
  if (preference == mAutoBrightnessPreference) {
    boolean auto=(Boolean)objValue;
    Settings.System.putInt(getContentResolver(),SCREEN_BRIGHTNESS_MODE,auto ? SCREEN_BRIGHTNESS_MODE_AUTOMATIC : SCREEN_BRIGHTNESS_MODE_MANUAL);
  }
  if (preference == mLiftToWakePreference) {
    boolean value=(Boolean)objValue;
    Settings.Secure.putInt(getContentResolver(),WAKE_GESTURE_ENABLED,value ? 1 : 0);
  }
  if (preference == mDozePreference) {
    boolean value=(Boolean)objValue;
    Settings.Secure.putInt(getContentResolver(),DOZE_ENABLED,value ? 1 : 0);
  }
  return true;
}
