{
  super.onCreate(savedInstanceState);
  addPreferencesFromResource(R.xml.security_settings_encryption_interstitial);
  findPreference(KEY_ENCRYPT_DONT_REQUIRE_PASSWORD).setViewId(R.id.encrypt_dont_require_password);
  mRequirePasswordToDecrypt=findPreference(KEY_ENCRYPT_REQUIRE_PASSWORD);
  mDontRequirePasswordToDecrypt=findPreference(KEY_ENCRYPT_DONT_REQUIRE_PASSWORD);
  boolean forFingerprint=getActivity().getIntent().getBooleanExtra(ChooseLockSettingsHelper.EXTRA_KEY_FOR_FINGERPRINT,false);
  Intent intent=getActivity().getIntent();
  final int quality=intent.getIntExtra(EXTRA_PASSWORD_QUALITY,0);
  mUnlockMethodIntent=(Intent)intent.getParcelableExtra(EXTRA_UNLOCK_METHOD_INTENT);
  final int msgId;
  final int enableId;
  final int disableId;
switch (quality) {
case DevicePolicyManager.PASSWORD_QUALITY_SOMETHING:
    msgId=forFingerprint ? R.string.encryption_interstitial_message_pattern_for_fingerprint : R.string.encryption_interstitial_message_pattern;
  enableId=R.string.encrypt_require_pattern;
disableId=R.string.encrypt_dont_require_pattern;
break;
case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC:
case DevicePolicyManager.PASSWORD_QUALITY_NUMERIC_COMPLEX:
msgId=forFingerprint ? R.string.encryption_interstitial_message_pin_for_fingerprint : R.string.encryption_interstitial_message_pin;
enableId=R.string.encrypt_require_pin;
disableId=R.string.encrypt_dont_require_pin;
break;
default :
msgId=forFingerprint ? R.string.encryption_interstitial_message_password_for_fingerprint : R.string.encryption_interstitial_message_password;
enableId=R.string.encrypt_require_password;
disableId=R.string.encrypt_dont_require_password;
break;
}
TextView message=createHeaderView();
message.setText(msgId);
setHeaderView(message);
mRequirePasswordToDecrypt.setTitle(enableId);
mDontRequirePasswordToDecrypt.setTitle(disableId);
setRequirePasswordState(getActivity().getIntent().getBooleanExtra(EXTRA_REQUIRE_PASSWORD,true));
}
