{
  ArrayList<ResolveInfo> homeActivities=new ArrayList<ResolveInfo>();
  ComponentName currentDefaultHome=mPm.getHomeActivities(homeActivities);
  Context context=getActivity();
  mCurrentHome=null;
  mPrefGroup.removeAll();
  mPrefs=new ArrayList<HomeAppPreference>();
  mHomeComponentSet=new ComponentName[homeActivities.size()];
  int prefIndex=0;
  boolean hasManagedProfile=hasManagedProfile();
  for (int i=0; i < homeActivities.size(); i++) {
    final ResolveInfo candidate=homeActivities.get(i);
    final ActivityInfo info=candidate.activityInfo;
    ComponentName activityName=new ComponentName(info.packageName,info.name);
    mHomeComponentSet[i]=activityName;
    try {
      Drawable icon=info.loadIcon(mPm);
      CharSequence name=info.loadLabel(mPm);
      HomeAppPreference pref;
      if (hasManagedProfile && !launcherHasManagedProfilesFeature(candidate)) {
        pref=new HomeAppPreference(context,activityName,prefIndex,icon,name,this,info,false,getResources().getString(R.string.home_work_profile_not_supported));
      }
 else {
        pref=new HomeAppPreference(context,activityName,prefIndex,icon,name,this,info,true,null);
      }
      mPrefs.add(pref);
      mPrefGroup.addPreference(pref);
      if (activityName.equals(currentDefaultHome)) {
        mCurrentHome=pref;
      }
      prefIndex++;
    }
 catch (    Exception e) {
      Log.v(TAG,"Problem dealing with activity " + activityName,e);
    }
  }
  if (mCurrentHome != null) {
    new Handler().post(new Runnable(){
      public void run(){
        mCurrentHome.setChecked(true);
      }
    }
);
  }
}
