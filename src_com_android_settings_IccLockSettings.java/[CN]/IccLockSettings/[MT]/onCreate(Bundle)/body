{
  super.onCreate(savedInstanceState);
  final Context context=getApplicationContext();
  final TelephonyManager tm=(TelephonyManager)context.getSystemService(Context.TELEPHONY_SERVICE);
  final int numSims=tm.getSimCount();
  if (Utils.isMonkeyRunning()) {
    finish();
    return;
  }
  addPreferencesFromResource(R.xml.sim_lock_settings);
  mPinDialog=(EditPinPreference)findPreference(PIN_DIALOG);
  mPinToggle=(SwitchPreference)findPreference(PIN_TOGGLE);
  if (savedInstanceState != null && savedInstanceState.containsKey(DIALOG_STATE)) {
    mDialogState=savedInstanceState.getInt(DIALOG_STATE);
    mPin=savedInstanceState.getString(DIALOG_PIN);
    mError=savedInstanceState.getString(DIALOG_ERROR);
    mToState=savedInstanceState.getBoolean(ENABLE_TO_STATE);
switch (mDialogState) {
case ICC_NEW_MODE:
      mOldPin=savedInstanceState.getString(OLD_PINCODE);
    break;
case ICC_REENTER_MODE:
  mOldPin=savedInstanceState.getString(OLD_PINCODE);
mNewPin=savedInstanceState.getString(NEW_PINCODE);
break;
case ICC_LOCK_MODE:
case ICC_OLD_MODE:
default :
break;
}
}
mPinDialog.setOnPinEnteredListener(this);
getPreferenceScreen().setPersistent(false);
if (numSims > 1) {
setContentView(R.layout.icc_lock_tabs);
mTabHost=(TabHost)findViewById(android.R.id.tabhost);
mTabWidget=(TabWidget)findViewById(android.R.id.tabs);
mListView=(ListView)findViewById(android.R.id.list);
mTabHost.setup();
mTabHost.setOnTabChangedListener(mTabListener);
mTabHost.clearAllTabs();
for (int i=0; i < numSims; ++i) {
final SubscriptionInfo subInfo=Utils.findRecordBySlotId(this,i);
mTabHost.addTab(buildTabSpec(String.valueOf(i),String.valueOf(subInfo == null ? context.getString(R.string.sim_editor_title,i + 1) : subInfo.getDisplayName())));
}
}
mPhone=PhoneFactory.getDefaultPhone();
mRes=getResources();
updatePreferences();
}
