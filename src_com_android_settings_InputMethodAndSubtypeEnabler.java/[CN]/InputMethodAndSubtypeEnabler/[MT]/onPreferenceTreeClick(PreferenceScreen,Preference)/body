{
  if (preference instanceof CheckBoxPreference) {
    final CheckBoxPreference chkPref=(CheckBoxPreference)preference;
    final String id=chkPref.getKey();
    if (chkPref.isChecked()) {
      InputMethodInfo selImi=null;
      final int N=mInputMethodProperties.size();
      for (int i=0; i < N; i++) {
        InputMethodInfo imi=mInputMethodProperties.get(i);
        if (id.equals(imi.getId())) {
          selImi=imi;
          if (isSystemIme(imi)) {
            setSubtypesPreferenceEnabled(id,true);
            mLastTickedInputMethodId=id;
            return super.onPreferenceTreeClick(preferenceScreen,preference);
          }
          break;
        }
      }
      if (selImi == null) {
        return super.onPreferenceTreeClick(preferenceScreen,preference);
      }
      chkPref.setChecked(false);
      if (mDialog == null) {
        mDialog=(new AlertDialog.Builder(getActivity())).setTitle(android.R.string.dialog_alert_title).setIcon(android.R.drawable.ic_dialog_alert).setCancelable(true).setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int which){
            chkPref.setChecked(true);
            setSubtypesPreferenceEnabled(id,true);
            mLastTickedInputMethodId=id;
          }
        }
).setNegativeButton(android.R.string.cancel,new DialogInterface.OnClickListener(){
          public void onClick(          DialogInterface dialog,          int which){
          }
        }
).create();
      }
 else {
        if (mDialog.isShowing()) {
          mDialog.dismiss();
        }
      }
      mDialog.setMessage(getResources().getString(R.string.ime_security_warning,selImi.getServiceInfo().applicationInfo.loadLabel(getPackageManager())));
      mDialog.show();
    }
 else {
      if (id.equals(mLastTickedInputMethodId)) {
        mLastTickedInputMethodId=null;
      }
      setSubtypesPreferenceEnabled(id,false);
    }
  }
  return super.onPreferenceTreeClick(preferenceScreen,preference);
}
