{
  super.onCreate(icicle);
  mPm=getPackageManager();
  Intent intent=getIntent();
  final String packageName=intent.getStringExtra(ManageApplications.APP_PKG_NAME);
  mComputingStr=getText(R.string.computing_size);
  CharSequence totalSizeStr, appSizeStr, dataSizeStr;
  totalSizeStr=appSizeStr=dataSizeStr=mComputingStr;
  if (localLOGV)   Log.i(TAG,"Have to compute package sizes");
  mSizeObserver=new PkgSizeObserver();
  mPm.getPackageSizeInfo(packageName,mSizeObserver);
  try {
    mAppInfo=mPm.getApplicationInfo(packageName,PackageManager.GET_UNINSTALLED_PACKAGES);
  }
 catch (  NameNotFoundException e) {
    Log.e(TAG,"Exception when retrieving package:" + packageName,e);
    displayErrorDialog(R.string.app_not_found_dlg_text,true,true);
  }
  setContentView(R.layout.installed_app_details);
  ((ImageView)findViewById(R.id.app_icon)).setImageDrawable(mAppInfo.loadIcon(mPm));
  CharSequence appName=mAppInfo.loadLabel(mPm);
  if (appName == null) {
    appName=getString(_UNKNOWN_APP);
  }
  ((TextView)findViewById(R.id.app_name)).setText(appName);
  CharSequence appDesc=mAppInfo.loadDescription(mPm);
  if (appDesc != null) {
    ((TextView)findViewById(R.id.app_description)).setText(appDesc);
  }
  mTotalSize=(TextView)findViewById(R.id.total_size_text);
  mTotalSize.setText(totalSizeStr);
  mAppSize=(TextView)findViewById(R.id.application_size_text);
  mAppSize.setText(appSizeStr);
  mDataSize=(TextView)findViewById(R.id.data_size_text);
  mDataSize.setText(dataSizeStr);
  mAppButton=((Button)findViewById(R.id.uninstall_button));
  mCanUninstall=!isUninstallable();
  if (localLOGV)   Log.i(TAG,"Is systemPackage " + mCanUninstall);
  setAppBtnState();
  mManageSpaceButton=(Button)findViewById(R.id.manage_space_button);
  if (mAppInfo.manageSpaceActivityName != null) {
    mManageSpaceButton.setVisibility(View.VISIBLE);
    mManageSpaceButton.setOnClickListener(this);
  }
  mCachePanel=findViewById(R.id.cache_panel);
  mCacheSize=(TextView)findViewById(R.id.cache_size_text);
  mClearCacheButton=(Button)findViewById(R.id.clear_cache_button);
  mActivitiesButton=(Button)findViewById(R.id.clear_activities_button);
  List<ComponentName> prefActList=new ArrayList<ComponentName>();
  List<IntentFilter> intentList=new ArrayList<IntentFilter>();
  mPm.getPreferredActivities(intentList,prefActList,packageName);
  if (localLOGV)   Log.i(TAG,"Have " + prefActList.size() + " number of activities in prefered list");
  TextView autoLaunchView=(TextView)findViewById(R.id.auto_launch);
  if (prefActList.size() <= 0) {
    autoLaunchView.setText(R.string.auto_launch_disable_text);
    mActivitiesButton.setEnabled(false);
  }
 else {
    autoLaunchView.setText(R.string.auto_launch_enable_text);
    mActivitiesButton.setOnClickListener(this);
  }
  LinearLayout permsView=(LinearLayout)findViewById(R.id.permissions_section);
  AppSecurityPermissions asp=new AppSecurityPermissions(this,packageName);
  if (asp.getPermissionCount() > 0) {
    permsView.setVisibility(View.VISIBLE);
    LinearLayout securityList=(LinearLayout)permsView.findViewById(R.id.security_settings_list);
    securityList.addView(asp.getPermissionsView());
  }
 else {
    permsView.setVisibility(View.GONE);
  }
}
