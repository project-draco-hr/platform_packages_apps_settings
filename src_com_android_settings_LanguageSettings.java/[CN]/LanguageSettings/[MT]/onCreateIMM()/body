{
  InputMethodManager imm=(InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE);
  mInputMethodProperties=imm.getInputMethodList();
  mLastInputMethodId=Settings.Secure.getString(getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD);
  PreferenceGroup textCategory=(PreferenceGroup)findPreference("text_category");
  int N=(mInputMethodProperties == null ? 0 : mInputMethodProperties.size());
  for (int i=0; i < N; ++i) {
    InputMethodInfo property=mInputMethodProperties.get(i);
    String prefKey=property.getId();
    CharSequence label=property.loadLabel(getPackageManager());
    if (mHaveHardKeyboard || N > 1) {
      CheckBoxPreference chkbxPref=new CheckBoxPreference(this);
      chkbxPref.setKey(prefKey);
      chkbxPref.setTitle(label);
      textCategory.addPreference(chkbxPref);
      mCheckboxes.add(chkbxPref);
    }
    if (null != property.getSettingsActivity()) {
      PreferenceScreen prefScreen=new PreferenceScreen(this,null);
      prefScreen.setKey(property.getSettingsActivity());
      prefScreen.setTitle(label);
      if (N == 1) {
        prefScreen.setSummary(getString(R.string.onscreen_keyboard_settings_summary));
      }
 else {
        CharSequence settingsLabel=getResources().getString(R.string.input_methods_settings_label_format,label);
        prefScreen.setSummary(settingsLabel);
      }
      textCategory.addPreference(prefScreen);
    }
  }
}
