{
  super.onPause();
  StringBuilder builder=new StringBuilder(256);
  boolean haveLastInputMethod=false;
  int firstEnabled=-1;
  int N=mInputMethodProperties.size();
  for (int i=0; i < N; ++i) {
    final String id=mInputMethodProperties.get(i).getId();
    CheckBoxPreference pref=(CheckBoxPreference)findPreference(id);
    boolean hasIt=id.equals(mLastInputMethodId);
    if ((N == 1 && !mHaveHardKeyboard) || (pref != null && pref.isChecked())) {
      if (builder.length() > 0)       builder.append(':');
      builder.append(id);
      if (firstEnabled < 0) {
        firstEnabled=i;
      }
      if (hasIt)       haveLastInputMethod=true;
    }
 else     if (hasIt) {
      mLastInputMethodId=mLastTickedInputMethodId;
    }
  }
  if (null == mLastInputMethodId || "".equals(mLastInputMethodId)) {
    if (firstEnabled >= 0) {
      mLastInputMethodId=mInputMethodProperties.get(firstEnabled).getId();
    }
 else {
      mLastInputMethodId=null;
    }
  }
  Settings.Secure.putString(getContentResolver(),Settings.Secure.ENABLED_INPUT_METHODS,builder.toString());
  Settings.Secure.putString(getContentResolver(),Settings.Secure.DEFAULT_INPUT_METHOD,mLastInputMethodId);
}
