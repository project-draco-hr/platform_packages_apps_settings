{
  mInitiateButton=(Button)mContentView.findViewById(R.id.initiate_master_clear);
  mInitiateButton.setOnClickListener(mInitiateListener);
  mExternalStorageContainer=mContentView.findViewById(R.id.erase_external_container);
  mExternalStorage=(CheckBox)mContentView.findViewById(R.id.erase_external);
  boolean isExtStorageEmulated=Environment.isExternalStorageEmulated();
  if (isExtStorageEmulated || (!Environment.isExternalStorageRemovable() && isExtStorageEncrypted())) {
    mExternalStorageContainer.setVisibility(View.GONE);
    final View externalOption=mContentView.findViewById(R.id.erase_external_option_text);
    externalOption.setVisibility(View.GONE);
    final View externalAlsoErased=mContentView.findViewById(R.id.also_erases_external);
    externalAlsoErased.setVisibility(View.VISIBLE);
    mExternalStorage.setChecked(!isExtStorageEmulated);
  }
 else {
    mExternalStorageContainer.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        mExternalStorage.toggle();
      }
    }
);
  }
  final UserManager um=(UserManager)getActivity().getSystemService(Context.USER_SERVICE);
  loadAccountList(um);
  StringBuffer contentDescription=new StringBuffer();
  View masterClearContainer=mContentView.findViewById(R.id.master_clear_container);
  getContentDescription(masterClearContainer,contentDescription);
  masterClearContainer.setContentDescription(contentDescription);
}
