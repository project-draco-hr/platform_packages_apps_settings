{
  View accountsLabel=mContentView.findViewById(R.id.accounts_label);
  LinearLayout contents=(LinearLayout)mContentView.findViewById(R.id.accounts);
  contents.removeAllViews();
  Context context=getActivity();
  AccountManager mgr=AccountManager.get(context);
  Account[] accounts=mgr.getAccounts();
  final int N=accounts.length;
  if (N == 0) {
    accountsLabel.setVisibility(View.GONE);
    contents.setVisibility(View.GONE);
    return;
  }
  LayoutInflater inflater=(LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
  AuthenticatorDescription[] descs=AccountManager.get(context).getAuthenticatorTypes();
  final int M=descs.length;
  for (int i=0; i < N; i++) {
    Account account=accounts[i];
    AuthenticatorDescription desc=null;
    for (int j=0; j < M; j++) {
      if (account.type.equals(descs[j].type)) {
        desc=descs[j];
        break;
      }
    }
    if (desc == null) {
      Log.w(TAG,"No descriptor for account name=" + account.name + " type="+ account.type);
      continue;
    }
    Drawable icon=null;
    try {
      if (desc.iconId != 0) {
        Context authContext=context.createPackageContext(desc.packageName,0);
        icon=authContext.getDrawable(desc.iconId);
      }
    }
 catch (    PackageManager.NameNotFoundException e) {
      Log.w(TAG,"No icon for account type " + desc.type);
    }
    TextView child=(TextView)inflater.inflate(R.layout.master_clear_account,contents,false);
    child.setText(account.name);
    if (icon != null) {
      child.setCompoundDrawablesWithIntrinsicBounds(icon,null,null,null);
    }
    contents.addView(child);
  }
  accountsLabel.setVisibility(View.VISIBLE);
  contents.setVisibility(View.VISIBLE);
}
