{
  final int currentUserId=ActivityManager.getCurrentUser();
  try {
    StatusBarNotification[] active=mNoMan.getActiveNotifications(mContext.getPackageName());
    StatusBarNotification[] dismissed=mNoMan.getHistoricalNotifications(mContext.getPackageName(),50);
    List<HistoricalNotificationInfo> list=new ArrayList<HistoricalNotificationInfo>(active.length + dismissed.length);
    for (    StatusBarNotification[] resultset : new StatusBarNotification[][]{active,dismissed}) {
      for (      StatusBarNotification sbn : resultset) {
        final HistoricalNotificationInfo info=new HistoricalNotificationInfo();
        info.pkg=sbn.pkg;
        info.user=sbn.getUserId();
        info.icon=loadIconDrawable(info.pkg,info.user,sbn.notification.icon);
        info.pkgicon=loadPackageIconDrawable(info.pkg,info.user);
        info.pkgname=loadPackageName(info.pkg);
        if (sbn.notification.extras != null) {
          info.title=sbn.notification.extras.getString(Notification.EXTRA_TITLE);
          if (info.title == null || "".equals(info.title)) {
            info.title=sbn.notification.extras.getString(Notification.EXTRA_TEXT);
          }
        }
        if (info.title == null || "".equals(info.title)) {
          info.title=sbn.notification.tickerText;
        }
        if (info.title == null || "".equals(info.title)) {
          info.title=info.pkgname;
        }
        info.timestamp=sbn.postTime;
        info.priority=sbn.notification.priority;
        logd("   [%d] %s: %s",info.timestamp,info.pkg,info.title);
        info.active=(resultset == active);
        if (info.user == UserHandle.USER_ALL || info.user == currentUserId) {
          list.add(info);
        }
      }
    }
    return list;
  }
 catch (  RemoteException e) {
    e.printStackTrace();
  }
  return null;
}
