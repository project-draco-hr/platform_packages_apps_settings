{
  mServicesCategory.removeAll();
  final int installedServiceCount=sInstalledServicesList.size();
  for (int i=0; i < installedServiceCount; i++) {
    ResolveInfo installedService=sInstalledServicesList.get(i);
    PreferenceScreen preference=getPreferenceManager().createPreferenceScreen(getActivity());
    String title=installedService.loadLabel(getPackageManager()).toString();
    preference.setTitle(title);
    ComponentName componentName=new ComponentName(installedService.serviceInfo.packageName,installedService.serviceInfo.name);
    preference.setKey(componentName.flattenToString());
    final boolean serviceEnabled=sEnabledServiceNameSet.contains(componentName);
    if (serviceEnabled) {
      preference.setSummary(getString(R.string.print_feature_state_on));
    }
 else {
      preference.setSummary(getString(R.string.print_feature_state_off));
    }
    preference.setOrder(i);
    preference.setFragment(TogglePrintServicePreferenceFragment.class.getName());
    preference.setPersistent(false);
    Bundle extras=preference.getExtras();
    extras.putString(EXTRA_PREFERENCE_KEY,preference.getKey());
    extras.putBoolean(EXTRA_CHECKED,serviceEnabled);
    extras.putString(EXTRA_TITLE,title);
    PrintServiceInfo printServiceInfo=PrintServiceInfo.create(installedService,getActivity());
    CharSequence applicationLabel=installedService.loadLabel(getPackageManager());
    extras.putString(EXTRA_ENABLE_WARNING_TITLE,getString(R.string.print_service_security_warning_title,applicationLabel));
    extras.putString(EXTRA_ENABLE_WARNING_MESSAGE,getString(R.string.print_service_security_warning_summary,applicationLabel));
    String settingsClassName=printServiceInfo.getSettingsActivityName();
    if (!TextUtils.isEmpty(settingsClassName)) {
      extras.putString(EXTRA_SETTINGS_TITLE,getString(R.string.print_menu_item_settings));
      extras.putString(EXTRA_SETTINGS_COMPONENT_NAME,new ComponentName(installedService.serviceInfo.packageName,settingsClassName).flattenToString());
    }
    String addPrinterClassName=printServiceInfo.getAddPrintersActivityName();
    if (!TextUtils.isEmpty(addPrinterClassName)) {
      extras.putString(EXTRA_ADD_PRINTERS_TITLE,getString(R.string.print_menu_item_add_printers));
      extras.putString(EXTRA_ADD_PRINTERS_COMPONENT_NAME,new ComponentName(installedService.serviceInfo.packageName,addPrinterClassName).flattenToString());
    }
    extras.putString(EXTRA_SERVICE_COMPONENT_NAME,componentName.flattenToString());
    mServicesCategory.addPreference(preference);
  }
  if (mServicesCategory.getPreferenceCount() == 0) {
    if (mNoServicesMessagePreference == null) {
      mNoServicesMessagePreference=new Preference(getActivity()){
        @Override protected void onBindView(        View view){
          super.onBindView(view);
          TextView summaryView=(TextView)view.findViewById(R.id.summary);
          String title=getString(R.string.print_no_services_installed);
          summaryView.setText(title);
        }
      }
;
      mNoServicesMessagePreference.setPersistent(false);
      mNoServicesMessagePreference.setLayoutResource(R.layout.text_description_preference);
      mNoServicesMessagePreference.setSelectable(false);
    }
    mServicesCategory.addPreference(mNoServicesMessagePreference);
  }
}
