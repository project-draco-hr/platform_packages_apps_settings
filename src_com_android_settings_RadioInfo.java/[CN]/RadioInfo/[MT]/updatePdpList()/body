{
  StringBuilder sb=new StringBuilder("========DATA=======\n");
  List<PdpConnection> pdps=phone.getCurrentPdpList();
  for (  PdpConnection pdp : pdps) {
    sb.append("    State: ").append(pdp.getState().toString()).append("\n");
    if (pdp.getState().isActive()) {
      long timeElapsed=(System.currentTimeMillis() - pdp.getConnectionTime()) / 1000;
      sb.append("    connected at ").append(DateUtils.timeString(pdp.getConnectionTime())).append(" and elapsed ").append(DateUtils.formatElapsedTime(timeElapsed)).append("\n    to ").append(pdp.getApn().toString()).append("\ninterface: ").append(phone.getInterfaceName(phone.getActiveApn())).append("\naddress: ").append(phone.getIpAddress(phone.getActiveApn())).append("\ngateway: ").append(phone.getGateway(phone.getActiveApn()));
      String[] dns=phone.getDnsServers(phone.getActiveApn());
      sb.append("\ndns: ").append(dns[0]).append(", ").append(dns[1]);
    }
 else     if (pdp.getState().isInactive()) {
      sb.append("    disconnected with last try at ").append(DateUtils.timeString(pdp.getLastFailTime())).append("\n    fail because ").append(pdp.getLastFailCause().toString());
    }
 else {
      sb.append("    is connecting to ").append(pdp.getApn().toString());
    }
    sb.append("\n===================");
  }
  disconnects.setText(sb.toString());
}
