{
  super.onBindDialogView(view);
  for (int i=0; i < SEEKBAR_ID.length; i++) {
    SeekBar seekBar=(SeekBar)view.findViewById(SEEKBAR_ID[i]);
    mSeekBars[i]=seekBar;
    if (SEEKBAR_TYPE[i] == AudioManager.STREAM_MUSIC) {
      mSeekBarVolumizer[i]=new SeekBarVolumizer(getContext(),seekBar,SEEKBAR_TYPE[i],getMediaVolumeUri(getContext()));
    }
 else {
      mSeekBarVolumizer[i]=new SeekBarVolumizer(getContext(),seekBar,SEEKBAR_TYPE[i]);
    }
  }
  mNotificationsUseRingVolumeCheckbox=(CheckBox)view.findViewById(R.id.same_notification_volume);
  mNotificationsUseRingVolumeCheckbox.setOnCheckedChangeListener(this);
  mNotificationsUseRingVolumeCheckbox.setChecked(Settings.System.getInt(getContext().getContentResolver(),Settings.System.NOTIFICATIONS_USE_RING_VOLUME,1) == 1);
  if (Utils.isVoiceCapable(getContext())) {
    setNotificationVolumeVisibility(!mNotificationsUseRingVolumeCheckbox.isChecked());
  }
 else {
    setNotificationVolumeVisibility(true);
  }
  disableSettingsThatNeedVoice(view);
  for (int i=0; i < mCheckBoxes.length; i++) {
    ImageView checkbox=(ImageView)view.findViewById(CHECKBOX_VIEW_ID[i]);
    checkbox.setOnClickListener(this);
    mCheckBoxes[i]=checkbox;
  }
  updateSlidersAndMutedStates();
  if (mRingModeChangedReceiver == null) {
    final IntentFilter filter=new IntentFilter();
    filter.addAction(AudioManager.RINGER_MODE_CHANGED_ACTION);
    mRingModeChangedReceiver=new BroadcastReceiver(){
      public void onReceive(      Context context,      Intent intent){
        final String action=intent.getAction();
        if (AudioManager.RINGER_MODE_CHANGED_ACTION.equals(action)) {
          mHandler.sendMessage(mHandler.obtainMessage(MSG_RINGER_MODE_CHANGED,intent.getIntExtra(AudioManager.EXTRA_RINGER_MODE,-1),0));
        }
      }
    }
;
    getContext().registerReceiver(mRingModeChangedReceiver,filter);
  }
}
