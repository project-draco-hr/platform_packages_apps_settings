{
  super.onBindDialogView(view);
  for (int i=0; i < SEEKBAR_ID.length; i++) {
    SeekBar seekBar=(SeekBar)view.findViewById(SEEKBAR_ID[i]);
    mSeekBars[i]=seekBar;
    if (SEEKBAR_TYPE[i] == AudioManager.STREAM_MUSIC) {
      mSeekBarVolumizer[i]=new SeekBarVolumizer(getContext(),seekBar,SEEKBAR_TYPE[i],getMediaVolumeUri(getContext()));
    }
 else {
      mSeekBarVolumizer[i]=new SeekBarVolumizer(getContext(),seekBar,SEEKBAR_TYPE[i]);
    }
  }
  final int silentableStreams=System.getInt(getContext().getContentResolver(),System.MODE_RINGER_STREAMS_AFFECTED,((1 << AudioSystem.STREAM_NOTIFICATION) | (1 << AudioSystem.STREAM_RING)));
  for (int i=0; i < mCheckBoxes.length; i++) {
    ImageView checkbox=(ImageView)view.findViewById(CHECKBOX_VIEW_ID[i]);
    mCheckBoxes[i]=checkbox;
  }
  updateSlidersAndMutedStates();
  if (mRingModeChangedReceiver == null) {
    final IntentFilter filter=new IntentFilter();
    filter.addAction(AudioManager.RINGER_MODE_CHANGED_ACTION);
    mRingModeChangedReceiver=new BroadcastReceiver(){
      public void onReceive(      Context context,      Intent intent){
        final String action=intent.getAction();
        if (AudioManager.RINGER_MODE_CHANGED_ACTION.equals(action)) {
          mHandler.sendMessage(mHandler.obtainMessage(MSG_RINGER_MODE_CHANGED,intent.getIntExtra(AudioManager.EXTRA_RINGER_MODE,-1),0));
        }
      }
    }
;
    getContext().registerReceiver(mRingModeChangedReceiver,filter);
  }
  int id;
  if (!Utils.isVoiceCapable(getContext())) {
    id=R.id.ringer_section;
  }
 else {
    id=R.id.notification_section;
  }
  View hideSection=view.findViewById(id);
  hideSection.setVisibility(View.GONE);
}
