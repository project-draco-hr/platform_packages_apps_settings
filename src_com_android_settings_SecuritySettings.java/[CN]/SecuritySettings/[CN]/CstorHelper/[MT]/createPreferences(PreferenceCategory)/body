{
  mAccessCheckBox=new CheckBoxPreference(SecuritySettings.this);
  mAccessCheckBox.setTitle(R.string.cstor_access_title);
  mAccessCheckBox.setSummary(R.string.cstor_access_summary);
  mAccessCheckBox.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener(){
    public boolean onPreferenceChange(    Preference pref,    Object value){
      if (((Boolean)value)) {
        showCstorDialog(CSTOR_UNLOCK_DIALOG);
      }
 else {
        lockCstor();
      }
      return true;
    }
  }
);
  category.addPreference(mAccessCheckBox);
  Preference install=new Preference(SecuritySettings.this);
  install.setTitle(R.string.cstor_cert_install_title);
  install.setSummary(R.string.cstor_cert_install_summary);
  install.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener(){
    public boolean onPreferenceClick(    Preference pref){
      Credentials.getInstance().installFromSdCard(SecuritySettings.this);
      return true;
    }
  }
);
  category.addPreference(install);
  Preference password=new Preference(SecuritySettings.this);
  password.setTitle(R.string.cstor_set_passwd_title);
  password.setSummary(R.string.cstor_set_passwd_summary);
  password.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener(){
    public boolean onPreferenceClick(    Preference pref){
      showCstorDialog(mState == KeyStore.UNINITIALIZED ? CSTOR_INIT_DIALOG : CSTOR_CHANGE_PASSWORD_DIALOG);
      return true;
    }
  }
);
  category.addPreference(password);
  mResetButton=new Preference(SecuritySettings.this);
  mResetButton.setTitle(R.string.cstor_reset_title);
  mResetButton.setSummary(R.string.cstor_reset_summary);
  mResetButton.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener(){
    public boolean onPreferenceClick(    Preference pref){
      showCstorDialog(CSTOR_RESET_DIALOG);
      return true;
    }
  }
);
  category.addPreference(mResetButton);
  updatePreferences(mState);
}
