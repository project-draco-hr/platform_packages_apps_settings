{
  PreferenceScreen root=getPreferenceScreen();
  if (root != null) {
    root.removeAll();
  }
  addPreferencesFromResource(R.xml.security_settings);
  root=getPreferenceScreen();
  final int resid=getResIdForLockUnlockScreen(getActivity(),mLockPatternUtils,MY_USER_ID);
  addPreferencesFromResource(resid);
  final EnforcedAdmin admin=RestrictedLockUtils.checkIfPasswordQualityIsSet(getActivity(),MY_USER_ID);
  if (admin != null && mDPM.getPasswordQuality(admin.component) == DevicePolicyManager.PASSWORD_QUALITY_MANAGED) {
    final GearPreference unlockSetOrChangePref=(GearPreference)getPreferenceScreen().findPreference(KEY_UNLOCK_SET_OR_CHANGE);
    unlockSetOrChangePref.setDisabledByAdmin(admin);
  }
  mProfileChallengeUserId=Utils.getManagedProfileId(mUm,MY_USER_ID);
  if (mProfileChallengeUserId != UserHandle.USER_NULL && mLockPatternUtils.isSeparateProfileChallengeAllowed(mProfileChallengeUserId)) {
    addPreferencesFromResource(R.xml.security_settings_profile);
    final int profileResid=getResIdForLockUnlockScreen(getActivity(),mLockPatternUtils,mProfileChallengeUserId);
    addPreferencesFromResource(profileResid);
    maybeAddFingerprintPreference(root,mProfileChallengeUserId);
    addPreferencesFromResource(R.xml.security_settings_unification);
    if (!mLockPatternUtils.isSeparateProfileChallengeEnabled(mProfileChallengeUserId)) {
      Preference lockPreference=root.findPreference(KEY_UNLOCK_SET_OR_CHANGE_PROFILE);
      String summary=getContext().getString(R.string.lock_settings_profile_unified_summary);
      lockPreference.setSummary(summary);
      lockPreference.setEnabled(false);
    }
  }
  Preference unlockSetOrChange=findPreference(KEY_UNLOCK_SET_OR_CHANGE);
  if (unlockSetOrChange instanceof GearPreference) {
    ((GearPreference)unlockSetOrChange).setOnGearClickListener(this);
  }
  mIsAdmin=mUm.isAdminUser();
  if (mIsAdmin) {
    if (LockPatternUtils.isDeviceEncryptionEnabled()) {
      addPreferencesFromResource(R.xml.security_settings_encrypted);
    }
 else {
      addPreferencesFromResource(R.xml.security_settings_unencrypted);
    }
  }
  PreferenceGroup securityCategory=(PreferenceGroup)root.findPreference(KEY_SECURITY_CATEGORY);
  if (securityCategory != null) {
    maybeAddFingerprintPreference(securityCategory,UserHandle.myUserId());
    addTrustAgentSettings(securityCategory);
  }
  mVisiblePatternProfile=(SwitchPreference)root.findPreference(KEY_VISIBLE_PATTERN_PROFILE);
  mUnifyProfile=(SwitchPreference)root.findPreference(KEY_UNIFICATION);
  addPreferencesFromResource(R.xml.security_settings_misc);
  TelephonyManager tm=TelephonyManager.getDefault();
  CarrierConfigManager cfgMgr=(CarrierConfigManager)getActivity().getSystemService(Context.CARRIER_CONFIG_SERVICE);
  PersistableBundle b=cfgMgr.getConfig();
  if (!mIsAdmin || !isSimIccReady() || b.getBoolean(CarrierConfigManager.KEY_HIDE_SIM_LOCK_SETTINGS_BOOL)) {
    root.removePreference(root.findPreference(KEY_SIM_LOCK));
  }
 else {
    root.findPreference(KEY_SIM_LOCK).setEnabled(isSimReady());
  }
  if (Settings.System.getInt(getContentResolver(),Settings.System.LOCK_TO_APP_ENABLED,0) != 0) {
    root.findPreference(KEY_SCREEN_PINNING).setSummary(getResources().getString(R.string.switch_on_text));
  }
  mShowPassword=(SwitchPreference)root.findPreference(KEY_SHOW_PASSWORD);
  mResetCredentials=(RestrictedPreference)root.findPreference(KEY_RESET_CREDENTIALS);
  final UserManager um=(UserManager)getActivity().getSystemService(Context.USER_SERVICE);
  mKeyStore=KeyStore.getInstance();
  if (!RestrictedLockUtils.hasBaseUserRestriction(getActivity(),UserManager.DISALLOW_CONFIG_CREDENTIALS,MY_USER_ID)) {
    RestrictedPreference credentialStorageType=(RestrictedPreference)root.findPreference(KEY_CREDENTIAL_STORAGE_TYPE);
    credentialStorageType.checkRestrictionAndSetDisabled(UserManager.DISALLOW_CONFIG_CREDENTIALS);
    RestrictedPreference installCredentials=(RestrictedPreference)root.findPreference(KEY_CREDENTIALS_INSTALL);
    installCredentials.checkRestrictionAndSetDisabled(UserManager.DISALLOW_CONFIG_CREDENTIALS);
    mResetCredentials.checkRestrictionAndSetDisabled(UserManager.DISALLOW_CONFIG_CREDENTIALS);
    final int storageSummaryRes=mKeyStore.isHardwareBacked() ? R.string.credential_storage_type_hardware : R.string.credential_storage_type_software;
    credentialStorageType.setSummary(storageSummaryRes);
  }
 else {
    PreferenceGroup credentialsManager=(PreferenceGroup)root.findPreference(KEY_CREDENTIALS_MANAGER);
    credentialsManager.removePreference(root.findPreference(KEY_RESET_CREDENTIALS));
    credentialsManager.removePreference(root.findPreference(KEY_CREDENTIALS_INSTALL));
    credentialsManager.removePreference(root.findPreference(KEY_CREDENTIAL_STORAGE_TYPE));
  }
  PreferenceGroup deviceAdminCategory=(PreferenceGroup)root.findPreference(KEY_DEVICE_ADMIN_CATEGORY);
  mToggleAppInstallation=(RestrictedSwitchPreference)findPreference(KEY_TOGGLE_INSTALL_APPLICATIONS);
  mToggleAppInstallation.setChecked(isNonMarketAppsAllowed());
  mToggleAppInstallation.setEnabled(!um.getUserInfo(MY_USER_ID).isRestricted());
  if (RestrictedLockUtils.hasBaseUserRestriction(getActivity(),UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES,MY_USER_ID) || RestrictedLockUtils.hasBaseUserRestriction(getActivity(),UserManager.DISALLOW_INSTALL_APPS,MY_USER_ID)) {
    mToggleAppInstallation.setEnabled(false);
  }
  if (mToggleAppInstallation.isEnabled()) {
    mToggleAppInstallation.checkRestrictionAndSetDisabled(UserManager.DISALLOW_INSTALL_UNKNOWN_SOURCES);
    if (!mToggleAppInstallation.isDisabledByAdmin()) {
      mToggleAppInstallation.checkRestrictionAndSetDisabled(UserManager.DISALLOW_INSTALL_APPS);
    }
  }
  PreferenceGroup advancedCategory=(PreferenceGroup)root.findPreference(KEY_ADVANCED_SECURITY);
  if (advancedCategory != null) {
    Preference manageAgents=advancedCategory.findPreference(KEY_MANAGE_TRUST_AGENTS);
    if (manageAgents != null && !mLockPatternUtils.isSecure(MY_USER_ID)) {
      manageAgents.setEnabled(false);
      manageAgents.setSummary(R.string.disabled_because_no_backup_security);
    }
  }
  Index.getInstance(getActivity()).updateFromClassNameResource(SecuritySettings.class.getName(),true,true);
  for (int i=0; i < SWITCH_PREFERENCE_KEYS.length; i++) {
    final Preference pref=findPreference(SWITCH_PREFERENCE_KEYS[i]);
    if (pref != null)     pref.setOnPreferenceChangeListener(this);
  }
  return root;
}
