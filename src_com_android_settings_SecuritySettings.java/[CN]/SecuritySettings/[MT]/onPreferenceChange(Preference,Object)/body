{
  boolean result=true;
  final String key=preference.getKey();
  final LockPatternUtils lockPatternUtils=mChooseLockSettingsHelper.utils();
  if (KEY_VISIBLE_PATTERN_PROFILE.equals(key)) {
    lockPatternUtils.setVisiblePatternEnabled((Boolean)value,mProfileChallengeUserId);
  }
 else   if (KEY_UNIFICATION.equals(key)) {
    if ((Boolean)value) {
      final boolean compliantForDevice=(mLockPatternUtils.getKeyguardStoredPasswordQuality(mProfileChallengeUserId) >= DevicePolicyManager.PASSWORD_QUALITY_SOMETHING && mLockPatternUtils.isSeparateProfileChallengeAllowedToUnify(mProfileChallengeUserId));
      UnificationConfirmationDialog dialog=UnificationConfirmationDialog.newIntance(compliantForDevice);
      dialog.show(getChildFragmentManager(),TAG_UNIFICATION_DIALOG);
    }
 else {
      mLockPatternUtils.setSeparateProfileChallengeEnabled(mProfileChallengeUserId,true);
      Bundle extras=new Bundle();
      extras.putInt(Intent.EXTRA_USER_ID,mProfileChallengeUserId);
      startFragment(this,"com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment",R.string.lock_settings_picker_title_profile,SET_OR_CHANGE_LOCK_METHOD_REQUEST_PROFILE,extras);
    }
  }
 else   if (KEY_SHOW_PASSWORD.equals(key)) {
    Settings.System.putInt(getContentResolver(),Settings.System.TEXT_SHOW_PASSWORD,((Boolean)value) ? 1 : 0);
    lockPatternUtils.setVisiblePasswordEnabled((Boolean)value,MY_USER_ID);
  }
 else   if (KEY_TOGGLE_INSTALL_APPLICATIONS.equals(key)) {
    if ((Boolean)value) {
      mToggleAppInstallation.setChecked(false);
      warnAppInstallation();
      result=false;
    }
 else {
      setNonMarketAppsAllowed(false);
    }
  }
  return result;
}
