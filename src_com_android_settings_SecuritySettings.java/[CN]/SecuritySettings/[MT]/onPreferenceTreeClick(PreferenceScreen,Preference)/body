{
  final String key=preference.getKey();
  if (KEY_LOCK_ENABLED.equals(key)) {
    mLockPatternUtils.setLockPatternEnabled(isToggled(preference));
  }
 else   if (KEY_VISIBLE_PATTERN.equals(key)) {
    mLockPatternUtils.setVisiblePatternEnabled(isToggled(preference));
  }
 else   if (KEY_TACTILE_FEEDBACK_ENABLED.equals(key)) {
    mLockPatternUtils.setTactileFeedbackEnabled(isToggled(preference));
  }
 else   if (preference == mShowPassword) {
    Settings.System.putInt(getContentResolver(),Settings.System.TEXT_SHOW_PASSWORD,mShowPassword.isChecked() ? 1 : 0);
  }
 else   if (preference == mNetwork) {
    Settings.Secure.setLocationProviderEnabled(getContentResolver(),LocationManager.NETWORK_PROVIDER,mNetwork.isChecked());
  }
 else   if (preference == mGps) {
    Settings.Secure.setLocationProviderEnabled(getContentResolver(),LocationManager.GPS_PROVIDER,mGps.isChecked());
  }
 else   if (preference == mUseLocation) {
    if (mUseLocation.isChecked()) {
      showUseLocationDialog(false);
    }
 else {
      updateUseLocation();
    }
  }
  return false;
}
