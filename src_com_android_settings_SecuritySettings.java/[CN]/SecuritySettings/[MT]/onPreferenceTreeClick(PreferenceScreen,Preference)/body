{
  if (ensurePinRestrictedPreference(preference)) {
    return true;
  }
  final String key=preference.getKey();
  final LockPatternUtils lockPatternUtils=mChooseLockSettingsHelper.utils();
  if (KEY_UNLOCK_SET_OR_CHANGE.equals(key)) {
    startFragment(this,"com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment",SET_OR_CHANGE_LOCK_METHOD_REQUEST,null);
  }
 else   if (KEY_NFC_UNLOCK_SET_OR_CHANGE.equals(key)) {
    startFragment(this,"com.android.settings.NfcLockFragment",SET_OR_CHANGE_LOCK_METHOD_REQUEST,null);
  }
 else   if (KEY_BIOMETRIC_WEAK_IMPROVE_MATCHING.equals(key)) {
    ChooseLockSettingsHelper helper=new ChooseLockSettingsHelper(this.getActivity(),this);
    if (!helper.launchConfirmationActivity(CONFIRM_EXISTING_FOR_BIOMETRIC_WEAK_IMPROVE_REQUEST,null,null)) {
      startBiometricWeakImprove();
    }
  }
 else   if (KEY_BIOMETRIC_WEAK_LIVELINESS.equals(key)) {
    if (isToggled(preference)) {
      lockPatternUtils.setBiometricWeakLivelinessEnabled(true);
    }
 else {
      mBiometricWeakLiveliness.setChecked(true);
      ChooseLockSettingsHelper helper=new ChooseLockSettingsHelper(this.getActivity(),this);
      if (!helper.launchConfirmationActivity(CONFIRM_EXISTING_FOR_BIOMETRIC_WEAK_LIVELINESS_OFF,null,null)) {
        lockPatternUtils.setBiometricWeakLivelinessEnabled(false);
        mBiometricWeakLiveliness.setChecked(false);
      }
    }
  }
 else   if (KEY_LOCK_ENABLED.equals(key)) {
    lockPatternUtils.setLockPatternEnabled(isToggled(preference));
  }
 else   if (KEY_VISIBLE_PATTERN.equals(key)) {
    lockPatternUtils.setVisiblePatternEnabled(isToggled(preference));
  }
 else   if (KEY_POWER_INSTANTLY_LOCKS.equals(key)) {
    lockPatternUtils.setPowerButtonInstantlyLocks(isToggled(preference));
  }
 else   if (preference == mShowPassword) {
    Settings.System.putInt(getContentResolver(),Settings.System.TEXT_SHOW_PASSWORD,mShowPassword.isChecked() ? 1 : 0);
  }
 else   if (preference == mToggleAppInstallation) {
    if (mToggleAppInstallation.isChecked()) {
      mToggleAppInstallation.setChecked(false);
      warnAppInstallation();
    }
 else {
      setNonMarketAppsAllowed(false);
    }
  }
 else   if (KEY_TOGGLE_VERIFY_APPLICATIONS.equals(key)) {
    Settings.Global.putInt(getContentResolver(),Settings.Global.PACKAGE_VERIFIER_ENABLE,mToggleVerifyApps.isChecked() ? 1 : 0);
  }
 else {
    return super.onPreferenceTreeClick(preferenceScreen,preference);
  }
  return true;
}
