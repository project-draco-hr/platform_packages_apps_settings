{
  final String key=preference.getKey();
  final LockPatternUtils lockPatternUtils=mChooseLockSettingsHelper.utils();
  if (KEY_UNLOCK_SET_OR_CHANGE.equals(key)) {
    Intent intent=new Intent(this,ChooseLockGeneric.class);
    startActivityForResult(intent,SET_OR_CHANGE_LOCK_METHOD_REQUEST);
  }
 else   if (KEY_LOCK_ENABLED.equals(key)) {
    lockPatternUtils.setLockPatternEnabled(isToggled(preference));
  }
 else   if (KEY_VISIBLE_PATTERN.equals(key)) {
    lockPatternUtils.setVisiblePatternEnabled(isToggled(preference));
  }
 else   if (KEY_TACTILE_FEEDBACK_ENABLED.equals(key)) {
    lockPatternUtils.setTactileFeedbackEnabled(isToggled(preference));
  }
 else   if (preference == mShowPassword) {
    Settings.System.putInt(getContentResolver(),Settings.System.TEXT_SHOW_PASSWORD,mShowPassword.isChecked() ? 1 : 0);
  }
 else   if (preference == mNetwork) {
    Settings.Secure.setLocationProviderEnabled(getContentResolver(),LocationManager.NETWORK_PROVIDER,mNetwork.isChecked());
  }
 else   if (preference == mGps) {
    boolean enabled=mGps.isChecked();
    Settings.Secure.setLocationProviderEnabled(getContentResolver(),LocationManager.GPS_PROVIDER,enabled);
    if (mAssistedGps != null) {
      mAssistedGps.setEnabled(enabled);
    }
  }
 else   if (preference == mAssistedGps) {
    Settings.Secure.putInt(getContentResolver(),Settings.Secure.ASSISTED_GPS_ENABLED,mAssistedGps.isChecked() ? 1 : 0);
  }
  return false;
}
