{
  final String key=preference.getKey();
  final LockPatternUtils lockPatternUtils=mChooseLockSettingsHelper.utils();
  if (KEY_UNLOCK_SET_OR_CHANGE.equals(key)) {
    startFragment(this,"com.android.settings.ChooseLockGeneric$ChooseLockGenericFragment",SET_OR_CHANGE_LOCK_METHOD_REQUEST,null);
  }
 else   if (KEY_CHOOSE_USER_SELECTED_LOCKSCREEN_WIDGET.equals(key)) {
    Intent pickIntent=new Intent(AppWidgetManager.ACTION_APPWIDGET_PICK);
    final int KEYGUARD_HOST_ID=0x4B455947;
    int appWidgetId=AppWidgetHost.allocateAppWidgetIdForSystem(KEYGUARD_HOST_ID);
    if (appWidgetId != -1) {
      pickIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,appWidgetId);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CUSTOM_SORT,false);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CATEGORY_FILTER,AppWidgetProviderInfo.WIDGET_CATEGORY_KEYGUARD);
      AppWidgetProviderInfo noneInfo=new AppWidgetProviderInfo();
      ArrayList<AppWidgetProviderInfo> extraInfos=new ArrayList<AppWidgetProviderInfo>();
      noneInfo.label=getResources().getString(R.string.widget_none);
      noneInfo.provider=new ComponentName("","");
      extraInfos.add(noneInfo);
      ArrayList<Bundle> extraExtras=new ArrayList<Bundle>();
      Bundle b=new Bundle();
      b.putBoolean(EXTRA_NO_WIDGET,true);
      extraExtras.add(b);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CUSTOM_INFO,extraInfos);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CUSTOM_EXTRAS,extraExtras);
      pickIntent.putExtra(Intent.EXTRA_INTENT,getBaseIntent());
      startActivityForResult(pickIntent,REQUEST_PICK_USER_SELECTED_APPWIDGET);
    }
 else {
      Log.e(TAG,"Unable to allocate an AppWidget id in lock screen");
    }
  }
 else   if (KEY_CHOOSE_LOCKSCREEN_STATUS_WIDGET.equals(key)) {
    Intent pickIntent=new Intent(AppWidgetManager.ACTION_APPWIDGET_PICK);
    final int KEYGUARD_HOST_ID=0x4B455947;
    int appWidgetId=AppWidgetHost.allocateAppWidgetIdForSystem(KEYGUARD_HOST_ID);
    if (appWidgetId != -1) {
      pickIntent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID,appWidgetId);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CUSTOM_SORT,false);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CATEGORY_FILTER,AppWidgetProviderInfo.WIDGET_CATEGORY_KEYGUARD);
      pickIntent.putExtra(AppWidgetManager.EXTRA_FEATURES_FILTER,AppWidgetProviderInfo.WIDGET_FEATURES_STATUS);
      AppWidgetProviderInfo noneInfo=new AppWidgetProviderInfo();
      ArrayList<AppWidgetProviderInfo> extraInfos=new ArrayList<AppWidgetProviderInfo>();
      noneInfo.label=getResources().getString(R.string.widget_default);
      noneInfo.provider=new ComponentName("","");
      extraInfos.add(noneInfo);
      ArrayList<Bundle> extraExtras=new ArrayList<Bundle>();
      Bundle b=new Bundle();
      b.putBoolean(EXTRA_DEFAULT_WIDGET,true);
      extraExtras.add(b);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CUSTOM_INFO,extraInfos);
      pickIntent.putExtra(AppWidgetManager.EXTRA_CUSTOM_EXTRAS,extraExtras);
      pickIntent.putExtra(Intent.EXTRA_INTENT,getBaseIntent());
      startActivityForResult(pickIntent,REQUEST_PICK_STATUS_APPWIDGET);
    }
 else {
      Log.e(TAG,"Unable to allocate an AppWidget id in lock screen");
    }
  }
 else   if (KEY_BIOMETRIC_WEAK_IMPROVE_MATCHING.equals(key)) {
    ChooseLockSettingsHelper helper=new ChooseLockSettingsHelper(this.getActivity(),this);
    if (!helper.launchConfirmationActivity(CONFIRM_EXISTING_FOR_BIOMETRIC_WEAK_IMPROVE_REQUEST,null,null)) {
      startBiometricWeakImprove();
    }
  }
 else   if (KEY_BIOMETRIC_WEAK_LIVELINESS.equals(key)) {
    if (isToggled(preference)) {
      lockPatternUtils.setBiometricWeakLivelinessEnabled(true);
    }
 else {
      mBiometricWeakLiveliness.setChecked(true);
      ChooseLockSettingsHelper helper=new ChooseLockSettingsHelper(this.getActivity(),this);
      if (!helper.launchConfirmationActivity(CONFIRM_EXISTING_FOR_BIOMETRIC_WEAK_LIVELINESS_OFF,null,null)) {
        lockPatternUtils.setBiometricWeakLivelinessEnabled(false);
        mBiometricWeakLiveliness.setChecked(false);
      }
    }
  }
 else   if (KEY_LOCK_ENABLED.equals(key)) {
    lockPatternUtils.setLockPatternEnabled(isToggled(preference));
  }
 else   if (KEY_VISIBLE_PATTERN.equals(key)) {
    lockPatternUtils.setVisiblePatternEnabled(isToggled(preference));
  }
 else   if (KEY_TACTILE_FEEDBACK_ENABLED.equals(key)) {
    lockPatternUtils.setTactileFeedbackEnabled(isToggled(preference));
  }
 else   if (KEY_POWER_INSTANTLY_LOCKS.equals(key)) {
    lockPatternUtils.setPowerButtonInstantlyLocks(isToggled(preference));
  }
 else   if (preference == mShowPassword) {
    Settings.System.putInt(getContentResolver(),Settings.System.TEXT_SHOW_PASSWORD,mShowPassword.isChecked() ? 1 : 0);
  }
 else   if (preference == mToggleAppInstallation) {
    if (mToggleAppInstallation.isChecked()) {
      mToggleAppInstallation.setChecked(false);
      warnAppInstallation();
    }
 else {
      setNonMarketAppsAllowed(false);
    }
  }
 else   if (KEY_TOGGLE_VERIFY_APPLICATIONS.equals(key)) {
    Settings.Global.putInt(getContentResolver(),Settings.Global.PACKAGE_VERIFIER_ENABLE,mToggleVerifyApps.isChecked() ? 1 : 0);
  }
 else {
    return super.onPreferenceTreeClick(preferenceScreen,preference);
  }
  return true;
}
