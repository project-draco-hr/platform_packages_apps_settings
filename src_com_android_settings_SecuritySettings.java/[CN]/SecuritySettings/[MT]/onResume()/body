{
  super.onResume();
  createPreferenceHierarchy();
  final LockPatternUtils lockPatternUtils=mChooseLockSettingsHelper.utils();
  if (mBiometricWeakLiveliness != null) {
    mBiometricWeakLiveliness.setSummary(lockPatternUtils.isBiometricWeakLivelinessEnabled() ? R.string.biometric_weak_liveliness_on_summary : R.string.biometric_weak_liveliness_off_summary);
  }
  if (mVisiblePattern != null) {
    mVisiblePattern.setChecked(lockPatternUtils.isVisiblePatternEnabled());
  }
  if (mTactileFeedback != null) {
    mTactileFeedback.setChecked(lockPatternUtils.isTactileFeedbackEnabled());
  }
  if (mPowerButtonInstantlyLocks != null) {
    mPowerButtonInstantlyLocks.setChecked(lockPatternUtils.getPowerButtonInstantlyLocks());
  }
  if (mShowPassword != null) {
    mShowPassword.setChecked(Settings.System.getInt(getContentResolver(),Settings.System.TEXT_SHOW_PASSWORD,1) != 0);
  }
  KeyStore.State state=KeyStore.getInstance().state();
  if (mResetCredentials != null) {
    mResetCredentials.setEnabled(state != KeyStore.State.UNINITIALIZED);
  }
}
