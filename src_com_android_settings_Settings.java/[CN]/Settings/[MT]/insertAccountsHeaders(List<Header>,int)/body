{
  String[] accountTypes=mAuthenticatorHelper.getEnabledAccountTypes();
  List<Header> accountHeaders=new ArrayList<Header>(accountTypes.length);
  for (  String accountType : accountTypes) {
    CharSequence label=mAuthenticatorHelper.getLabelForType(this,accountType);
    Account[] accounts=AccountManager.get(this).getAccountsByType(accountType);
    boolean skipToAccount=accounts.length == 1 && !mAuthenticatorHelper.hasAccountPreferences(accountType);
    Header accHeader=new Header();
    accHeader.title=label;
    if (accHeader.extras == null) {
      accHeader.extras=new Bundle();
    }
    if (skipToAccount) {
      accHeader.breadCrumbTitleRes=R.string.account_sync_settings_title;
      accHeader.breadCrumbShortTitleRes=R.string.account_sync_settings_title;
      accHeader.fragment=AccountSyncSettings.class.getName();
      accHeader.fragmentArguments=new Bundle();
      accHeader.extras.putString(ManageAccountsSettings.KEY_ACCOUNT_TYPE,accountType);
      accHeader.extras.putParcelable(AccountSyncSettings.ACCOUNT_KEY,accounts[0]);
      accHeader.fragmentArguments.putParcelable(AccountSyncSettings.ACCOUNT_KEY,accounts[0]);
    }
 else {
      accHeader.breadCrumbTitle=label;
      accHeader.breadCrumbShortTitle=label;
      accHeader.fragment=ManageAccountsSettings.class.getName();
      accHeader.fragmentArguments=new Bundle();
      accHeader.extras.putString(ManageAccountsSettings.KEY_ACCOUNT_TYPE,accountType);
      accHeader.fragmentArguments.putString(ManageAccountsSettings.KEY_ACCOUNT_TYPE,accountType);
      if (!isMultiPane()) {
        accHeader.fragmentArguments.putString(ManageAccountsSettings.KEY_ACCOUNT_LABEL,label.toString());
      }
    }
    accountHeaders.add(accHeader);
  }
  Collections.sort(accountHeaders,new Comparator<Header>(){
    @Override public int compare(    Header h1,    Header h2){
      return h1.title.toString().compareTo(h2.title.toString());
    }
  }
);
  for (  Header header : accountHeaders) {
    target.add(headerIndex++,header);
  }
  if (!mListeningToAccountUpdates) {
    AccountManager.get(this).addOnAccountsUpdatedListener(this,null,true);
    mListeningToAccountUpdates=true;
  }
  return headerIndex;
}
