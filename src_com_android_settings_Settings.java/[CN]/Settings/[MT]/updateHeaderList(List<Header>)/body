{
  int i=0;
  while (i < target.size()) {
    Header header=target.get(i);
    int id=(int)header.id;
    if (id == R.id.dock_settings) {
      if (!needsDockSettings())       target.remove(header);
    }
 else     if (id == R.id.operator_settings || id == R.id.manufacturer_settings) {
      Utils.updateHeaderToSpecificActivityFromMetaDataOrRemove(this,target,header);
    }
 else     if (id == R.id.wifi_settings) {
      if (!getPackageManager().hasSystemFeature(PackageManager.FEATURE_WIFI)) {
        target.remove(header);
      }
    }
 else     if (id == R.id.bluetooth_settings) {
      if (!getPackageManager().hasSystemFeature(PackageManager.FEATURE_BLUETOOTH)) {
        target.remove(header);
      }
    }
 else     if (id == R.id.data_usage_settings) {
      final INetworkManagementService netManager=INetworkManagementService.Stub.asInterface(ServiceManager.getService(Context.NETWORKMANAGEMENT_SERVICE));
      try {
        if (!netManager.isBandwidthControlEnabled()) {
          target.remove(header);
        }
      }
 catch (      RemoteException e) {
      }
    }
 else     if (id == R.id.account_settings) {
      int headerIndex=i + 1;
      i=insertAccountsHeaders(target,headerIndex);
    }
 else     if (id == R.id.user_settings) {
      if (!mEnableUserManagement || !UserHandle.MU_ENABLED || UserHandle.myUserId() != 0 || !getResources().getBoolean(R.bool.enable_user_management) || Utils.isMonkeyRunning()) {
        target.remove(header);
      }
    }
    if (UserHandle.MU_ENABLED && UserHandle.myUserId() != 0 && !ArrayUtils.contains(SETTINGS_FOR_RESTRICTED,id)) {
      target.remove(header);
    }
    if (target.get(i) == header) {
      if (mFirstHeader == null && HeaderAdapter.getHeaderType(header) != HeaderAdapter.HEADER_TYPE_CATEGORY) {
        mFirstHeader=header;
      }
      mHeaderIndexMap.put(id,i);
      i++;
    }
  }
}
