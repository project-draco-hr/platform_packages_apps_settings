{
  if (getIntent().hasExtra(EXTRA_UI_OPTIONS)) {
    getWindow().setUiOptions(getIntent().getIntExtra(EXTRA_UI_OPTIONS,0));
  }
  Index.getInstance(this).update();
  mAuthenticatorHelper=new AuthenticatorHelper();
  mAuthenticatorHelper.updateAuthDescriptions(this);
  mAuthenticatorHelper.onAccountsUpdated(this,null);
  DevicePolicyManager dpm=(DevicePolicyManager)getSystemService(Context.DEVICE_POLICY_SERVICE);
  mHeaderAdapter=new HeaderAdapter(this,mHeaders,mAuthenticatorHelper,dpm);
  mDevelopmentPreferences=getSharedPreferences(DevelopmentSettings.PREF_FILE,Context.MODE_PRIVATE);
  getMetaData();
  super.onCreate(savedState);
  setContentView(R.layout.settings_main);
  getFragmentManager().addOnBackStackChangedListener(this);
  boolean displayHomeAsUpEnabled=true;
  String initialFragmentName=getIntent().getStringExtra(EXTRA_SHOW_FRAGMENT);
  Bundle initialArguments=getIntent().getBundleExtra(EXTRA_SHOW_FRAGMENT_ARGUMENTS);
  if (savedState != null) {
    mSearchMenuItemExpanded=savedState.getBoolean(SAVE_KEY_SEARCH_MENU_EXPANDED);
    mSearchQuery=savedState.getString(SAVE_KEY_SEARCH_QUERY);
    mInitialTitle=getTitle();
    ArrayList<Header> headers=savedState.getParcelableArrayList(SAVE_KEY_HEADERS);
    if (headers != null) {
      mHeaders.addAll(headers);
      setTitleFromBackStack();
    }
  }
 else {
    onBuildHeaders(mHeaders);
    if (initialFragmentName != null) {
      final ComponentName cn=getIntent().getComponent();
      if (!cn.getClassName().equals(SubSettings.class.getName())) {
        displayHomeAsUpEnabled=false;
      }
      final String initialTitle=getIntent().getStringExtra(EXTRA_SHOW_FRAGMENT_TITLE);
      mInitialTitle=(initialTitle != null) ? initialTitle : getTitle();
      setTitle(mInitialTitle);
      switchToFragment(initialFragmentName,initialArguments,true,false,mInitialTitle,false);
    }
 else {
      displayHomeAsUpEnabled=false;
      if (mHeaders.size() > 0) {
        mInitialTitle=getText(R.string.dashboard_title);
        switchToFragment(DashboardSummary.class.getName(),null,false,false,mInitialTitle,false);
      }
    }
  }
  mActionBar=getActionBar();
  mActionBar.setHomeButtonEnabled(true);
  mActionBar.setDisplayHomeAsUpEnabled(displayHomeAsUpEnabled);
  Intent intent=getIntent();
  if (intent.getBooleanExtra(EXTRA_PREFS_SHOW_BUTTON_BAR,false)) {
    View buttonBar=findViewById(com.android.internal.R.id.button_bar);
    if (buttonBar != null) {
      buttonBar.setVisibility(View.VISIBLE);
      Button backButton=(Button)findViewById(com.android.internal.R.id.back_button);
      backButton.setOnClickListener(new OnClickListener(){
        public void onClick(        View v){
          setResult(RESULT_CANCELED);
          finish();
        }
      }
);
      Button skipButton=(Button)findViewById(com.android.internal.R.id.skip_button);
      skipButton.setOnClickListener(new OnClickListener(){
        public void onClick(        View v){
          setResult(RESULT_OK);
          finish();
        }
      }
);
      mNextButton=(Button)findViewById(com.android.internal.R.id.next_button);
      mNextButton.setOnClickListener(new OnClickListener(){
        public void onClick(        View v){
          setResult(RESULT_OK);
          finish();
        }
      }
);
      if (intent.hasExtra(EXTRA_PREFS_SET_NEXT_TEXT)) {
        String buttonText=intent.getStringExtra(EXTRA_PREFS_SET_NEXT_TEXT);
        if (TextUtils.isEmpty(buttonText)) {
          mNextButton.setVisibility(View.GONE);
        }
 else {
          mNextButton.setText(buttonText);
        }
      }
      if (intent.hasExtra(EXTRA_PREFS_SET_BACK_TEXT)) {
        String buttonText=intent.getStringExtra(EXTRA_PREFS_SET_BACK_TEXT);
        if (TextUtils.isEmpty(buttonText)) {
          backButton.setVisibility(View.GONE);
        }
 else {
          backButton.setText(buttonText);
        }
      }
      if (intent.getBooleanExtra(EXTRA_PREFS_SHOW_SKIP,false)) {
        skipButton.setVisibility(View.VISIBLE);
      }
    }
  }
}
