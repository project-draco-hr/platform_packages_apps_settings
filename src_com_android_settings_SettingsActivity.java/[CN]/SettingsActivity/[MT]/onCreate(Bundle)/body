{
  super.onCreate(savedState);
  getMetaData();
  final Intent intent=getIntent();
  if (intent.hasExtra(EXTRA_UI_OPTIONS)) {
    getWindow().setUiOptions(intent.getIntExtra(EXTRA_UI_OPTIONS,0));
  }
  mDevelopmentPreferences=getSharedPreferences(DevelopmentSettings.PREF_FILE,Context.MODE_PRIVATE);
  final String initialFragmentName=intent.getStringExtra(EXTRA_SHOW_FRAGMENT);
  mIsShortcut=isShortCutIntent(intent) || isLikeShortCutIntent(intent) || intent.getBooleanExtra(EXTRA_SHOW_FRAGMENT_AS_SHORTCUT,false);
  final ComponentName cn=intent.getComponent();
  final String className=cn.getClassName();
  mIsShowingDashboard=className.equals(Settings.class.getName());
  final boolean isSubSettings=this instanceof SubSettings || intent.getBooleanExtra(EXTRA_SHOW_FRAGMENT_AS_SUBSETTING,false);
  if (isSubSettings) {
    final int themeResId=getThemeResId();
    if (themeResId != R.style.Theme_DialogWhenLarge && themeResId != R.style.Theme_SubSettingsDialogWhenLarge) {
      setTheme(R.style.Theme_SubSettings);
    }
  }
  setContentView(mIsShowingDashboard ? R.layout.settings_main_dashboard : R.layout.settings_main_prefs);
  mContent=(ViewGroup)findViewById(R.id.main_content);
  getFragmentManager().addOnBackStackChangedListener(this);
  if (mIsShowingDashboard) {
    if (!Utils.isLowStorage(this)) {
      Index.getInstance(getApplicationContext()).update();
    }
 else {
      Log.w(LOG_TAG,"Cannot update the Indexer as we are running low on storage space!");
    }
  }
  if (savedState != null) {
    mSearchMenuItemExpanded=savedState.getBoolean(SAVE_KEY_SEARCH_MENU_EXPANDED);
    mSearchQuery=savedState.getString(SAVE_KEY_SEARCH_QUERY);
    setTitleFromIntent(intent);
    ArrayList<DashboardCategory> categories=savedState.getParcelableArrayList(SAVE_KEY_CATEGORIES);
    if (categories != null) {
      mCategories.clear();
      mCategories.addAll(categories);
      setTitleFromBackStack();
    }
    mDisplayHomeAsUpEnabled=savedState.getBoolean(SAVE_KEY_SHOW_HOME_AS_UP);
    mDisplaySearch=savedState.getBoolean(SAVE_KEY_SHOW_SEARCH);
    mHomeActivitiesCount=savedState.getInt(SAVE_KEY_HOME_ACTIVITIES_COUNT,1);
  }
 else {
    if (!mIsShowingDashboard) {
      if (mIsShortcut) {
        mDisplayHomeAsUpEnabled=isSubSettings;
        mDisplaySearch=false;
      }
 else       if (isSubSettings) {
        mDisplayHomeAsUpEnabled=true;
        mDisplaySearch=true;
      }
 else {
        mDisplayHomeAsUpEnabled=false;
        mDisplaySearch=false;
      }
      setTitleFromIntent(intent);
      Bundle initialArguments=intent.getBundleExtra(EXTRA_SHOW_FRAGMENT_ARGUMENTS);
      switchToFragment(initialFragmentName,initialArguments,true,false,mInitialTitleResId,mInitialTitle,false);
    }
 else {
      mDisplayHomeAsUpEnabled=false;
      mDisplaySearch=true;
      mInitialTitleResId=R.string.dashboard_title;
      switchToFragment(DashboardSummary.class.getName(),null,false,false,mInitialTitleResId,mInitialTitle,false);
    }
  }
  mActionBar=getActionBar();
  if (mActionBar != null) {
    mActionBar.setDisplayHomeAsUpEnabled(mDisplayHomeAsUpEnabled);
    mActionBar.setHomeButtonEnabled(mDisplayHomeAsUpEnabled);
  }
  mSwitchBar=(SwitchBar)findViewById(R.id.switch_bar);
  if (intent.getBooleanExtra(EXTRA_PREFS_SHOW_BUTTON_BAR,false)) {
    View buttonBar=findViewById(R.id.button_bar);
    if (buttonBar != null) {
      buttonBar.setVisibility(View.VISIBLE);
      Button backButton=(Button)findViewById(R.id.back_button);
      backButton.setOnClickListener(new OnClickListener(){
        public void onClick(        View v){
          setResult(RESULT_CANCELED,getResultIntentData());
          finish();
        }
      }
);
      Button skipButton=(Button)findViewById(R.id.skip_button);
      skipButton.setOnClickListener(new OnClickListener(){
        public void onClick(        View v){
          setResult(RESULT_OK,getResultIntentData());
          finish();
        }
      }
);
      mNextButton=(Button)findViewById(R.id.next_button);
      mNextButton.setOnClickListener(new OnClickListener(){
        public void onClick(        View v){
          setResult(RESULT_OK,getResultIntentData());
          finish();
        }
      }
);
      if (intent.hasExtra(EXTRA_PREFS_SET_NEXT_TEXT)) {
        String buttonText=intent.getStringExtra(EXTRA_PREFS_SET_NEXT_TEXT);
        if (TextUtils.isEmpty(buttonText)) {
          mNextButton.setVisibility(View.GONE);
        }
 else {
          mNextButton.setText(buttonText);
        }
      }
      if (intent.hasExtra(EXTRA_PREFS_SET_BACK_TEXT)) {
        String buttonText=intent.getStringExtra(EXTRA_PREFS_SET_BACK_TEXT);
        if (TextUtils.isEmpty(buttonText)) {
          backButton.setVisibility(View.GONE);
        }
 else {
          backButton.setText(buttonText);
        }
      }
      if (intent.getBooleanExtra(EXTRA_PREFS_SHOW_SKIP,false)) {
        skipButton.setVisibility(View.VISIBLE);
      }
    }
  }
  mHomeActivitiesCount=getHomeActivitiesCount();
}
