{
  super.onCreate(savedInstanceState);
  ContentResolver resolver=getContentResolver();
  int activePhoneType=TelephonyManager.getDefault().getPhoneType();
  mAudioManager=(AudioManager)getSystemService(Context.AUDIO_SERVICE);
  mWindowManager=IWindowManager.Stub.asInterface(ServiceManager.getService("window"));
  mMountService=IMountService.Stub.asInterface(ServiceManager.getService("mount"));
  addPreferencesFromResource(R.xml.sound_and_display_settings);
  if (TelephonyManager.PHONE_TYPE_CDMA != activePhoneType) {
    getPreferenceScreen().removePreference(findPreference(KEY_EMERGENCY_TONE));
  }
  mSilent=(CheckBoxPreference)findPreference(KEY_SILENT);
  mPlayMediaNotificationSounds=(CheckBoxPreference)findPreference(KEY_PLAY_MEDIA_NOTIFICATION_SOUNDS);
  mVibrate=(CheckBoxPreference)findPreference(KEY_VIBRATE);
  mDtmfTone=(CheckBoxPreference)findPreference(KEY_DTMF_TONE);
  mDtmfTone.setPersistent(false);
  mDtmfTone.setChecked(Settings.System.getInt(resolver,Settings.System.DTMF_TONE_WHEN_DIALING,1) != 0);
  mSoundEffects=(CheckBoxPreference)findPreference(KEY_SOUND_EFFECTS);
  mSoundEffects.setPersistent(false);
  mSoundEffects.setChecked(Settings.System.getInt(resolver,Settings.System.SOUND_EFFECTS_ENABLED,0) != 0);
  mHapticFeedback=(CheckBoxPreference)findPreference(KEY_HAPTIC_FEEDBACK);
  mHapticFeedback.setPersistent(false);
  mHapticFeedback.setChecked(Settings.System.getInt(resolver,Settings.System.HAPTIC_FEEDBACK_ENABLED,0) != 0);
  mAnimations=(ListPreference)findPreference(KEY_ANIMATIONS);
  mAnimations.setOnPreferenceChangeListener(this);
  mAccelerometer=(CheckBoxPreference)findPreference(KEY_ACCELEROMETER);
  mAccelerometer.setPersistent(false);
  ListPreference screenTimeoutPreference=(ListPreference)findPreference(KEY_SCREEN_TIMEOUT);
  screenTimeoutPreference.setValue(String.valueOf(Settings.System.getInt(resolver,SCREEN_OFF_TIMEOUT,FALLBACK_SCREEN_TIMEOUT_VALUE)));
  screenTimeoutPreference.setOnPreferenceChangeListener(this);
  if (TelephonyManager.PHONE_TYPE_CDMA == activePhoneType) {
    ListPreference emergencyTonePreference=(ListPreference)findPreference(KEY_EMERGENCY_TONE);
    emergencyTonePreference.setValue(String.valueOf(Settings.System.getInt(resolver,Settings.System.EMERGENCY_TONE,FALLBACK_EMERGENCY_TONE_VALUE)));
    emergencyTonePreference.setOnPreferenceChangeListener(this);
  }
  mSoundSettings=(PreferenceGroup)findPreference(KEY_SOUND_SETTINGS);
  mNotificationPulse=(CheckBoxPreference)mSoundSettings.findPreference(KEY_NOTIFICATION_PULSE);
  if (mNotificationPulse != null && getResources().getBoolean(R.bool.has_intrusive_led) == false) {
    mSoundSettings.removePreference(mNotificationPulse);
  }
 else {
    try {
      mNotificationPulse.setChecked(Settings.System.getInt(resolver,Settings.System.NOTIFICATION_LIGHT_PULSE) == 1);
      mNotificationPulse.setOnPreferenceChangeListener(this);
    }
 catch (    SettingNotFoundException snfe) {
      Log.e(TAG,Settings.System.NOTIFICATION_LIGHT_PULSE + " not found");
    }
  }
  initDockSettings();
}
