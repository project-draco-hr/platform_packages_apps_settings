{
  if (preference == mSilent || preference == mVibrate) {
    setRingerMode(mSilent.isChecked(),mVibrate.isChecked());
    if (preference == mSilent)     updateState(false);
  }
 else   if (preference == mPlayMediaNotificationSounds) {
    try {
      mMountService.setPlayNotificationSounds(mPlayMediaNotificationSounds.isChecked());
    }
 catch (    RemoteException e) {
    }
  }
 else   if (preference == mDtmfTone) {
    Settings.System.putInt(getContentResolver(),Settings.System.DTMF_TONE_WHEN_DIALING,mDtmfTone.isChecked() ? 1 : 0);
  }
 else   if (preference == mSoundEffects) {
    if (mSoundEffects.isChecked()) {
      mAudioManager.loadSoundEffects();
    }
 else {
      mAudioManager.unloadSoundEffects();
    }
    Settings.System.putInt(getContentResolver(),Settings.System.SOUND_EFFECTS_ENABLED,mSoundEffects.isChecked() ? 1 : 0);
  }
 else   if (preference == mHapticFeedback) {
    Settings.System.putInt(getContentResolver(),Settings.System.HAPTIC_FEEDBACK_ENABLED,mHapticFeedback.isChecked() ? 1 : 0);
  }
 else   if (preference == mAccelerometer) {
    Settings.System.putInt(getContentResolver(),Settings.System.ACCELEROMETER_ROTATION,mAccelerometer.isChecked() ? 1 : 0);
  }
 else   if (preference == mNotificationPulse) {
    boolean value=mNotificationPulse.isChecked();
    Settings.System.putInt(getContentResolver(),Settings.System.NOTIFICATION_LIGHT_PULSE,value ? 1 : 0);
  }
  return true;
}
