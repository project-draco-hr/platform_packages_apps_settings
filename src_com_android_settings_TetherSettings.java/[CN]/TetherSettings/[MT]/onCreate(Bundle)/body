{
  super.onCreate(icicle);
  addPreferencesFromResource(R.xml.tether_prefs);
  mUm=(UserManager)getSystemService(Context.USER_SERVICE);
  if (mUm.hasUserRestriction(UserManager.DISALLOW_CONFIG_TETHERING) || !mUm.isAdminUser()) {
    mUnavailable=true;
    setPreferenceScreen(new PreferenceScreen(getPrefContext(),null));
    return;
  }
  final Activity activity=getActivity();
  BluetoothAdapter adapter=BluetoothAdapter.getDefaultAdapter();
  if (adapter != null) {
    adapter.getProfileProxy(activity.getApplicationContext(),mProfileServiceListener,BluetoothProfile.PAN);
  }
  mEnableWifiAp=(SwitchPreference)findPreference(ENABLE_WIFI_AP);
  Preference wifiApSettings=findPreference(WIFI_AP_SSID_AND_SECURITY);
  mUsbTether=(SwitchPreference)findPreference(USB_TETHER_SETTINGS);
  mBluetoothTether=(SwitchPreference)findPreference(ENABLE_BLUETOOTH_TETHERING);
  mCm=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
  mUsbRegexs=mCm.getTetherableUsbRegexs();
  mWifiRegexs=mCm.getTetherableWifiRegexs();
  mBluetoothRegexs=mCm.getTetherableBluetoothRegexs();
  final boolean usbAvailable=mUsbRegexs.length != 0;
  final boolean wifiAvailable=mWifiRegexs.length != 0;
  final boolean bluetoothAvailable=mBluetoothRegexs.length != 0;
  if (!usbAvailable || Utils.isMonkeyRunning()) {
    getPreferenceScreen().removePreference(mUsbTether);
  }
  if (wifiAvailable && !Utils.isMonkeyRunning()) {
    mWifiApEnabler=new WifiApEnabler(activity,mEnableWifiAp);
    initWifiTethering();
  }
 else {
    getPreferenceScreen().removePreference(mEnableWifiAp);
    getPreferenceScreen().removePreference(wifiApSettings);
  }
  if (!bluetoothAvailable) {
    getPreferenceScreen().removePreference(mBluetoothTether);
  }
 else {
    BluetoothPan pan=mBluetoothPan.get();
    if (pan != null && pan.isTetheringOn()) {
      mBluetoothTether.setChecked(true);
    }
 else {
      mBluetoothTether.setChecked(false);
    }
  }
}
