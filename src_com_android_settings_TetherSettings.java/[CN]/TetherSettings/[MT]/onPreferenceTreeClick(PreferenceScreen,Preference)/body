{
  if (preference == mUsbTether) {
    boolean newState=mUsbTether.isChecked();
    ConnectivityManager cm=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
    if (newState) {
      String[] available=cm.getTetherableIfaces();
      String usbIface=findIface(available,mUsbRegexs);
      if (usbIface == null) {
        updateState();
        return true;
      }
      if (cm.tether(usbIface) != ConnectivityManager.TETHER_ERROR_NO_ERROR) {
        mUsbTether.setChecked(false);
        mUsbTether.setSummary(R.string.usb_tethering_errored_subtext);
        return true;
      }
      mUsbTether.setSummary("");
    }
 else {
      String[] tethered=cm.getTetheredIfaces();
      String usbIface=findIface(tethered,mUsbRegexs);
      if (usbIface == null) {
        updateState();
        return true;
      }
      if (cm.untether(usbIface) != ConnectivityManager.TETHER_ERROR_NO_ERROR) {
        mUsbTether.setSummary(R.string.usb_tethering_errored_subtext);
        return true;
      }
      mUsbTether.setSummary("");
    }
  }
 else   if (preference == mBluetoothTether) {
    boolean bluetoothTetherState=mBluetoothTether.isChecked();
    if (bluetoothTetherState) {
      BluetoothAdapter adapter=BluetoothAdapter.getDefaultAdapter();
      if (adapter.getState() == BluetoothAdapter.STATE_OFF) {
        adapter.enable();
        mBluetoothTether.setSummary(R.string.bluetooth_turning_on);
        mBluetoothTether.setEnabled(false);
      }
      mBluetoothPan.setBluetoothTethering(true);
      mBluetoothTether.setSummary(R.string.bluetooth_tethering_available_subtext);
    }
 else {
      boolean errored=false;
      ConnectivityManager cm=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
      String[] tethered=cm.getTetheredIfaces();
      String bluetoothIface=findIface(tethered,mBluetoothRegexs);
      if (bluetoothIface != null && cm.untether(bluetoothIface) != ConnectivityManager.TETHER_ERROR_NO_ERROR) {
        errored=true;
      }
      mBluetoothPan.setBluetoothTethering(false);
      if (errored) {
        mBluetoothTether.setSummary(R.string.bluetooth_tethering_errored_subtext);
      }
 else {
        mBluetoothTether.setSummary(R.string.bluetooth_tethering_off_subtext);
      }
    }
  }
 else   if (preference == mTetherHelp) {
    showDialog(DIALOG_TETHER_HELP);
    return true;
  }
  return super.onPreferenceTreeClick(screen,preference);
}
