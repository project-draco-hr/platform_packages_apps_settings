{
  ConnectivityManager cm=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
  boolean bluetoothTethered=false;
  boolean bluetoothAvailable=false;
  int bluetoothError=ConnectivityManager.TETHER_ERROR_NO_ERROR;
  boolean bluetoothErrored=false;
  for (  String s : available) {
    for (    String regex : mBluetoothRegexs) {
      if (s.matches(regex)) {
        bluetoothAvailable=true;
        if (bluetoothError == ConnectivityManager.TETHER_ERROR_NO_ERROR) {
          bluetoothError=cm.getLastTetherError(s);
        }
      }
    }
  }
  for (  String s : tethered) {
    for (    String regex : mBluetoothRegexs) {
      if (s.matches(regex))       bluetoothTethered=true;
    }
  }
  for (  String s : errored) {
    for (    String regex : mBluetoothRegexs) {
      if (s.matches(regex))       bluetoothErrored=true;
    }
  }
  BluetoothAdapter adapter=BluetoothAdapter.getDefaultAdapter();
  int btState=adapter.getState();
  if (btState == BluetoothAdapter.STATE_TURNING_OFF) {
    mBluetoothTether.setEnabled(false);
    mBluetoothTether.setSummary(R.string.wifi_stopping);
  }
 else   if (btState == BluetoothAdapter.STATE_TURNING_ON) {
    mBluetoothTether.setEnabled(false);
    mBluetoothTether.setSummary(R.string.bluetooth_turning_on);
  }
 else   if (mBluetoothPan.isTetheringOn()) {
    mBluetoothTether.setChecked(true);
    if (btState == BluetoothAdapter.STATE_ON) {
      mBluetoothTether.setEnabled(true);
      if (bluetoothTethered) {
        mBluetoothTether.setSummary(R.string.bluetooth_tethering_connected_subtext);
      }
 else       if (bluetoothErrored) {
        mBluetoothTether.setSummary(R.string.bluetooth_tethering_errored_subtext);
      }
 else {
        mBluetoothTether.setSummary(R.string.bluetooth_tethering_available_subtext);
      }
    }
  }
 else {
    mBluetoothTether.setEnabled(true);
    mBluetoothTether.setChecked(false);
    mBluetoothTether.setSummary(R.string.bluetooth_tethering_off_subtext);
  }
}
