{
  View view=certHolder.mSslCert.inflateCertificateView(getActivity());
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  builder.setTitle(com.android.internal.R.string.ssl_certificate);
  builder.setView(view);
  builder.setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int id){
      dialog.dismiss();
    }
  }
);
  final Dialog certDialog=builder.create();
  ViewGroup body=(ViewGroup)view.findViewById(com.android.internal.R.id.body);
  LayoutInflater inflater=LayoutInflater.from(getActivity());
  Button removeButton=(Button)inflater.inflate(R.layout.trusted_credential_details,body,false);
  body.addView(removeButton);
  removeButton.setText(certHolder.mTab.getButtonLabel(certHolder));
  removeButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (mUserManager.hasRestrictionsPin() && !mChallengeSucceeded) {
        ensurePin();
        return;
      }
      AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
      builder.setMessage(certHolder.mTab.getButtonConfirmation(certHolder));
      builder.setPositiveButton(android.R.string.yes,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int id){
          new AliasOperation(certHolder).execute();
          dialog.dismiss();
          certDialog.dismiss();
        }
      }
);
      builder.setNegativeButton(android.R.string.no,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int id){
          dialog.cancel();
        }
      }
);
      AlertDialog alert=builder.create();
      alert.show();
    }
  }
);
  certDialog.show();
}
