{
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  builder.setTitle(com.android.internal.R.string.ssl_certificate);
  final ArrayList<View> views=new ArrayList<View>();
  final ArrayList<String> titles=new ArrayList<String>();
  addCertChain(certHolder,views,titles);
  ArrayAdapter<String> arrayAdapter=new ArrayAdapter<String>(getActivity(),android.R.layout.simple_spinner_item,titles);
  arrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  Spinner spinner=new Spinner(getActivity());
  spinner.setAdapter(arrayAdapter);
  spinner.setOnItemSelectedListener(new OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int position,    long id){
      for (int i=0; i < views.size(); i++) {
        views.get(i).setVisibility(i == position ? View.VISIBLE : View.GONE);
      }
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  LinearLayout container=new LinearLayout(getActivity());
  container.setOrientation(LinearLayout.VERTICAL);
  container.addView(spinner);
  for (int i=0; i < views.size(); ++i) {
    View certificateView=views.get(i);
    if (i != 0) {
      certificateView.setVisibility(View.GONE);
    }
    container.addView(certificateView);
  }
  builder.setView(container);
  builder.setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int id){
      dialog.dismiss();
    }
  }
);
  final Dialog certDialog=builder.create();
  View view=views.get(0);
  ViewGroup body=(ViewGroup)view.findViewById(com.android.internal.R.id.body);
  LayoutInflater inflater=LayoutInflater.from(getActivity());
  Button removeButton=(Button)inflater.inflate(R.layout.trusted_credential_details,body,false);
  body.addView(removeButton);
  removeButton.setText(certHolder.mTab.getButtonLabel(certHolder));
  removeButton.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (mUserManager.hasRestrictionsChallenge() && !mChallengeSucceeded) {
        ensurePin();
        return;
      }
      AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
      builder.setMessage(certHolder.mTab.getButtonConfirmation(certHolder));
      builder.setPositiveButton(android.R.string.yes,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int id){
          new AliasOperation(certHolder).execute();
          dialog.dismiss();
          certDialog.dismiss();
        }
      }
);
      builder.setNegativeButton(android.R.string.no,new DialogInterface.OnClickListener(){
        @Override public void onClick(        DialogInterface dialog,        int id){
          dialog.cancel();
        }
      }
);
      AlertDialog alert=builder.create();
      alert.show();
    }
  }
);
  certDialog.show();
}
