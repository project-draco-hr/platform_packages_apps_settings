{
  ResolveInfo currentRecognizer=mAvailableVoiceInteractionsMap.get(currentSetting);
  if (currentRecognizer == null) {
    mVoiceInteractionPref.setSummary(mFragment.getString(R.string.no_voice_interactor));
    mVoiceInteractionPref.setValue("");
    return;
  }
  ServiceInfo si=currentRecognizer.serviceInfo;
  XmlResourceParser parser=null;
  String settingsActivity=null;
  try {
    parser=si.loadXmlMetaData(mFragment.getPackageManager(),VoiceInteractionService.SERVICE_META_DATA);
    if (parser == null) {
      throw new XmlPullParserException("No " + VoiceInteractionService.SERVICE_META_DATA + " meta-data for "+ si.packageName);
    }
    Resources res=mFragment.getPackageManager().getResourcesForApplication(si.applicationInfo);
    AttributeSet attrs=Xml.asAttributeSet(parser);
    int type;
    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && type != XmlPullParser.START_TAG) {
    }
    String nodeName=parser.getName();
    if (!"voice-interaction-service".equals(nodeName)) {
      throw new XmlPullParserException("Meta-data does not start with voice-interaction-service tag");
    }
    TypedArray array=res.obtainAttributes(attrs,com.android.internal.R.styleable.VoiceInteractionService);
    settingsActivity=array.getString(com.android.internal.R.styleable.VoiceInteractionService_settingsActivity);
    array.recycle();
  }
 catch (  XmlPullParserException e) {
    Log.e(TAG,"error parsing recognition service meta-data",e);
  }
catch (  IOException e) {
    Log.e(TAG,"error parsing recognition service meta-data",e);
  }
catch (  NameNotFoundException e) {
    Log.e(TAG,"error parsing recognition service meta-data",e);
  }
 finally {
    if (parser != null)     parser.close();
  }
  mVoiceInteractionPref.setSummary(currentRecognizer.loadLabel(mFragment.getPackageManager()));
  mVoiceInteractionPref.setValue(currentSetting);
  if (settingsActivity == null) {
    Log.w(TAG,"no recognizer settings available for " + si.packageName);
  }
 else {
    Intent i=new Intent(Intent.ACTION_MAIN);
    i.setComponent(new ComponentName(si.packageName,settingsActivity));
    mVoiceInteractionSettingsPref.setIntent(i);
  }
}
