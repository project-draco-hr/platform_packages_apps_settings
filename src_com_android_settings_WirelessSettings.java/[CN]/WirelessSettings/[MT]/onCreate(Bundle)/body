{
  super.onCreate(savedInstanceState);
  addPreferencesFromResource(R.xml.wireless_settings);
  final Activity activity=getActivity();
  mAirplaneModePreference=(CheckBoxPreference)findPreference(KEY_TOGGLE_AIRPLANE);
  CheckBoxPreference nfc=(CheckBoxPreference)findPreference(KEY_TOGGLE_NFC);
  PreferenceScreen ndefPush=(PreferenceScreen)findPreference(KEY_NDEF_PUSH_SETTINGS);
  CheckBoxPreference wifiP2p=(CheckBoxPreference)findPreference(KEY_TOGGLE_WIFI_P2P);
  mAirplaneModeEnabler=new AirplaneModeEnabler(activity,mAirplaneModePreference);
  mNfcEnabler=new NfcEnabler(activity,nfc,ndefPush);
  String toggleable=Settings.System.getString(activity.getContentResolver(),Settings.System.AIRPLANE_MODE_TOGGLEABLE_RADIOS);
  if (toggleable == null || !toggleable.contains(Settings.System.RADIO_WIFI)) {
    findPreference(KEY_VPN_SETTINGS).setDependency(KEY_TOGGLE_AIRPLANE);
  }
  if (toggleable == null || !toggleable.contains(Settings.System.RADIO_BLUETOOTH)) {
  }
  if (toggleable == null || !toggleable.contains(Settings.System.RADIO_NFC)) {
    findPreference(KEY_TOGGLE_NFC).setDependency(KEY_TOGGLE_AIRPLANE);
    findPreference(KEY_NDEF_PUSH_SETTINGS).setDependency(KEY_TOGGLE_AIRPLANE);
  }
  mNfcAdapter=NfcAdapter.getDefaultAdapter(activity);
  if (mNfcAdapter == null) {
    getPreferenceScreen().removePreference(nfc);
    getPreferenceScreen().removePreference(ndefPush);
    mNfcEnabler=null;
  }
  if (Utils.isWifiOnly(getActivity())) {
    getPreferenceScreen().removePreference(findPreference(KEY_MOBILE_NETWORK_SETTINGS));
  }
  WifiP2pManager p2p=(WifiP2pManager)activity.getSystemService(Context.WIFI_P2P_SERVICE);
  if (!p2p.isP2pSupported()) {
    getPreferenceScreen().removePreference(wifiP2p);
  }
 else {
    mWifiP2pEnabler=new WifiP2pEnabler(activity,wifiP2p);
  }
  if (!WIFI_P2P_DEBUG) {
    getPreferenceScreen().removePreference(findPreference(KEY_WIFI_P2P_SETTINGS));
  }
  Preference mGlobalProxy=findPreference(KEY_PROXY_SETTINGS);
  DevicePolicyManager mDPM=(DevicePolicyManager)activity.getSystemService(Context.DEVICE_POLICY_SERVICE);
  getPreferenceScreen().removePreference(mGlobalProxy);
  mGlobalProxy.setEnabled(mDPM.getGlobalProxyAdmin() == null);
  ConnectivityManager cm=(ConnectivityManager)activity.getSystemService(Context.CONNECTIVITY_SERVICE);
  if (!cm.isTetheringSupported()) {
    getPreferenceScreen().removePreference(findPreference(KEY_TETHER_SETTINGS));
  }
 else {
    String[] usbRegexs=cm.getTetherableUsbRegexs();
    String[] wifiRegexs=cm.getTetherableWifiRegexs();
    String[] bluetoothRegexs=cm.getTetherableBluetoothRegexs();
    boolean usbAvailable=usbRegexs.length != 0;
    boolean wifiAvailable=wifiRegexs.length != 0;
    boolean bluetoothAvailable=bluetoothRegexs.length != 0;
    Preference p=findPreference(KEY_TETHER_SETTINGS);
    if (wifiAvailable && usbAvailable && bluetoothAvailable) {
      p.setTitle(R.string.tether_settings_title_all);
    }
 else     if (wifiAvailable && usbAvailable) {
      p.setTitle(R.string.tether_settings_title_all);
    }
 else     if (wifiAvailable && bluetoothAvailable) {
      p.setTitle(R.string.tether_settings_title_all);
    }
 else     if (wifiAvailable) {
      p.setTitle(R.string.tether_settings_title_wifi);
    }
 else     if (usbAvailable && bluetoothAvailable) {
      p.setTitle(R.string.tether_settings_title_usb_bluetooth);
    }
 else     if (usbAvailable) {
      p.setTitle(R.string.tether_settings_title_usb);
    }
 else {
      p.setTitle(R.string.tether_settings_title_bluetooth);
    }
  }
}
