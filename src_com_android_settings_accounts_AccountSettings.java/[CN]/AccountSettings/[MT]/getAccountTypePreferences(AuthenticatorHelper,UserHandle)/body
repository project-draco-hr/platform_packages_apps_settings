{
  final String[] accountTypes=helper.getEnabledAccountTypes();
  final ArrayList<AccountPreference> accountTypePreferences=new ArrayList<AccountPreference>(accountTypes.length);
  for (int i=0; i < accountTypes.length; i++) {
    final String accountType=accountTypes[i];
    if (!accountTypeHasAnyRequestedAuthorities(helper,accountType)) {
      continue;
    }
    final CharSequence label=helper.getLabelForType(getActivity(),accountType);
    if (label == null) {
      continue;
    }
    final String titleResPackageName=helper.getPackageForType(accountType);
    final int titleResId=helper.getLabelIdForType(accountType);
    final Account[] accounts=AccountManager.get(getActivity()).getAccountsByTypeAsUser(accountType,userHandle);
    final boolean skipToAccount=accounts.length == 1 && !helper.hasAccountPreferences(accountType);
    if (skipToAccount) {
      final Bundle fragmentArguments=new Bundle();
      fragmentArguments.putParcelable(AccountSyncSettings.ACCOUNT_KEY,accounts[0]);
      fragmentArguments.putParcelable(EXTRA_USER,userHandle);
      accountTypePreferences.add(new AccountPreference(getPrefContext(),label,titleResPackageName,titleResId,AccountSyncSettings.class.getName(),fragmentArguments,helper.getDrawableForType(getActivity(),accountType)));
    }
 else {
      final Bundle fragmentArguments=new Bundle();
      fragmentArguments.putString(ManageAccountsSettings.KEY_ACCOUNT_TYPE,accountType);
      fragmentArguments.putString(ManageAccountsSettings.KEY_ACCOUNT_LABEL,label.toString());
      fragmentArguments.putParcelable(EXTRA_USER,userHandle);
      accountTypePreferences.add(new AccountPreference(getPrefContext(),label,titleResPackageName,titleResId,ManageAccountsSettings.class.getName(),fragmentArguments,helper.getDrawableForType(getActivity(),accountType)));
    }
    helper.preloadDrawableForType(getActivity(),accountType);
  }
  Collections.sort(accountTypePreferences,new Comparator<AccountPreference>(){
    @Override public int compare(    AccountPreference t1,    AccountPreference t2){
      return t1.mTitle.toString().compareTo(t2.mTitle.toString());
    }
  }
);
  return accountTypePreferences;
}
