{
  super.onCreate(savedInstanceState);
  if (savedInstanceState != null) {
    mAddAccountCalled=savedInstanceState.getBoolean(KEY_ADD_CALLED);
    if (Log.isLoggable(TAG,Log.VERBOSE))     Log.v(TAG,"restored");
  }
  final UserManager um=(UserManager)getSystemService(Context.USER_SERVICE);
  if (um.hasUserRestriction(UserManager.DISALLOW_MODIFY_ACCOUNTS)) {
    Toast.makeText(this,R.string.user_cannot_add_accounts_message,Toast.LENGTH_LONG).show();
    finish();
    return;
  }
  if (mAddAccountCalled) {
    finish();
    return;
  }
  final String[] authorities=getIntent().getStringArrayExtra(AccountPreferenceBase.AUTHORITIES_FILTER_KEY);
  final String[] accountTypes=getIntent().getStringArrayExtra(AccountPreferenceBase.ACCOUNT_TYPES_FILTER_KEY);
  final Intent intent=new Intent(this,Settings.ChooseAccountActivity.class);
  if (authorities != null) {
    intent.putExtra(AccountPreferenceBase.AUTHORITIES_FILTER_KEY,authorities);
  }
  if (accountTypes != null) {
    intent.putExtra(AccountPreferenceBase.ACCOUNT_TYPES_FILTER_KEY,accountTypes);
  }
  startActivityForResult(intent,CHOOSE_ACCOUNT_REQUEST);
}
