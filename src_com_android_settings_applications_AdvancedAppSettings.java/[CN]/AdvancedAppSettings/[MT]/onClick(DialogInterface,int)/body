{
  if (mResetDialog == dialog) {
    (new AsyncTask<Void,Void,Void>(){
      @Override protected Void doInBackground(      Void... params){
        List<ApplicationInfo> apps=mPm.getInstalledApplications(PackageManager.GET_DISABLED_COMPONENTS);
        for (int i=0; i < apps.size(); i++) {
          ApplicationInfo app=apps.get(i);
          try {
            if (DEBUG)             Log.v(TAG,"Enabling notifications: " + app.packageName);
            mNm.setNotificationsEnabledForPackage(app.packageName,app.uid,true);
          }
 catch (          android.os.RemoteException ex) {
          }
          if (!app.enabled) {
            if (DEBUG)             Log.v(TAG,"Enabling app: " + app.packageName);
            if (mPm.getApplicationEnabledSetting(app.packageName) == PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER) {
              mPm.setApplicationEnabledSetting(app.packageName,PackageManager.COMPONENT_ENABLED_STATE_DEFAULT,PackageManager.DONT_KILL_APP);
            }
          }
        }
        try {
          mIPm.resetPreferredActivities(UserHandle.myUserId());
        }
 catch (        RemoteException e) {
        }
        mAom.resetAllModes();
        final int[] restrictedUids=mNpm.getUidsWithPolicy(POLICY_REJECT_METERED_BACKGROUND);
        final int currentUserId=ActivityManager.getCurrentUser();
        for (        int uid : restrictedUids) {
          if (UserHandle.getUserId(uid) == currentUserId) {
            if (DEBUG)             Log.v(TAG,"Clearing data policy: " + uid);
            mNpm.setUidPolicy(uid,POLICY_NONE);
          }
        }
        mHandler.post(new Runnable(){
          @Override public void run(){
            if (DEBUG)             Log.v(TAG,"Done clearing");
            if (getActivity() != null && mActivityResumed) {
              if (DEBUG)               Log.v(TAG,"Updating UI!");
            }
          }
        }
);
        return null;
      }
    }
).execute();
  }
}
