{
  retrieveAppEntry();
  LinearLayout permsView=(LinearLayout)mRootView.findViewById(R.id.permissions_section);
  AppSecurityPermissions asp=new AppSecurityPermissions(getActivity(),mPackageName);
  int premiumSmsPermission=getPremiumSmsPermission(mPackageName);
  if (asp.getPermissionCount() > 0 || premiumSmsPermission != SmsUsageMonitor.PREMIUM_SMS_PERMISSION_UNKNOWN) {
    permsView.setVisibility(View.VISIBLE);
  }
 else {
    permsView.setVisibility(View.GONE);
  }
  TextView securityBillingDesc=(TextView)permsView.findViewById(R.id.security_settings_billing_desc);
  LinearLayout securityBillingList=(LinearLayout)permsView.findViewById(R.id.security_settings_billing_list);
  if (premiumSmsPermission != SmsUsageMonitor.PREMIUM_SMS_PERMISSION_UNKNOWN) {
    securityBillingDesc.setVisibility(View.VISIBLE);
    securityBillingList.setVisibility(View.VISIBLE);
    Spinner spinner=(Spinner)permsView.findViewById(R.id.security_settings_premium_sms_list);
    ArrayAdapter<CharSequence> adapter=ArrayAdapter.createFromResource(getActivity(),R.array.security_settings_premium_sms_values,android.R.layout.simple_spinner_item);
    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
    spinner.setAdapter(adapter);
    spinner.setSelection(premiumSmsPermission - 1);
    spinner.setOnItemSelectedListener(new PremiumSmsSelectionListener(mPackageName,mSmsManager));
  }
 else {
    securityBillingDesc.setVisibility(View.GONE);
    securityBillingList.setVisibility(View.GONE);
  }
  if (asp.getPermissionCount() > 0) {
    LinearLayout securityList=(LinearLayout)permsView.findViewById(R.id.security_settings_list);
    securityList.removeAllViews();
    securityList.addView(asp.getPermissionsViewWithRevokeButtons());
    String[] packages=mPm.getPackagesForUid(mPackageInfo.applicationInfo.uid);
    if (packages != null && packages.length > 1) {
      ArrayList<CharSequence> pnames=new ArrayList<CharSequence>();
      for (int i=0; i < packages.length; i++) {
        String pkg=packages[i];
        if (mPackageInfo.packageName.equals(pkg)) {
          continue;
        }
        try {
          ApplicationInfo ainfo=mPm.getApplicationInfo(pkg,0);
          pnames.add(ainfo.loadLabel(mPm));
        }
 catch (        PackageManager.NameNotFoundException e) {
        }
      }
      final int N=pnames.size();
      if (N > 0) {
        final Resources res=getActivity().getResources();
        String appListStr;
        if (N == 1) {
          appListStr=pnames.get(0).toString();
        }
 else         if (N == 2) {
          appListStr=res.getString(R.string.join_two_items,pnames.get(0),pnames.get(1));
        }
 else {
          appListStr=pnames.get(N - 2).toString();
          for (int i=N - 3; i >= 0; i--) {
            appListStr=res.getString(i == 0 ? R.string.join_many_items_first : R.string.join_many_items_middle,pnames.get(i),appListStr);
          }
          appListStr=res.getString(R.string.join_many_items_last,appListStr,pnames.get(N - 1));
        }
        TextView descr=(TextView)mRootView.findViewById(R.id.security_settings_desc);
        descr.setText(res.getString(R.string.security_settings_desc_multi,mPackageInfo.applicationInfo.loadLabel(mPm),appListStr));
      }
    }
  }
  return true;
}
