{
  if (v == mClearCacheButton) {
    if (mAppsControlDisallowedAdmin != null && !mAppsControlDisallowedBySystem) {
      RestrictedLockUtils.sendShowAdminSupportDetailsIntent(getActivity(),mAppsControlDisallowedAdmin);
      return;
    }
 else     if (mClearCacheObserver == null) {
      mClearCacheObserver=new ClearCacheObserver();
    }
    mPm.deleteApplicationCacheFiles(mPackageName,mClearCacheObserver);
  }
 else   if (v == mClearDataButton) {
    if (mAppsControlDisallowedAdmin != null && !mAppsControlDisallowedBySystem) {
      RestrictedLockUtils.sendShowAdminSupportDetailsIntent(getActivity(),mAppsControlDisallowedAdmin);
    }
 else     if (mAppEntry.info.manageSpaceActivityName != null) {
      if (!Utils.isMonkeyRunning()) {
        Intent intent=new Intent(Intent.ACTION_DEFAULT);
        intent.setClassName(mAppEntry.info.packageName,mAppEntry.info.manageSpaceActivityName);
        startActivityForResult(intent,REQUEST_MANAGE_SPACE);
      }
    }
 else {
      showDialogInner(DLG_CLEAR_DATA,0);
    }
  }
 else   if (v == mChangeStorageButton && mDialogBuilder != null && !isMoveInProgress()) {
    mDialogBuilder.show();
  }
 else   if (v == mClearUriButton) {
    if (mAppsControlDisallowedAdmin != null && !mAppsControlDisallowedBySystem) {
      RestrictedLockUtils.sendShowAdminSupportDetailsIntent(getActivity(),mAppsControlDisallowedAdmin);
    }
 else {
      clearUriPermissions();
    }
  }
}
