{
  AppFilter filter;
  Comparator<AppEntry> comparator;
synchronized (mRebuildSync) {
    if (!mRebuildRequested) {
      return;
    }
    filter=mRebuildFilter;
    comparator=mRebuildComparator;
    mRebuildRequested=false;
    mRebuildFilter=null;
    mRebuildComparator=null;
  }
  Process.setThreadPriority(Process.THREAD_PRIORITY_FOREGROUND);
  if (filter != null) {
    filter.init();
  }
  List<AppEntry> apps;
synchronized (mEntriesMap) {
    apps=new ArrayList<>(mAppEntries);
  }
  ArrayList<AppEntry> filteredApps=new ArrayList<AppEntry>();
  if (DEBUG)   Log.i(TAG,"Rebuilding...");
  for (int i=0; i < apps.size(); i++) {
    AppEntry entry=apps.get(i);
    if (filter == null || filter.filterApp(entry)) {
synchronized (mEntriesMap) {
        if (DEBUG_LOCKING)         Log.v(TAG,"rebuild acquired lock");
        entry.ensureLabel(mContext);
        if (DEBUG)         Log.i(TAG,"Using " + entry.info.packageName + ": "+ entry);
        filteredApps.add(entry);
        if (DEBUG_LOCKING)         Log.v(TAG,"rebuild releasing lock");
      }
    }
  }
  Collections.sort(filteredApps,comparator);
synchronized (mRebuildSync) {
    if (!mRebuildRequested) {
      mLastAppList=filteredApps;
      if (!mRebuildAsync) {
        mRebuildResult=filteredApps;
        mRebuildSync.notifyAll();
      }
 else {
        if (!mMainHandler.hasMessages(MainHandler.MSG_REBUILD_COMPLETE,this)) {
          Message msg=mMainHandler.obtainMessage(MainHandler.MSG_REBUILD_COMPLETE,this);
          mMainHandler.sendMessage(msg);
        }
      }
    }
  }
  Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
}
