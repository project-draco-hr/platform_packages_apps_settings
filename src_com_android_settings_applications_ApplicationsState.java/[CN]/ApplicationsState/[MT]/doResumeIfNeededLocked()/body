{
  if (mResumed) {
    return;
  }
  mResumed=true;
  if (mPackageIntentReceiver == null) {
    mPackageIntentReceiver=new PackageIntentReceiver();
    mPackageIntentReceiver.registerReceiver();
  }
  mApplications=new ArrayList<ApplicationInfo>();
  for (  UserHandle user : mUm.getUserProfiles()) {
    try {
      if (mEntriesMap.indexOfKey(user.getIdentifier()) < 0) {
        mEntriesMap.put(user.getIdentifier(),new HashMap<String,AppEntry>());
      }
      ParceledListSlice<ApplicationInfo> list=mIpm.getInstalledApplications(user.isOwner() ? mOwnerRetrieveFlags : mRetrieveFlags,user.getIdentifier());
      mApplications.addAll(list.getList());
    }
 catch (    RemoteException e) {
    }
  }
  if (mInterestingConfigChanges.applyNewConfig(mContext.getResources())) {
    clearEntries();
  }
 else {
    for (int i=0; i < mAppEntries.size(); i++) {
      mAppEntries.get(i).sizeStale=true;
    }
  }
  mHaveDisabledApps=false;
  for (int i=0; i < mApplications.size(); i++) {
    final ApplicationInfo info=mApplications.get(i);
    if (!info.enabled) {
      if (info.enabledSetting != PackageManager.COMPONENT_ENABLED_STATE_DISABLED_USER) {
        mApplications.remove(i);
        i--;
        continue;
      }
      mHaveDisabledApps=true;
    }
    int userId=UserHandle.getUserId(info.uid);
    final AppEntry entry=mEntriesMap.get(userId).get(info.packageName);
    if (entry != null) {
      entry.info=info;
    }
  }
  if (mAppEntries.size() > mApplications.size()) {
    clearEntries();
  }
  mCurComputingSizePkg=null;
  if (!mBackgroundHandler.hasMessages(BackgroundHandler.MSG_LOAD_ENTRIES)) {
    mBackgroundHandler.sendEmptyMessage(BackgroundHandler.MSG_LOAD_ENTRIES);
  }
}
