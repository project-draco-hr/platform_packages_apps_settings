{
  boolean isSystem=false;
  PackageManager packageManager=context.getPackageManager();
  try {
    ApplicationInfo appInfo=packageManager.getApplicationInfo(pkg,0);
    if ((appInfo.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
      isSystem=true;
    }
  }
 catch (  PackageManager.NameNotFoundException e) {
    Log.w(TAG,"Package " + pkg + " not found",e);
    return context.getString(R.string.system_alert_window_off);
  }
  AppOpsManager appOpsManager=(AppOpsManager)context.getSystemService(Context.APP_OPS_SERVICE);
  List<AppOpsManager.PackageOps> packageOps=appOpsManager.getPackagesForOps(APP_OPS_OP_CODE);
  if (packageOps == null) {
    return context.getString(R.string.system_alert_window_off);
  }
  int uid=isSystem ? 0 : -1;
  for (  AppOpsManager.PackageOps packageOp : packageOps) {
    if (pkg.equals(packageOp.getPackageName())) {
      uid=packageOp.getUid();
      break;
    }
  }
  if (uid == -1) {
    return context.getString(R.string.system_alert_window_off);
  }
  int mode=appOpsManager.noteOpNoThrow(AppOpsManager.OP_SYSTEM_ALERT_WINDOW,uid,pkg);
  return context.getString((mode == AppOpsManager.MODE_ALLOWED) ? R.string.system_alert_window_on : R.string.system_alert_window_off);
}
