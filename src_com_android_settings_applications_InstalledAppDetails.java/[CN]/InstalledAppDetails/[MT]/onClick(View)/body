{
  if (mAppEntry == null) {
    setIntentAndFinish(true,true);
    return;
  }
  String packageName=mAppEntry.info.packageName;
  if (v == mUninstallButton) {
    if (mDpm.packageHasActiveAdmins(mPackageInfo.packageName)) {
      Activity activity=getActivity();
      Intent uninstallDAIntent=new Intent(activity,DeviceAdminAdd.class);
      uninstallDAIntent.putExtra(DeviceAdminAdd.EXTRA_DEVICE_ADMIN_PACKAGE_NAME,mPackageName);
      activity.startActivityForResult(uninstallDAIntent,REQUEST_REMOVE_DEVICE_ADMIN);
      return;
    }
    EnforcedAdmin admin=RestrictedLockUtils.checkIfUninstallBlocked(getActivity(),packageName,mUserId);
    boolean uninstallBlockedBySystem=mAppsControlDisallowedBySystem || RestrictedLockUtils.hasBaseUserRestriction(getActivity(),packageName,mUserId);
    if (admin != null && !uninstallBlockedBySystem) {
      RestrictedLockUtils.sendShowAdminSupportDetailsIntent(getActivity(),admin);
    }
 else     if ((mAppEntry.info.flags & ApplicationInfo.FLAG_SYSTEM) != 0) {
      if (mAppEntry.info.enabled && !isDisabledUntilUsed()) {
        if (mUpdatedSysApp) {
          showDialogInner(DLG_SPECIAL_DISABLE,0);
        }
 else {
          showDialogInner(DLG_DISABLE,0);
        }
      }
 else {
        new DisableChanger(this,mAppEntry.info,PackageManager.COMPONENT_ENABLED_STATE_DEFAULT).execute((Object)null);
      }
    }
 else     if ((mAppEntry.info.flags & ApplicationInfo.FLAG_INSTALLED) == 0) {
      uninstallPkg(packageName,true,false);
    }
 else {
      uninstallPkg(packageName,false,false);
    }
  }
 else   if (v == mForceStopButton) {
    if (mAppsControlDisallowedAdmin != null && !mAppsControlDisallowedBySystem) {
      RestrictedLockUtils.sendShowAdminSupportDetailsIntent(getActivity(),mAppsControlDisallowedAdmin);
    }
 else {
      showDialogInner(DLG_FORCE_STOP,0);
    }
  }
}
