{
  if (DEBUG)   Log.i(TAG,"Rebuilding app list...");
  ApplicationsState.AppFilter filterObj;
  Comparator<AppEntry> comparatorObj;
  boolean emulated=Environment.isExternalStorageEmulated();
  if (emulated) {
    mWhichSize=SIZE_TOTAL;
  }
 else {
    mWhichSize=SIZE_INTERNAL;
  }
switch (mLastFilterMode) {
case FILTER_APPS_THIRD_PARTY:
    filterObj=ApplicationsState.THIRD_PARTY_FILTER;
  break;
case FILTER_APPS_SDCARD:
filterObj=ApplicationsState.ON_SD_CARD_FILTER;
if (!emulated) {
mWhichSize=SIZE_EXTERNAL;
}
break;
default :
filterObj=null;
break;
}
switch (mLastSortMode) {
case SORT_ORDER_SIZE:
switch (mWhichSize) {
case SIZE_INTERNAL:
comparatorObj=ApplicationsState.INTERNAL_SIZE_COMPARATOR;
break;
case SIZE_EXTERNAL:
comparatorObj=ApplicationsState.EXTERNAL_SIZE_COMPARATOR;
break;
default :
comparatorObj=ApplicationsState.SIZE_COMPARATOR;
break;
}
break;
default :
comparatorObj=ApplicationsState.ALPHA_COMPARATOR;
break;
}
ArrayList<ApplicationsState.AppEntry> entries=mState.rebuild(filterObj,comparatorObj);
if (entries == null && !eraseold) {
return;
}
mBaseEntries=entries;
if (mBaseEntries != null) {
mEntries=applyPrefixFilter(mCurFilterPrefix,mBaseEntries);
}
 else {
mEntries=null;
}
notifyDataSetChanged();
updateStorageUsage();
if (entries == null) {
mWaitingForData=true;
mListContainer.setVisibility(View.INVISIBLE);
mLoadingContainer.setVisibility(View.VISIBLE);
}
 else {
mListContainer.setVisibility(View.VISIBLE);
mLoadingContainer.setVisibility(View.GONE);
}
}
