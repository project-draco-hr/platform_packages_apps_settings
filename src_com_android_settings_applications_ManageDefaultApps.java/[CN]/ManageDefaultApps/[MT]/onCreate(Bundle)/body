{
  super.onCreate(icicle);
  addPreferencesFromResource(R.xml.default_apps);
  mPm=getPackageManager();
  myUserId=UserHandle.myUserId();
  mDefaultBrowserPreference=(DefaultBrowserPreference)findPreference(KEY_DEFAULT_BROWSER);
  mDefaultBrowserPreference.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      if (newValue == null) {
        return false;
      }
      final CharSequence packageName=(CharSequence)newValue;
      if (TextUtils.isEmpty(packageName)) {
        return false;
      }
      boolean result=mPm.setDefaultBrowserPackageNameAsUser(packageName.toString(),myUserId);
      if (result) {
        mDefaultBrowserPreference.setValue(packageName.toString());
        final CharSequence appName=mDefaultBrowserPreference.getEntry();
        mDefaultBrowserPreference.setSummary(appName);
      }
      return result;
    }
  }
);
  final boolean isRestrictedUser=UserManager.get(getActivity()).getUserInfo(myUserId).isRestricted();
  if (isRestrictedUser || !DefaultSmsPreference.isAvailable(getActivity())) {
    removePreference(KEY_SMS_APPLICATION);
  }
  if (!DefaultPhonePreference.isAvailable(getActivity())) {
    removePreference(KEY_DEFAULT_PHONE_APP);
  }
  if (!DefaultEmergencyPreference.isAvailable(getActivity())) {
    removePreference(KEY_DEFAULT_EMERGENCY_APP);
  }
  if (!ManageAssist.isAvailable(getActivity())) {
    removePreference(KEY_ASSIST_AND_VOICE_INPUT);
  }
  if (!DefaultNotificationAssistantPreference.isAvailable(getActivity())) {
    removePreference(KEY_DEFAULT_NOTIFICATION_ASST);
  }
  if (DefaultEmergencyPreference.isCapable(getActivity())) {
    Index.getInstance(getActivity()).updateFromClassNameResource(ManageDefaultApps.class.getName(),true,true);
  }
}
