{
  if (dataChanged) {
    ServiceListAdapter adapter=mAdapter;
    adapter.refreshItems();
    adapter.notifyDataSetChanged();
  }
  if (mDataAvail != null) {
    mDataAvail.run();
    mDataAvail=null;
  }
  mMemInfoReader.readMemInfo();
synchronized (mState.mLock) {
    if (mCurShowCached != mAdapter.mShowBackground) {
      mCurShowCached=mAdapter.mShowBackground;
      if (mCurShowCached) {
        mForegroundProcessPrefix.setText(getResources().getText(R.string.running_processes_header_used_prefix));
        mAppsProcessPrefix.setText(getResources().getText(R.string.running_processes_header_cached_prefix));
      }
 else {
        mForegroundProcessPrefix.setText(getResources().getText(R.string.running_processes_header_system_prefix));
        mAppsProcessPrefix.setText(getResources().getText(R.string.running_processes_header_apps_prefix));
      }
    }
    final long totalRam=mMemInfoReader.getTotalSize();
    final long medRam;
    final long lowRam;
    if (mCurShowCached) {
      lowRam=mMemInfoReader.getFreeSize() + mMemInfoReader.getCachedSize();
      medRam=mState.mBackgroundProcessMemory;
    }
 else {
      lowRam=mMemInfoReader.getFreeSize() + mMemInfoReader.getCachedSize() + mState.mBackgroundProcessMemory;
      medRam=mState.mServiceProcessMemory;
    }
    final long highRam=totalRam - medRam - lowRam;
    if (mCurTotalRam != totalRam || mCurHighRam != highRam || mCurMedRam != medRam || mCurLowRam != lowRam) {
      mCurTotalRam=totalRam;
      mCurHighRam=highRam;
      mCurMedRam=medRam;
      mCurLowRam=lowRam;
      BidiFormatter bidiFormatter=BidiFormatter.getInstance();
      String sizeStr=bidiFormatter.unicodeWrap(Formatter.formatShortFileSize(getContext(),lowRam));
      mBackgroundProcessText.setText(getResources().getString(R.string.running_processes_header_ram,sizeStr));
      sizeStr=bidiFormatter.unicodeWrap(Formatter.formatShortFileSize(getContext(),medRam));
      mAppsProcessText.setText(getResources().getString(R.string.running_processes_header_ram,sizeStr));
      sizeStr=bidiFormatter.unicodeWrap(Formatter.formatShortFileSize(getContext(),highRam));
      mForegroundProcessText.setText(getResources().getString(R.string.running_processes_header_ram,sizeStr));
      mColorBar.setRatios(highRam / (float)totalRam,medRam / (float)totalRam,lowRam / (float)totalRam);
    }
  }
}
