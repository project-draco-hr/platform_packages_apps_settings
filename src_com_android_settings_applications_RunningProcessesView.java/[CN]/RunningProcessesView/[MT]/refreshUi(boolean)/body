{
  if (dataChanged) {
    ServiceListAdapter adapter=(ServiceListAdapter)(mListView.getAdapter());
    adapter.refreshItems();
    adapter.notifyDataSetChanged();
  }
  if (mDataAvail != null) {
    mDataAvail.run();
    mDataAvail=null;
  }
  mMemInfoReader.readMemInfo();
  long availMem=mMemInfoReader.getFreeSize() + mMemInfoReader.getCachedSize() - SECONDARY_SERVER_MEM;
  if (availMem < 0) {
    availMem=0;
  }
synchronized (mState.mLock) {
    if (mLastNumBackgroundProcesses != mState.mNumBackgroundProcesses || mLastBackgroundProcessMemory != mState.mBackgroundProcessMemory || mLastAvailMemory != availMem) {
      mLastNumBackgroundProcesses=mState.mNumBackgroundProcesses;
      mLastBackgroundProcessMemory=mState.mBackgroundProcessMemory;
      mLastAvailMemory=availMem;
      long freeMem=mLastAvailMemory + mLastBackgroundProcessMemory;
      String sizeStr=Formatter.formatShortFileSize(getContext(),freeMem);
      mBackgroundProcessText.setText(getResources().getString(R.string.service_background_processes,sizeStr));
      sizeStr=Formatter.formatShortFileSize(getContext(),mMemInfoReader.getTotalSize() - freeMem);
      mForegroundProcessText.setText(getResources().getString(R.string.service_foreground_processes,sizeStr));
    }
    if (mLastNumForegroundProcesses != mState.mNumForegroundProcesses || mLastForegroundProcessMemory != mState.mForegroundProcessMemory || mLastNumServiceProcesses != mState.mNumServiceProcesses || mLastServiceProcessMemory != mState.mServiceProcessMemory) {
      mLastNumForegroundProcesses=mState.mNumForegroundProcesses;
      mLastForegroundProcessMemory=mState.mForegroundProcessMemory;
      mLastNumServiceProcesses=mState.mNumServiceProcesses;
      mLastServiceProcessMemory=mState.mServiceProcessMemory;
    }
    float totalMem=mMemInfoReader.getTotalSize();
    float totalShownMem=availMem + mLastBackgroundProcessMemory + mLastServiceProcessMemory;
    mColorBar.setRatios((totalMem - totalShownMem) / totalMem,mLastServiceProcessMemory / totalMem,mLastBackgroundProcessMemory / totalMem);
  }
}
