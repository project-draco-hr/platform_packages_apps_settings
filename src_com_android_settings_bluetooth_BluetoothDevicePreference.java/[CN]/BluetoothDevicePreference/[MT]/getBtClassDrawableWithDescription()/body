{
  BluetoothClass btClass=mCachedDevice.getBtClass();
  if (btClass != null) {
switch (btClass.getMajorDeviceClass()) {
case BluetoothClass.Device.Major.COMPUTER:
      return new Pair<Integer,String>(R.drawable.ic_bt_laptop,COMPUTER);
case BluetoothClass.Device.Major.PHONE:
    return new Pair<Integer,String>(R.drawable.ic_bt_cellphone,PHONE);
case BluetoothClass.Device.Major.PERIPHERAL:
  return new Pair<Integer,String>(HidProfile.getHidClassDrawable(btClass),INPUT_PERIPHERAL);
case BluetoothClass.Device.Major.IMAGING:
return new Pair<Integer,String>(R.drawable.ic_bt_imaging,IMAGING);
default :
}
}
 else {
Log.w(TAG,"mBtClass is null");
}
List<LocalBluetoothProfile> profiles=mCachedDevice.getProfiles();
for (LocalBluetoothProfile profile : profiles) {
int resId=profile.getDrawableResource(btClass);
if (resId != 0) {
return new Pair<Integer,String>(resId,null);
}
}
if (btClass != null) {
if (btClass.doesClassMatch(BluetoothClass.PROFILE_A2DP)) {
return new Pair<Integer,String>(R.drawable.ic_bt_headphones_a2dp,HEADPHONE);
}
if (btClass.doesClassMatch(BluetoothClass.PROFILE_HEADSET)) {
return new Pair<Integer,String>(R.drawable.ic_bt_headset_hfp,HEADSET);
}
}
return new Pair<Integer,String>(R.drawable.ic_settings_bluetooth,BLUETOOTH);
}
