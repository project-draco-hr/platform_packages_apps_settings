{
  View view=getLayoutInflater().inflate(R.layout.bluetooth_pin_confirm,null);
  String name=Html.escapeHtml(deviceManager.getName(mDevice));
  TextView messageView=(TextView)view.findViewById(R.id.message);
  String messageText;
switch (mType) {
case BluetoothDevice.PAIRING_VARIANT_PASSKEY_CONFIRMATION:
    messageText=getString(R.string.bluetooth_confirm_passkey_msg,name,mPairingKey);
  break;
case BluetoothDevice.PAIRING_VARIANT_CONSENT:
case BluetoothDevice.PAIRING_VARIANT_OOB_CONSENT:
messageText=getString(R.string.bluetooth_incoming_pairing_msg,name);
break;
case BluetoothDevice.PAIRING_VARIANT_DISPLAY_PASSKEY:
case BluetoothDevice.PAIRING_VARIANT_DISPLAY_PIN:
messageText=getString(R.string.bluetooth_display_passkey_pin_msg,name,mPairingKey);
break;
default :
Log.e(TAG,"Incorrect pairing type received, not creating view");
return null;
}
messageView.setText(Html.fromHtml(messageText));
return view;
}
