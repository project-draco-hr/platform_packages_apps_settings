{
  super.onCreate(savedInstanceState);
  Intent intent=getIntent();
  if (!intent.getAction().equals(BluetoothDevice.ACTION_PAIRING_REQUEST)) {
    Log.e(TAG,"Error: this activity may be started only with intent " + BluetoothDevice.ACTION_PAIRING_REQUEST);
    finish();
    return;
  }
  mBluetoothManager=Utils.getLocalBtManager(this);
  if (mBluetoothManager == null) {
    Log.e(TAG,"Error: BluetoothAdapter not supported by system");
    finish();
    return;
  }
  mCachedDeviceManager=mBluetoothManager.getCachedDeviceManager();
  mDevice=intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
  mType=intent.getIntExtra(BluetoothDevice.EXTRA_PAIRING_VARIANT,BluetoothDevice.ERROR);
switch (mType) {
case BluetoothDevice.PAIRING_VARIANT_PIN:
case BluetoothDevice.PAIRING_VARIANT_PIN_16_DIGITS:
case BluetoothDevice.PAIRING_VARIANT_PASSKEY:
    createUserEntryDialog();
  break;
case BluetoothDevice.PAIRING_VARIANT_PASSKEY_CONFIRMATION:
int passkey=intent.getIntExtra(BluetoothDevice.EXTRA_PAIRING_KEY,BluetoothDevice.ERROR);
if (passkey == BluetoothDevice.ERROR) {
Log.e(TAG,"Invalid Confirmation Passkey received, not showing any dialog");
return;
}
mPairingKey=String.format(Locale.US,"%06d",passkey);
createConfirmationDialog();
break;
case BluetoothDevice.PAIRING_VARIANT_CONSENT:
case BluetoothDevice.PAIRING_VARIANT_OOB_CONSENT:
createConsentDialog();
break;
case BluetoothDevice.PAIRING_VARIANT_DISPLAY_PASSKEY:
case BluetoothDevice.PAIRING_VARIANT_DISPLAY_PIN:
int pairingKey=intent.getIntExtra(BluetoothDevice.EXTRA_PAIRING_KEY,BluetoothDevice.ERROR);
if (pairingKey == BluetoothDevice.ERROR) {
Log.e(TAG,"Invalid Confirmation Passkey or PIN received, not showing any dialog");
return;
}
if (mType == BluetoothDevice.PAIRING_VARIANT_DISPLAY_PASSKEY) {
mPairingKey=String.format("%06d",pairingKey);
}
 else {
mPairingKey=String.format("%04d",pairingKey);
}
createDisplayPasskeyOrPinDialog();
break;
default :
Log.e(TAG,"Incorrect pairing type received, not showing any dialog");
}
registerReceiver(mReceiver,new IntentFilter(BluetoothDevice.ACTION_PAIRING_CANCEL));
registerReceiver(mReceiver,new IntentFilter(BluetoothDevice.ACTION_BOND_STATE_CHANGED));
}
