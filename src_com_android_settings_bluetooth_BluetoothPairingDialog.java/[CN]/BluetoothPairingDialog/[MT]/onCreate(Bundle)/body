{
  super.onCreate(savedInstanceState);
  Intent intent=getIntent();
  if (!intent.getAction().equals(BluetoothIntent.PAIRING_REQUEST_ACTION)) {
    Log.e(TAG,"Error: this activity may be started only with intent " + BluetoothIntent.PAIRING_REQUEST_ACTION);
    finish();
  }
  mLocalManager=LocalBluetoothManager.getInstance(this);
  mDevice=intent.getParcelableExtra(BluetoothIntent.DEVICE);
  mType=intent.getIntExtra(BluetoothIntent.PAIRING_VARIANT,BluetoothClass.ERROR);
  if (mType == BluetoothDevice.PAIRING_VARIANT_PIN) {
    createUserEntryDialog();
  }
 else   if (mType == BluetoothDevice.PAIRING_VARIANT_PASSKEY) {
    createUserEntryDialog();
  }
 else   if (mType == BluetoothDevice.PAIRING_VARIANT_CONFIRMATION) {
    mConfirmationPasskey=intent.getIntExtra(BluetoothIntent.PASSKEY,BluetoothClass.ERROR);
    if (mConfirmationPasskey == BluetoothClass.ERROR) {
      Log.e(TAG,"Invalid ConfirmationPasskey received, not showing any dialog");
      return;
    }
    createConfirmationDialog();
  }
 else {
    Log.e(TAG,"Incorrect pairing type received, not showing any dialog");
  }
  registerReceiver(mReceiver,new IntentFilter(BluetoothIntent.PAIRING_CANCEL_ACTION));
}
