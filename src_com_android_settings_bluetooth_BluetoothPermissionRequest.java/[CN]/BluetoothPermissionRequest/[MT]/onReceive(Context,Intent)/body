{
  String action=intent.getAction();
  if (DEBUG)   Log.d(TAG,"onReceive");
  if (action.equals(BluetoothDevice.ACTION_CONNECTION_ACCESS_REQUEST)) {
    LocalBluetoothManager localManager=LocalBluetoothManager.getInstance(context);
    BluetoothDevice device=intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
    Intent connectionAccessIntent=new Intent(action);
    connectionAccessIntent.setClass(context,BluetoothPermissionActivity.class);
    connectionAccessIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
    connectionAccessIntent.putExtra(BluetoothDevice.EXTRA_DEVICE,device);
    String deviceAddress=device != null ? device.getAddress() : null;
    PowerManager powerManager=(PowerManager)context.getSystemService(Context.POWER_SERVICE);
    if (powerManager.isScreenOn() && localManager.shouldShowDialogInForeground(deviceAddress)) {
      context.startActivity(connectionAccessIntent);
    }
 else {
      Intent deleteIntent=new Intent(BluetoothDevice.ACTION_CONNECTION_ACCESS_REPLY);
      deleteIntent.putExtra(BluetoothDevice.EXTRA_CONNECTION_ACCESS_RESULT,BluetoothDevice.CONNECTION_ACCESS_NO);
      Notification notification=new Notification(android.R.drawable.stat_sys_data_bluetooth,context.getString(R.string.bluetooth_connection_permission_request),System.currentTimeMillis());
      String deviceName=device != null ? device.getName() : null;
      notification.setLatestEventInfo(context,context.getString(R.string.bluetooth_connection_permission_request),context.getString(R.string.bluetooth_connection_notif_message,deviceName),PendingIntent.getActivity(context,0,connectionAccessIntent,0));
      notification.flags=Notification.FLAG_AUTO_CANCEL | Notification.FLAG_ONLY_ALERT_ONCE;
      notification.defaults=Notification.DEFAULT_SOUND;
      notification.deleteIntent=PendingIntent.getBroadcast(context,0,deleteIntent,0);
      NotificationManager notificationManager=(NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);
      notificationManager.notify(NOTIFICATION_ID,notification);
    }
  }
 else   if (action.equals(BluetoothDevice.ACTION_CONNECTION_ACCESS_CANCEL)) {
    NotificationManager manager=(NotificationManager)context.getSystemService(Context.NOTIFICATION_SERVICE);
    manager.cancel(NOTIFICATION_ID);
  }
}
