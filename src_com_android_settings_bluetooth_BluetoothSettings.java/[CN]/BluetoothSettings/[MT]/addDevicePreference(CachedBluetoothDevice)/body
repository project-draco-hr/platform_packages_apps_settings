{
  ParcelUuid[] uuids=cachedDevice.getDevice().getUuids();
  BluetoothClass bluetoothClass=cachedDevice.getDevice().getBluetoothClass();
switch (mFilterType) {
case BluetoothDevicePicker.FILTER_TYPE_TRANSFER:
    if (uuids != null)     if (BluetoothUuid.containsAnyUuid(uuids,LocalBluetoothProfileManager.OPP_PROFILE_UUIDS))     return true;
  if (bluetoothClass.doesClassMatch(BluetoothClass.PROFILE_OPP))   return true;
break;
case BluetoothDevicePicker.FILTER_TYPE_AUDIO:
if (uuids != null) {
if (BluetoothUuid.containsAnyUuid(uuids,LocalBluetoothProfileManager.A2DP_PROFILE_UUIDS)) return true;
if (BluetoothUuid.containsAnyUuid(uuids,LocalBluetoothProfileManager.HEADSET_PROFILE_UUIDS)) return true;
}
 else {
if (bluetoothClass.doesClassMatch(BluetoothClass.PROFILE_A2DP)) return true;
if (bluetoothClass.doesClassMatch(BluetoothClass.PROFILE_HEADSET)) return true;
}
break;
default :
return true;
}
return false;
}
