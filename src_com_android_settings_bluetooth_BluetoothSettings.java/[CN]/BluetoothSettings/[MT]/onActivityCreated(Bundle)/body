{
  final Activity activity=getActivity();
  mLocalManager=LocalBluetoothManager.getInstance(activity);
  if (mLocalManager == null) {
    finish();
  }
  mFilterType=BluetoothDevicePicker.FILTER_TYPE_ALL;
  final Intent intent=activity.getIntent();
  Bundle args=getArguments();
  String action=args != null ? args.getString(ACTION) : null;
  if (TextUtils.isEmpty(action)) {
    action=intent.getAction();
  }
  if (getPreferenceScreen() != null)   getPreferenceScreen().removeAll();
  if (action.equals(BluetoothDevicePicker.ACTION_LAUNCH)) {
    mScreenType=SCREEN_TYPE_DEVICEPICKER;
    mNeedAuth=intent.getBooleanExtra(BluetoothDevicePicker.EXTRA_NEED_AUTH,false);
    mFilterType=intent.getIntExtra(BluetoothDevicePicker.EXTRA_FILTER_TYPE,BluetoothDevicePicker.FILTER_TYPE_ALL);
    mLaunchPackage=intent.getStringExtra(BluetoothDevicePicker.EXTRA_LAUNCH_PACKAGE);
    mLaunchClass=intent.getStringExtra(BluetoothDevicePicker.EXTRA_LAUNCH_CLASS);
    activity.setTitle(activity.getString(R.string.device_picker));
    addPreferencesFromResource(R.xml.device_picker);
  }
 else   if (action.equals(ACTION_LAUNCH_SCAN_MODE)) {
    mScreenType=SCREEN_TYPE_SCAN;
    addPreferencesFromResource(R.xml.device_picker);
  }
 else {
    addPreferencesFromResource(R.xml.bluetooth_settings);
    mEnabler=new BluetoothEnabler(activity,(CheckBoxPreference)findPreference(KEY_BT_CHECKBOX));
    mDiscoverableEnabler=new BluetoothDiscoverableEnabler(activity,(CheckBoxPreference)findPreference(KEY_BT_DISCOVERABLE));
    mNamePreference=(BluetoothNamePreference)findPreference(KEY_BT_NAME);
  }
  mDeviceList=(PreferenceCategory)findPreference(KEY_BT_DEVICE_LIST);
  super.onActivityCreated(savedInstanceState);
}
