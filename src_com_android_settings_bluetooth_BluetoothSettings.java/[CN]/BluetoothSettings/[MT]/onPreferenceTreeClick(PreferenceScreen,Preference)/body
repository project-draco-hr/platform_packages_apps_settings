{
  if (KEY_BT_SCAN.equals(preference.getKey())) {
    mLocalManager.startScanning(true);
    return true;
  }
  if (preference instanceof BluetoothDevicePreference) {
    BluetoothDevicePreference btPreference=(BluetoothDevicePreference)preference;
    CachedBluetoothDevice device=btPreference.getCachedDevice();
    mSelectedDevice=device.getDevice();
    if (mScreenType == SCREEN_TYPE_SETTINGS || mScreenType == SCREEN_TYPE_SCAN) {
      btPreference.getCachedDevice().onClicked();
    }
 else     if (mScreenType == SCREEN_TYPE_DEVICEPICKER) {
      mLocalManager.stopScanning();
      mLocalManager.persistSelectedDeviceInPicker(mSelectedDevice.getAddress());
      if ((device.getBondState() == BluetoothDevice.BOND_BONDED) || (mNeedAuth == false)) {
        sendDevicePickedIntent(mSelectedDevice);
        finish();
      }
 else {
        btPreference.getCachedDevice().onClicked();
      }
    }
 else {
      Log.e(TAG,"onPreferenceTreeClick has invalid mScreenType: " + mScreenType);
    }
    return true;
  }
  return super.onPreferenceTreeClick(preferenceScreen,preference);
}
