{
  final PreferenceScreen preferenceScreen=getPreferenceScreen();
  int messageId=0;
switch (bluetoothState) {
case BluetoothAdapter.STATE_ON:
    preferenceScreen.removeAll();
  preferenceScreen.setOrderingAsAdded(true);
if (mMyDevicePreference == null) {
  mMyDevicePreference=new Preference(getActivity());
}
mMyDevicePreference.setTitle(mLocalAdapter.getName());
mMyDevicePreference.setPersistent(false);
mMyDevicePreference.setEnabled(true);
preferenceScreen.addPreference(mMyDevicePreference);
if (mDiscoverableEnabler == null) {
mDiscoverableEnabler=new BluetoothDiscoverableEnabler(getActivity(),mLocalAdapter,mMyDevicePreference);
mDiscoverableEnabler.resume();
}
if (mPairedDevicesCategory == null) {
mPairedDevicesCategory=new PreferenceCategory(getActivity());
}
 else {
mPairedDevicesCategory.removeAll();
}
addDeviceCategory(mPairedDevicesCategory,R.string.bluetooth_preference_paired_devices,BluetoothDeviceFilter.BONDED_DEVICE_FILTER);
int numberOfPairedDevices=mPairedDevicesCategory.getPreferenceCount();
mDiscoverableEnabler.setNumberOfPairedDevices(numberOfPairedDevices);
if (mAvailableDevicesCategory == null) {
mAvailableDevicesCategory=new ProgressCategory(getActivity(),null);
}
 else {
mAvailableDevicesCategory.removeAll();
}
addDeviceCategory(mAvailableDevicesCategory,R.string.bluetooth_preference_found_devices,BluetoothDeviceFilter.UNBONDED_DEVICE_FILTER);
int numberOfAvailableDevices=mAvailableDevicesCategory.getPreferenceCount();
mAvailableDevicesCategoryIsPresent=true;
if (numberOfAvailableDevices == 0) {
preferenceScreen.removePreference(mAvailableDevicesCategory);
mAvailableDevicesCategoryIsPresent=false;
}
if (numberOfPairedDevices == 0) {
preferenceScreen.removePreference(mPairedDevicesCategory);
startScanning();
}
getActivity().invalidateOptionsMenu();
return;
case BluetoothAdapter.STATE_TURNING_OFF:
messageId=R.string.bluetooth_turning_off;
break;
case BluetoothAdapter.STATE_OFF:
messageId=R.string.bluetooth_empty_list_bluetooth_off;
break;
case BluetoothAdapter.STATE_TURNING_ON:
messageId=R.string.bluetooth_turning_on;
break;
}
setDeviceListGroup(preferenceScreen);
removeAllDevices();
mEmptyView.setText(messageId);
getActivity().invalidateOptionsMenu();
}
