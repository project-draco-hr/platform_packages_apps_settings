{
  final PreferenceScreen preferenceScreen=getPreferenceScreen();
  int messageId=0;
switch (bluetoothState) {
case BluetoothAdapter.STATE_ON:
    mDevicePreferenceMap.clear();
  if (isUiRestricted()) {
    messageId=R.string.bluetooth_empty_list_user_restricted;
    break;
  }
if (getPreferenceScreen().getPreferenceCount() == 0) {
  getPreferenceScreen().addPreference(mPairedDevicesCategory);
  getPreferenceScreen().addPreference(mAvailableDevicesCategory);
  getPreferenceScreen().addPreference(mMyDevicePreference);
}
addDeviceCategory(mPairedDevicesCategory,R.string.bluetooth_preference_paired_devices,BluetoothDeviceFilter.BONDED_DEVICE_FILTER,true);
int numberOfPairedDevices=mPairedDevicesCategory.getPreferenceCount();
if (isUiRestricted() || numberOfPairedDevices <= 0) {
if (preferenceScreen.findPreference(KEY_PAIRED_DEVICES) != null) {
preferenceScreen.removePreference(mPairedDevicesCategory);
}
}
 else {
if (preferenceScreen.findPreference(KEY_PAIRED_DEVICES) == null) {
preferenceScreen.addPreference(mPairedDevicesCategory);
}
}
addDeviceCategory(mAvailableDevicesCategory,R.string.bluetooth_preference_found_devices,BluetoothDeviceFilter.UNBONDED_DEVICE_FILTER,mInitialScanStarted);
if (!mInitialScanStarted) {
startScanning();
}
final Resources res=getResources();
final Locale locale=res.getConfiguration().getLocales().get(0);
final BidiFormatter bidiFormatter=BidiFormatter.getInstance(locale);
mMyDevicePreference.setSummary(res.getString(R.string.bluetooth_is_visible_message,bidiFormatter.unicodeWrap(mLocalAdapter.getName())));
getActivity().invalidateOptionsMenu();
if (mInitiateDiscoverable) {
mLocalAdapter.setScanMode(BluetoothAdapter.SCAN_MODE_CONNECTABLE_DISCOVERABLE);
mInitiateDiscoverable=false;
}
return;
case BluetoothAdapter.STATE_TURNING_OFF:
messageId=R.string.bluetooth_turning_off;
break;
case BluetoothAdapter.STATE_OFF:
setOffMessage();
if (isUiRestricted()) {
messageId=R.string.bluetooth_empty_list_user_restricted;
}
break;
case BluetoothAdapter.STATE_TURNING_ON:
messageId=R.string.bluetooth_turning_on;
mInitialScanStarted=false;
break;
}
setDeviceListGroup(preferenceScreen);
removeAllDevices();
if (messageId != 0) {
getEmptyTextView().setText(messageId);
}
if (!isUiRestricted()) {
getActivity().invalidateOptionsMenu();
}
}
