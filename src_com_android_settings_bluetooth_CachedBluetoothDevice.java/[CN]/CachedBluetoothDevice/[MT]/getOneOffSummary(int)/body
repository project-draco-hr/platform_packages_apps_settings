{
  boolean isA2dpConnected=false;
  boolean isHeadsetConnected=false;
  boolean isHidConnected=false;
  boolean isPanConnected=false;
  boolean isConnecting=false;
  if (accessibleProfile == OTHER_PROFILES) {
    if (mProfiles.contains(Profile.A2DP)) {
      LocalBluetoothProfileManager profileManager=LocalBluetoothProfileManager.getProfileManager(mLocalManager,Profile.A2DP);
      isConnecting=profileManager.getConnectionStatus(mDevice) == SettingsBtStatus.CONNECTION_STATUS_CONNECTING;
      isA2dpConnected=profileManager.isConnected(mDevice);
    }
    if (mProfiles.contains(Profile.HEADSET)) {
      LocalBluetoothProfileManager profileManager=LocalBluetoothProfileManager.getProfileManager(mLocalManager,Profile.HEADSET);
      isConnecting|=profileManager.getConnectionStatus(mDevice) == SettingsBtStatus.CONNECTION_STATUS_CONNECTING;
      isHeadsetConnected=profileManager.isConnected(mDevice);
    }
    if (mProfiles.contains(Profile.HID)) {
      LocalBluetoothProfileManager profileManager=LocalBluetoothProfileManager.getProfileManager(mLocalManager,Profile.HID);
      isConnecting|=profileManager.getConnectionStatus(mDevice) == SettingsBtStatus.CONNECTION_STATUS_CONNECTING;
      isHidConnected=profileManager.isConnected(mDevice);
    }
  }
 else   if (accessibleProfile == PAN_PROFILE && mProfiles.contains(Profile.PAN)) {
    LocalBluetoothProfileManager profileManager=LocalBluetoothProfileManager.getProfileManager(mLocalManager,Profile.PAN);
    isConnecting|=profileManager.getConnectionStatus(mDevice) == SettingsBtStatus.CONNECTION_STATUS_CONNECTING;
    isPanConnected=profileManager.isConnected(mDevice);
  }
  if (isConnecting) {
    return SettingsBtStatus.getConnectionStatusSummary(SettingsBtStatus.CONNECTION_STATUS_CONNECTING);
  }
 else   if (isA2dpConnected && isHeadsetConnected) {
    return R.string.bluetooth_summary_connected_to_a2dp_headset;
  }
 else   if (isA2dpConnected) {
    return R.string.bluetooth_summary_connected_to_a2dp;
  }
 else   if (isHeadsetConnected) {
    return R.string.bluetooth_summary_connected_to_headset;
  }
 else   if (isHidConnected) {
    return R.string.bluetooth_summary_connected_to_hid;
  }
 else   if (isPanConnected) {
    return R.string.bluetooth_summary_connected_to_pan;
  }
 else {
    return 0;
  }
}
