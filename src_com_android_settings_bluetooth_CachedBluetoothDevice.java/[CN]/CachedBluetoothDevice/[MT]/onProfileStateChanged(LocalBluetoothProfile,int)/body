{
  if (Utils.D) {
    Log.d(TAG,"onProfileStateChanged: profile " + profile + " newProfileState "+ newProfileState);
  }
  if (profile instanceof HeadsetProfile) {
    if (newProfileState == BluetoothProfile.STATE_CONNECTED) {
      if (BluetoothProfile.PRIORITY_AUTO_CONNECT != profile.getPreferred(mDevice))       mProfileManager.enableAutoConnectForHf(mDevice,true);
    }
 else     if (newProfileState == BluetoothProfile.STATE_DISCONNECTED) {
      if ((BluetoothAdapter.STATE_ON == mLocalAdapter.getBluetoothState()) || (BluetoothAdapter.STATE_TURNING_ON == mLocalAdapter.getBluetoothState())) {
        mProfileManager.enableAutoConnectForHf(mDevice,false);
      }
    }
  }
 else   if (profile instanceof A2dpProfile) {
    if (newProfileState == BluetoothProfile.STATE_CONNECTED) {
      if (BluetoothProfile.PRIORITY_AUTO_CONNECT != profile.getPreferred(mDevice))       mProfileManager.enableAutoConnectForA2dp(mDevice,true);
    }
 else     if (newProfileState == BluetoothProfile.STATE_DISCONNECTED) {
      if ((BluetoothAdapter.STATE_ON == mLocalAdapter.getBluetoothState()) || (BluetoothAdapter.STATE_TURNING_ON == mLocalAdapter.getBluetoothState())) {
        mProfileManager.enableAutoConnectForA2dp(mDevice,false);
      }
    }
  }
  mProfileConnectionState.put(profile,newProfileState);
  if (newProfileState == BluetoothProfile.STATE_CONNECTED) {
    if (!mProfiles.contains(profile)) {
      mRemovedProfiles.remove(profile);
      mProfiles.add(profile);
      if (profile instanceof PanProfile && ((PanProfile)profile).isLocalRoleNap(mDevice)) {
        mLocalNapRoleConnected=true;
      }
    }
  }
 else   if (mLocalNapRoleConnected && profile instanceof PanProfile && ((PanProfile)profile).isLocalRoleNap(mDevice)&& newProfileState == BluetoothProfile.STATE_DISCONNECTED) {
    Log.d(TAG,"Removing PanProfile from device after NAP disconnect");
    mProfiles.remove(profile);
    mRemovedProfiles.add(profile);
    mLocalNapRoleConnected=false;
  }
}
