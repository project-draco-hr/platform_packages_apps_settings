{
  if (intent == null)   return;
  int state=intent.getIntExtra(Intent.EXTRA_DOCK_STATE,intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,EXTRA_INVALID));
  BluetoothDevice device=intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
  if (DEBUG) {
    Log.d(TAG,"Action: " + intent.getAction() + " State:"+ state+ " Device: "+ (device == null ? "null" : device.getAliasName()));
  }
  if (Intent.ACTION_DOCK_EVENT.equals(intent.getAction()) || ACTION_DOCK_SHOW_UI.endsWith(intent.getAction())) {
    if (device == null) {
      if (DEBUG)       Log.d(TAG,"Device is missing");
      return;
    }
switch (state) {
case Intent.EXTRA_DOCK_STATE_UNDOCKED:
case Intent.EXTRA_DOCK_STATE_CAR:
case Intent.EXTRA_DOCK_STATE_DESK:
      Intent i=new Intent(intent);
    i.setClass(context,DockService.class);
  beginStartingService(context,i);
break;
default :
Log.e(TAG,"Unknown state: " + state);
break;
}
}
 else if (BluetoothHeadset.ACTION_CONNECTION_STATE_CHANGED.equals(intent.getAction()) || BluetoothA2dp.ACTION_CONNECTION_STATE_CHANGED.equals(intent.getAction())) {
int newState=intent.getIntExtra(BluetoothProfile.EXTRA_STATE,BluetoothProfile.STATE_CONNECTED);
int oldState=intent.getIntExtra(BluetoothProfile.EXTRA_PREVIOUS_STATE,0);
if (device == null) {
if (DEBUG) Log.d(TAG,"Device is missing");
return;
}
if (newState == BluetoothProfile.STATE_DISCONNECTED && oldState != BluetoothProfile.STATE_DISCONNECTING) {
Intent i=new Intent(intent);
i.setClass(context,DockService.class);
beginStartingService(context,i);
}
}
 else if (BluetoothAdapter.ACTION_STATE_CHANGED.equals(intent.getAction())) {
int btState=intent.getIntExtra(BluetoothAdapter.EXTRA_STATE,BluetoothAdapter.ERROR);
if (btState != BluetoothAdapter.STATE_TURNING_ON) {
Intent i=new Intent(intent);
i.setClass(context,DockService.class);
beginStartingService(context,i);
}
}
}
