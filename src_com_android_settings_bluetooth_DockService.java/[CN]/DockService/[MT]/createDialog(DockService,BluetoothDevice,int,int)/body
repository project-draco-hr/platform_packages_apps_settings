{
switch (state) {
case Intent.EXTRA_DOCK_STATE_CAR:
case Intent.EXTRA_DOCK_STATE_DESK:
    break;
default :
  return false;
}
startForeground(0,new Notification());
boolean firstTime=!hasAutoConnectSetting(mBtManager,device.getAddress());
CharSequence[] items=initBtSettings(service,device,state,firstTime);
final AlertDialog.Builder ab=new AlertDialog.Builder(service);
ab.setTitle(service.getString(R.string.bluetooth_dock_settings_title));
ab.setMultiChoiceItems(items,mCheckedItems,service);
LayoutInflater inflater=(LayoutInflater)service.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
float pixelScaleFactor=service.getResources().getDisplayMetrics().density;
View view=inflater.inflate(R.layout.remember_dock_setting,null);
CheckBox rememberCheckbox=(CheckBox)view.findViewById(R.id.remember);
boolean checked=firstTime || getAutoConnectSetting(mBtManager,device.getAddress());
rememberCheckbox.setChecked(checked);
rememberCheckbox.setOnCheckedChangeListener(this);
int viewSpacingLeft=(int)(14 * pixelScaleFactor);
int viewSpacingRight=(int)(14 * pixelScaleFactor);
ab.setView(view,viewSpacingLeft,0,viewSpacingRight,0);
if (DEBUG) {
Log.d(TAG,"Auto connect = " + getAutoConnectSetting(mBtManager,device.getAddress()));
}
ab.setPositiveButton(service.getString(android.R.string.ok),service);
mStartIdAssociatedWithDialog=startId;
mDialog=ab.create();
mDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_DIALOG);
mDialog.setOnDismissListener(service);
mDialog.show();
return true;
}
