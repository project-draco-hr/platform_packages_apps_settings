{
  int msgType=msg.what;
  final int state=msg.arg1;
  final int startId=msg.arg2;
  boolean deferFinishCall=false;
  BluetoothDevice device=null;
  if (msg.obj != null) {
    device=(BluetoothDevice)msg.obj;
  }
  if (DEBUG)   Log.d(TAG,"processMessage: " + msgType + " state: "+ state+ " device = "+ (device == null ? "null" : device.toString()));
switch (msgType) {
case MSG_TYPE_SHOW_UI:
    if (mDialog != null) {
      mDialog.dismiss();
      mDialog=null;
    }
  mDevice=device;
createDialog(mContext,mDevice,state,startId);
break;
case MSG_TYPE_DOCKED:
if (DEBUG) {
Log.d(TAG,"1 Has undock perm msg = " + mServiceHandler.hasMessages(MSG_TYPE_UNDOCKED_PERMANENT,mDevice));
Log.d(TAG,"2 Has undock perm msg = " + mServiceHandler.hasMessages(MSG_TYPE_UNDOCKED_PERMANENT,device));
}
mServiceHandler.removeMessages(MSG_TYPE_UNDOCKED_PERMANENT);
mServiceHandler.removeMessages(MSG_TYPE_DISABLE_BT);
removeSetting(SHARED_PREFERENCES_KEY_DISABLE_BT);
if (!device.equals(mDevice)) {
if (mDevice != null) {
handleUndocked(mContext,mBtManager,mDevice);
}
mDevice=device;
LocalBluetoothProfileManager.addServiceListener(this);
if (LocalBluetoothProfileManager.isManagerReady()) {
handleDocked(device,state,startId);
LocalBluetoothProfileManager.removeServiceListener(this);
}
 else {
final BluetoothDevice d=device;
mRunnable=new Runnable(){
public void run(){
handleDocked(d,state,startId);
}
}
;
deferFinishCall=true;
}
}
break;
case MSG_TYPE_UNDOCKED_PERMANENT:
handleUndocked(mContext,mBtManager,device);
if (DEBUG) {
Log.d(TAG,"DISABLE_BT_WHEN_UNDOCKED = " + getSettingBool(SHARED_PREFERENCES_KEY_DISABLE_BT_WHEN_UNDOCKED));
}
if (getSettingBool(SHARED_PREFERENCES_KEY_DISABLE_BT_WHEN_UNDOCKED)) {
if (!hasOtherConnectedDevices(device)) {
if (DEBUG) Log.d(TAG,"QUEUED BT DISABLE");
Message newMsg=mServiceHandler.obtainMessage(MSG_TYPE_DISABLE_BT,0,startId,null);
mServiceHandler.sendMessageDelayed(newMsg,DISABLE_BT_GRACE_PERIOD);
deferFinishCall=true;
}
 else {
removeSetting(SHARED_PREFERENCES_KEY_DISABLE_BT_WHEN_UNDOCKED);
}
}
break;
case MSG_TYPE_UNDOCKED_TEMPORARY:
Message newMsg=mServiceHandler.obtainMessage(MSG_TYPE_UNDOCKED_PERMANENT,state,startId,device);
mServiceHandler.sendMessageDelayed(newMsg,UNDOCKED_GRACE_PERIOD);
break;
case MSG_TYPE_DISABLE_BT:
if (DEBUG) Log.d(TAG,"BT DISABLE");
if (mBtManager.getBluetoothAdapter().disable()) {
removeSetting(SHARED_PREFERENCES_KEY_DISABLE_BT_WHEN_UNDOCKED);
}
 else {
setSettingBool(SHARED_PREFERENCES_KEY_DISABLE_BT,true);
mPendingTurnOffStartId=startId;
deferFinishCall=true;
if (DEBUG) Log.d(TAG,"disable failed. try again later " + startId);
}
break;
}
if (mDialog == null && mPendingDevice == null && msgType != MSG_TYPE_UNDOCKED_TEMPORARY && !deferFinishCall) {
DockEventReceiver.finishStartingService(DockService.this,startId);
}
}
