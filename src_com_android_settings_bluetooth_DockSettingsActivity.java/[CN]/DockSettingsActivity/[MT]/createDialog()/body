{
  int numOfProfiles;
switch (mState) {
case Intent.EXTRA_DOCK_STATE_CAR:
    numOfProfiles=2;
  break;
case Intent.EXTRA_DOCK_STATE_DESK:
numOfProfiles=1;
break;
default :
return;
}
CharSequence[] items=new CharSequence[numOfProfiles];
mCheckedItems=new boolean[numOfProfiles];
mProfileManagers=new LocalBluetoothProfileManager[numOfProfiles];
mProfiles=new Profile[numOfProfiles];
int i=0;
switch (mState) {
case Intent.EXTRA_DOCK_STATE_CAR:
mProfileManagers[i]=mHeadsetMgr;
mProfiles[i]=Profile.HEADSET;
mCheckedItems[i]=mHeadsetMgr.isPreferred(mDevice);
items[i]=getString(R.string.bluetooth_dock_settings_headset);
++i;
case Intent.EXTRA_DOCK_STATE_DESK:
mProfileManagers[i]=mA2dpMgr;
mProfiles[i]=Profile.A2DP;
mCheckedItems[i]=mA2dpMgr.isPreferred(mDevice);
items[i]=getString(R.string.bluetooth_dock_settings_a2dp);
break;
}
final AlertController.AlertParams p=mAlertParams;
p.mTitle=getString(R.string.bluetooth_dock_settings_title);
p.mIsMultiChoice=true;
p.mItems=items;
p.mCheckedItems=mCheckedItems;
p.mOnCheckboxClickListener=this;
LayoutInflater inflater=(LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
p.mView=inflater.inflate(R.layout.remember_dock_setting,null);
p.mViewSpacingSpecified=true;
float pixelScaleFactor=getResources().getDisplayMetrics().density;
p.mViewSpacingLeft=(int)(14 * pixelScaleFactor);
p.mViewSpacingRight=(int)(14 * pixelScaleFactor);
mRememberCheck=(CheckBox)p.mView.findViewById(R.id.remember);
if (DEBUG) Log.d(TAG,"Auto Check? = " + getAutoConnectSetting(mLocalManager));
mRememberCheck.setChecked(getAutoConnectSetting(mLocalManager));
mRememberCheck.setOnCheckedChangeListener(this);
p.mPositiveButtonText=getString(android.R.string.ok);
p.mPositiveButtonListener=this;
setupAlert();
}
