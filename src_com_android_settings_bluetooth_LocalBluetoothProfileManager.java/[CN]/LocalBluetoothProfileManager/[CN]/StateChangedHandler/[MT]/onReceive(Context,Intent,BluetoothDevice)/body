{
  CachedBluetoothDevice cachedDevice=mDeviceManager.findDevice(device);
  if (cachedDevice == null) {
    Log.w(TAG,"StateChangedHandler found new device: " + device);
    cachedDevice=mDeviceManager.addDevice(mLocalAdapter,LocalBluetoothProfileManager.this,device);
  }
  int newState=intent.getIntExtra(BluetoothProfile.EXTRA_STATE,0);
  int oldState=intent.getIntExtra(BluetoothProfile.EXTRA_PREVIOUS_STATE,0);
  if (newState == BluetoothProfile.STATE_DISCONNECTED && oldState == BluetoothProfile.STATE_CONNECTING) {
    Log.i(TAG,"Failed to connect " + mProfile + " device");
  }
  cachedDevice.onProfileStateChanged(mProfile,newState);
  cachedDevice.refresh();
  if ((mProfile instanceof HeadsetProfile) || (mProfile instanceof A2dpProfile)) {
    if ((BluetoothProfile.STATE_CONNECTED == newState) && (!isHfA2dpConnectMessagePosted)) {
      Message mes=hfA2dpConnectHandler.obtainMessage(CONNECT_HF_OR_A2DP);
      mes.obj=device;
      hfA2dpConnectHandler.sendMessageDelayed(mes,CONNECT_HF_OR_A2DP_TIMEOUT);
      Log.i(TAG,"Message posted for hf/a2dp connection");
      isHfA2dpConnectMessagePosted=true;
    }
 else     if (isHfA2dpConnectMessagePosted) {
      hfA2dpConnectHandler.removeMessages(CONNECT_HF_OR_A2DP);
      Log.i(TAG,"Message removed for hf/a2dp connection");
      isHfA2dpConnectMessagePosted=false;
    }
  }
}
