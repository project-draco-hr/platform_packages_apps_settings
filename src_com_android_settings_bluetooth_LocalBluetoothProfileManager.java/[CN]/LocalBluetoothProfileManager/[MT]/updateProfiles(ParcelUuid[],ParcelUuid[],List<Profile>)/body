{
  profiles.clear();
  if (uuids == null) {
    return;
  }
  if (sProfileMap.containsKey(Profile.HEADSET)) {
    if ((BluetoothUuid.isUuidPresent(localUuids,BluetoothUuid.HSP_AG) && BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.HSP)) || (BluetoothUuid.isUuidPresent(localUuids,BluetoothUuid.Handsfree_AG) && BluetoothUuid.isUuidPresent(uuids,BluetoothUuid.Handsfree))) {
      profiles.add(Profile.HEADSET);
    }
  }
  if (BluetoothUuid.containsAnyUuid(uuids,A2DP_SINK_PROFILE_UUIDS) && sProfileMap.containsKey(Profile.A2DP)) {
    profiles.add(Profile.A2DP);
  }
  if (BluetoothUuid.containsAnyUuid(uuids,OPP_PROFILE_UUIDS) && sProfileMap.containsKey(Profile.OPP)) {
    profiles.add(Profile.OPP);
  }
  if (BluetoothUuid.containsAnyUuid(uuids,HID_PROFILE_UUIDS) && sProfileMap.containsKey(Profile.HID)) {
    profiles.add(Profile.HID);
  }
  if (BluetoothUuid.containsAnyUuid(uuids,PANU_PROFILE_UUIDS) && sProfileMap.containsKey(Profile.PAN)) {
    profiles.add(Profile.PAN);
  }
}
