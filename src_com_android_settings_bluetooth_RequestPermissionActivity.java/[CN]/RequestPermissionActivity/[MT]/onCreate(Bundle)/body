{
  super.onCreate(savedInstanceState);
  mContext=getApplicationContext();
  if (parseIntent()) {
    finish();
    return;
  }
  int btState=mLocalAdapter.getState();
switch (btState) {
case BluetoothAdapter.STATE_OFF:
case BluetoothAdapter.STATE_TURNING_OFF:
case BluetoothAdapter.STATE_TURNING_ON:
    registerReceiver(mReceiver,new IntentFilter(BluetoothAdapter.ACTION_STATE_CHANGED));
  Intent intent=new Intent();
intent.setClass(this,RequestPermissionHelperActivity.class);
if (mEnableOnly) {
intent.setAction(RequestPermissionHelperActivity.ACTION_INTERNAL_REQUEST_BT_ON);
}
 else if (mExtraIntent == EXTRA_INTENT_DISCOVERY) {
intent.setAction(RequestPermissionHelperActivity.ACTION_INTERNAL_REQUEST_BT_ON_AND_DISCOVERABLE);
intent.putExtra(BluetoothAdapter.EXTRA_DISCOVERABLE_DURATION,mTimeout);
}
 else if (mExtraIntent == EXTRA_INTENT_START_ADVERTISING) {
intent.setAction(RequestPermissionHelperActivity.ACTION_INTERNAL_REQUEST_BT_ON_AND_START_ADVERTISE);
}
 else if (mExtraIntent == EXTRA_INTENT_STOP_ADVERTISING) {
}
startActivityForResult(intent,REQUEST_CODE_START_BT);
mNeededToEnableBluetooth=true;
break;
case BluetoothAdapter.STATE_ON:
if (needAskUserPermission()) {
createDialog();
}
 else {
proceedAndFinish();
}
break;
default :
Log.e(TAG,"Unknown adapter state: " + btState);
}
}
