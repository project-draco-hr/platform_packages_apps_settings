{
  SparseIntArray points=new SparseIntArray();
  NetworkStatsHistory.Entry entry=null;
  long totalData=0;
  final int start=mNetwork.getIndexAfter(mStart);
  final int end=mNetwork.getIndexAfter(mEnd);
  if (start < 0)   return;
  points.put(0,0);
  for (int i=start; i <= end; i++) {
    entry=mNetwork.getValues(i,entry);
    final long startTime=entry.bucketStart;
    final long endTime=startTime + entry.bucketDuration;
    totalData+=entry.rxBytes + entry.txBytes;
    points.put(toInt(startTime - mStart + 1),(int)(totalData / RESOLUTION));
    points.put(toInt(endTime - mStart),(int)(totalData / RESOLUTION));
  }
  if (points.size() > 1) {
    chart.addPath(points);
  }
}
