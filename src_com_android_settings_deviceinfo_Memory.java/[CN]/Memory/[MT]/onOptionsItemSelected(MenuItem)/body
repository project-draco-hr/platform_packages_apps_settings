{
switch (item.getItemId()) {
case R.id.storage_usb:
    if (getActivity() instanceof PreferenceActivity) {
      ((PreferenceActivity)getActivity()).startPreferencePanel(UsbSettings.class.getCanonicalName(),null,R.string.storage_title_usb,null,this,0);
    }
 else {
      startFragment(this,UsbSettings.class.getCanonicalName(),-1,null);
    }
  return true;
case R.id.storage_enforce_read_external:
{
  final boolean checked=!item.isChecked();
  item.setChecked(checked);
  try {
    mPackageService.setPermissionEnforced(READ_EXTERNAL_STORAGE,checked);
  }
 catch (  RemoteException e) {
    throw new RuntimeException("Problem talking with PackageManager",e);
  }
  return true;
}
}
return super.onOptionsItemSelected(item);
}
