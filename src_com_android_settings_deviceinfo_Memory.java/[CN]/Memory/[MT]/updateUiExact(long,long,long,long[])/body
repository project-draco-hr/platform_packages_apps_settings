{
  long appsPlusRemaining=totalSize - availSize;
  for (int i=0; i < Constants.NUM_MEDIA_DIRS_TRACKED; i++) {
    if (Constants.mMediaDirs.get(i).mPreferenceName == null) {
      continue;
    }
    appsPlusRemaining-=mediaSizes[i];
  }
  mInternalSize.setSummary(formatSize(totalSize));
  mInternalAvail.setSummary(formatSize(availSize));
  mInternalAppsUsage.setSummary(formatSize(appsPlusRemaining));
  mInternalUsageChart.clear();
  mInternalUsageChart.addEntry(appsPlusRemaining / (float)totalSize,mInternalAppsColor);
  for (int i=0; i < Constants.NUM_MEDIA_DIRS_TRACKED; i++) {
    if (Constants.mMediaDirs.get(i).mPreferenceName == null) {
      continue;
    }
    this.mMediaPreferences[i].setSummary(formatSize(mediaSizes[i]));
    if (mediaSizes[i] > 0) {
      final int color=mRes.getColor(Constants.mMediaDirs.get(i).mColor);
      mInternalUsageChart.addEntry(mediaSizes[i] / (float)totalSize,color);
    }
  }
  mInternalUsageChart.addEntry(availSize / (float)totalSize,mInternalAvailColor);
  mInternalUsageChart.commit();
}
