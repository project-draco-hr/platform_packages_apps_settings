{
  if (!isVolumeValid()) {
    getActivity().finish();
    return;
  }
  getActivity().setTitle(mStorageManager.getBestVolumeDescription(mVolume));
  getFragmentManager().invalidateOptionsMenu();
  final Context context=getActivity();
  final PreferenceScreen screen=getPreferenceScreen();
  screen.removeAll();
  addPreference(mSummary);
  final boolean showUsers=!mUsers.isEmpty();
  final boolean showShared=(mSharedVolume != null) && mSharedVolume.isMountedReadable();
  if (showUsers) {
    addPreference(new PreferenceHeader(context,mCurrentUser.name));
  }
  addPreference(mApps);
  if (showShared) {
    addPreference(mImages);
    addPreference(mVideos);
    addPreference(mAudio);
    addPreference(mOther);
  }
  addPreference(mCache);
  if (showShared) {
    addPreference(mExplore);
  }
  if (showUsers) {
    addPreference(new PreferenceHeader(context,R.string.storage_other_users));
    for (    Preference pref : mUsers) {
      addPreference(pref);
    }
  }
  for (int i=0; i < screen.getPreferenceCount(); i++) {
    final Preference pref=screen.getPreference(i);
    if (pref instanceof StorageItemPreference) {
      ((StorageItemPreference)pref).setLoading();
    }
  }
  final File file=mVolume.getPath();
  final long totalBytes=file.getTotalSpace();
  final long freeBytes=file.getFreeSpace();
  final long usedBytes=totalBytes - freeBytes;
  final BytesResult result=Formatter.formatBytes(getResources(),usedBytes,0);
  mSummary.setTitle(TextUtils.expandTemplate(getText(R.string.storage_size_large),result.value,result.units));
  mSummary.setSummary(getString(R.string.storage_volume_used,Formatter.formatFileSize(context,totalBytes)));
  mSummary.setPercent((int)((usedBytes * 100) / totalBytes));
  mMeasure.forceMeasure();
}
