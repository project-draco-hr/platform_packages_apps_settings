{
  super.onCreate(icicle);
  final Context context=getActivity();
  mIsPermittedToAdopt=UserManager.get(context).isAdminUser();
  mStorageManager=context.getSystemService(StorageManager.class);
  if (DocumentsContract.ACTION_DOCUMENT_ROOT_SETTINGS.equals(getActivity().getIntent().getAction())) {
    final Uri rootUri=getActivity().getIntent().getData();
    final String fsUuid=DocumentsContract.getRootId(rootUri);
    mVolume=mStorageManager.findVolumeByUuid(fsUuid);
  }
 else {
    final String volId=getArguments().getString(VolumeInfo.EXTRA_VOLUME_ID);
    mVolume=mStorageManager.findVolumeById(volId);
  }
  if (!isVolumeValid()) {
    getActivity().finish();
    return;
  }
  mDisk=mStorageManager.findDiskById(mVolume.getDiskId());
  Preconditions.checkNotNull(mDisk);
  mVolumeId=mVolume.getId();
  addPreferencesFromResource(R.xml.device_info_storage_volume);
  getPreferenceScreen().setOrderingAsAdded(true);
  mSummary=new StorageSummaryPreference(context);
  mMount=buildAction(R.string.storage_menu_mount);
  mUnmount=new Button(getActivity());
  mUnmount.setText(R.string.storage_menu_unmount);
  mUnmount.setOnClickListener(mUnmountListener);
  mFormatPublic=buildAction(R.string.storage_menu_format);
  if (mIsPermittedToAdopt) {
    mFormatPrivate=buildAction(R.string.storage_menu_format_private);
  }
}
