{
  final Context context=mContext != null ? mContext.get() : null;
  if (context == null) {
    return;
  }
  final MeasurementDetails details=new MeasurementDetails();
  final Message finished=obtainMessage(MSG_COMPLETED,details);
  details.totalSize=mTotalSize;
  details.availSize=mAvailSize;
  final UserManager userManager=(UserManager)context.getSystemService(Context.USER_SERVICE);
  final List<UserInfo> users=userManager.getUsers();
  final int currentUser=ActivityManager.getCurrentUser();
  final UserEnvironment currentEnv=new UserEnvironment(currentUser);
  final boolean measureMedia=(mIsInternal && Environment.isExternalStorageEmulated()) || mIsPrimary;
  if (measureMedia) {
    for (    String type : sMeasureMediaTypes) {
      final File path=currentEnv.getExternalStoragePublicDirectory(type);
      final long size=getDirectorySize(imcs,path);
      details.mediaSize.put(type,size);
    }
  }
  if (measureMedia) {
    final File path=mIsInternal ? currentEnv.getExternalStorageDirectory() : mVolume.getPathFile();
    details.miscSize=measureMisc(imcs,path);
  }
  for (  UserInfo user : users) {
    final UserEnvironment userEnv=new UserEnvironment(user.id);
    final long size=getDirectorySize(imcs,userEnv.getExternalStorageDirectory());
    addValue(details.usersSize,user.id,size);
  }
  final PackageManager pm=context.getPackageManager();
  if (mIsInternal || mIsPrimary) {
    final List<ApplicationInfo> apps=pm.getInstalledApplications(PackageManager.GET_UNINSTALLED_PACKAGES | PackageManager.GET_DISABLED_COMPONENTS);
    final int count=users.size() * apps.size();
    final StatsObserver observer=new StatsObserver(mIsInternal,details,currentUser,finished,count);
    for (    UserInfo user : users) {
      for (      ApplicationInfo app : apps) {
        pm.getPackageSizeInfo(app.packageName,user.id,observer);
      }
    }
  }
 else {
    finished.sendToTarget();
  }
}
