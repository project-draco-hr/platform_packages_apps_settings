{
  super.onCreate(savedInstanceState);
  mLayoutInflater=LayoutInflater.from(this);
  mDialog=new AlertDialog.Builder(this).setTitle(R.string.usb_use).setView(R.layout.usb_dialog_container).setOnDismissListener(new DialogInterface.OnDismissListener(){
    @Override public void onDismiss(    DialogInterface dialog){
      finish();
    }
  }
).setNegativeButton(R.string.cancel,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      finish();
    }
  }
).create();
  mDialog.show();
  LinearLayout container=(LinearLayout)mDialog.findViewById(R.id.container);
  mEnforcedAdmin=RestrictedLockUtils.checkIfRestrictionEnforced(this,UserManager.DISALLOW_USB_FILE_TRANSFER,UserHandle.myUserId());
  mBackend=new UsbBackend(this);
  int current=mBackend.getCurrentMode();
  for (int i=0; i < DEFAULT_MODES.length; i++) {
    if (mBackend.isModeSupported(DEFAULT_MODES[i]) && !mBackend.isModeDisallowedBySystem(DEFAULT_MODES[i])) {
      inflateOption(DEFAULT_MODES[i],current == DEFAULT_MODES[i],container,mBackend.isModeDisallowed(DEFAULT_MODES[i]));
    }
  }
}
