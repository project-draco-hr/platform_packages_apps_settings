{
  super.onCreate(savedInstanceState);
  setContentView(R.layout.fingerprint_enroll_enrolling);
  setHeaderText(R.string.security_settings_fingerprint_enroll_start_title);
  mStartMessage=(TextView)findViewById(R.id.start_message);
  mRepeatMessage=(TextView)findViewById(R.id.repeat_message);
  mErrorText=(TextView)findViewById(R.id.error_text);
  mProgressBar=(ProgressBar)findViewById(R.id.fingerprint_progress_bar);
  mFingerprintAnimator=(ImageView)findViewById(R.id.fingerprint_animator);
  mIconAnimationDrawable=(AnimatedVectorDrawable)mFingerprintAnimator.getDrawable();
  mIconAnimationDrawable.registerAnimationCallback(mIconAnimationCallback);
  mFastOutSlowInInterpolator=AnimationUtils.loadInterpolator(this,android.R.interpolator.fast_out_slow_in);
  mLinearOutSlowInInterpolator=AnimationUtils.loadInterpolator(this,android.R.interpolator.linear_out_slow_in);
  mFastOutLinearInInterpolator=AnimationUtils.loadInterpolator(this,android.R.interpolator.fast_out_linear_in);
  mFingerprintAnimator.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      if (event.getActionMasked() == MotionEvent.ACTION_DOWN) {
        mIconTouchCount++;
        if (mIconTouchCount == ICON_TOUCH_COUNT_SHOW_UNTIL_DIALOG_SHOWN) {
          showIconTouchDialog();
        }
 else {
          mFingerprintAnimator.postDelayed(mShowDialogRunnable,ICON_TOUCH_DURATION_UNTIL_DIALOG_SHOWN);
        }
      }
 else       if (event.getActionMasked() == MotionEvent.ACTION_CANCEL || event.getActionMasked() == MotionEvent.ACTION_UP) {
        mFingerprintAnimator.removeCallbacks(mShowDialogRunnable);
      }
      return true;
    }
  }
);
  mIndicatorBackgroundRestingColor=getColor(R.color.fingerprint_indicator_background_resting);
  mIndicatorBackgroundActivatedColor=getColor(R.color.fingerprint_indicator_background_activated);
  mRestoring=savedInstanceState != null;
}
