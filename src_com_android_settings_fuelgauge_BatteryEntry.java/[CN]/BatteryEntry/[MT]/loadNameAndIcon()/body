{
  if (sipper.uidObj == null) {
    return;
  }
  PackageManager pm=context.getPackageManager();
  final int uid=sipper.uidObj.getUid();
  sipper.mPackages=pm.getPackagesForUid(uid);
  if (sipper.mPackages != null) {
    String[] packageLabels=new String[sipper.mPackages.length];
    System.arraycopy(sipper.mPackages,0,packageLabels,0,sipper.mPackages.length);
    IPackageManager ipm=AppGlobals.getPackageManager();
    final int userId=UserHandle.getUserId(uid);
    for (int i=0; i < packageLabels.length; i++) {
      try {
        final ApplicationInfo ai=ipm.getApplicationInfo(packageLabels[i],0,userId);
        if (ai == null) {
          Log.d(PowerUsageSummary.TAG,"Retrieving null app info for package " + packageLabels[i] + ", user "+ userId);
          continue;
        }
        CharSequence label=ai.loadLabel(pm);
        if (label != null) {
          packageLabels[i]=label.toString();
        }
        if (ai.icon != 0) {
          defaultPackageName=sipper.mPackages[i];
          icon=ai.loadIcon(pm);
          break;
        }
      }
 catch (      RemoteException e) {
        Log.d(PowerUsageSummary.TAG,"Error while retrieving app info for package " + packageLabels[i] + ", user "+ userId,e);
      }
    }
    if (packageLabels.length == 1) {
      name=packageLabels[0];
    }
 else {
      for (      String pkgName : sipper.mPackages) {
        try {
          final PackageInfo pi=ipm.getPackageInfo(pkgName,0,userId);
          if (pi == null) {
            Log.d(PowerUsageSummary.TAG,"Retrieving null package info for package " + pkgName + ", user "+ userId);
            continue;
          }
          if (pi.sharedUserLabel != 0) {
            final CharSequence nm=pm.getText(pkgName,pi.sharedUserLabel,pi.applicationInfo);
            if (nm != null) {
              name=nm.toString();
              if (pi.applicationInfo.icon != 0) {
                defaultPackageName=pkgName;
                icon=pi.applicationInfo.loadIcon(pm);
              }
              break;
            }
          }
        }
 catch (        RemoteException e) {
          Log.d(PowerUsageSummary.TAG,"Error while retrieving package info for package " + pkgName + ", user "+ userId,e);
        }
      }
    }
  }
  final String uidString=Integer.toString(uid);
  if (name == null) {
    name=uidString;
  }
  if (icon == null) {
    icon=pm.getDefaultActivityIcon();
  }
  UidToDetail utd=new UidToDetail();
  utd.name=name;
  utd.icon=icon;
  utd.packageName=defaultPackageName;
  sUidCache.put(uidString,utd);
  if (sHandler != null) {
    sHandler.sendMessage(sHandler.obtainMessage(MSG_UPDATE_NAME_ICON,this));
  }
}
