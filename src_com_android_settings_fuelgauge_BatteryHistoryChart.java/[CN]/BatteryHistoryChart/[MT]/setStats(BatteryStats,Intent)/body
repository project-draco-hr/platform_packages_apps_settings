{
  mStats=stats;
  mBatteryBroadcast=broadcast;
  if (DEBUG)   Log.d(TAG,"Setting stats...");
  final long elapsedRealtimeUs=SystemClock.elapsedRealtime() * 1000;
  long uSecTime=mStats.computeBatteryRealtime(elapsedRealtimeUs,BatteryStats.STATS_SINCE_CHARGED);
  mStatsPeriod=uSecTime;
  mChargingLabel=getContext().getString(R.string.battery_stats_charging_label);
  mScreenOnLabel=getContext().getString(R.string.battery_stats_screen_on_label);
  mGpsOnLabel=getContext().getString(R.string.battery_stats_gps_on_label);
  mCameraOnLabel=getContext().getString(R.string.battery_stats_camera_on_label);
  mFlashlightOnLabel=getContext().getString(R.string.battery_stats_flashlight_on_label);
  mWifiRunningLabel=getContext().getString(R.string.battery_stats_wifi_running_label);
  mCpuRunningLabel=getContext().getString(R.string.battery_stats_wake_lock_label);
  mPhoneSignalLabel=getContext().getString(R.string.battery_stats_phone_signal_label);
  mMaxPercentLabelString=Utils.formatPercentage(100);
  mMinPercentLabelString=Utils.formatPercentage(0);
  mInfo=BatteryInfo.getBatteryInfo(getContext(),mBatteryBroadcast,mStats,elapsedRealtimeUs);
  mDrainString="";
  mChargeDurationString="";
  setContentDescription(mInfo.mChargeLabelString);
  int pos=0;
  int lastInteresting=0;
  byte lastLevel=-1;
  mBatLow=0;
  mBatHigh=100;
  mStartWallTime=0;
  mEndDataWallTime=0;
  mEndWallTime=0;
  mHistStart=0;
  mHistEnd=0;
  long lastWallTime=0;
  long lastRealtime=0;
  int aggrStates=0;
  int aggrStates2=0;
  boolean first=true;
  if (stats.startIteratingHistoryLocked()) {
    final HistoryItem rec=new HistoryItem();
    while (stats.getNextHistoryLocked(rec)) {
      pos++;
      if (first) {
        first=false;
        mHistStart=rec.time;
      }
      if (rec.cmd == HistoryItem.CMD_CURRENT_TIME || rec.cmd == HistoryItem.CMD_RESET) {
        if (rec.currentTime > (lastWallTime + (180 * 24 * 60* 60* 1000L)) || rec.time < (mHistStart + (5 * 60 * 1000L))) {
          mStartWallTime=0;
        }
        lastWallTime=rec.currentTime;
        lastRealtime=rec.time;
        if (mStartWallTime == 0) {
          mStartWallTime=lastWallTime - (lastRealtime - mHistStart);
        }
      }
      if (rec.isDeltaData()) {
        if (rec.batteryLevel != lastLevel || pos == 1) {
          lastLevel=rec.batteryLevel;
        }
        lastInteresting=pos;
        mHistDataEnd=rec.time;
        aggrStates|=rec.states;
        aggrStates2|=rec.states2;
      }
    }
  }
  mHistEnd=mHistDataEnd + (mInfo.remainingTimeUs / 1000);
  mEndDataWallTime=lastWallTime + mHistDataEnd - lastRealtime;
  mEndWallTime=mEndDataWallTime + (mInfo.remainingTimeUs / 1000);
  mNumHist=lastInteresting;
  mHaveGps=(aggrStates & HistoryItem.STATE_GPS_ON_FLAG) != 0;
  mHaveFlashlight=(aggrStates2 & HistoryItem.STATE2_FLASHLIGHT_FLAG) != 0;
  mHaveCamera=(aggrStates2 & HistoryItem.STATE2_CAMERA_FLAG) != 0;
  mHaveWifi=(aggrStates2 & HistoryItem.STATE2_WIFI_RUNNING_FLAG) != 0 || (aggrStates & (HistoryItem.STATE_WIFI_FULL_LOCK_FLAG | HistoryItem.STATE_WIFI_MULTICAST_ON_FLAG | HistoryItem.STATE_WIFI_SCAN_FLAG)) != 0;
  if (!com.android.settings.Utils.isWifiOnly(getContext())) {
    mHavePhoneSignal=true;
  }
  if (mHistEnd <= mHistStart)   mHistEnd=mHistStart + 1;
}
