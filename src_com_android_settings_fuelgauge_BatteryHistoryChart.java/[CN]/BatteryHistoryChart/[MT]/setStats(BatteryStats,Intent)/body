{
  mStats=stats;
  mBatteryBroadcast=broadcast;
  final long elapsedRealtimeUs=SystemClock.elapsedRealtime() * 1000;
  long uSecTime=mStats.computeBatteryRealtime(elapsedRealtimeUs,BatteryStats.STATS_SINCE_CHARGED);
  mStatsPeriod=uSecTime;
  mChargingLabel=getContext().getString(R.string.battery_stats_charging_label);
  mScreenOnLabel=getContext().getString(R.string.battery_stats_screen_on_label);
  mGpsOnLabel=getContext().getString(R.string.battery_stats_gps_on_label);
  mWifiRunningLabel=getContext().getString(R.string.battery_stats_wifi_running_label);
  mCpuRunningLabel=getContext().getString(R.string.battery_stats_wake_lock_label);
  mPhoneSignalLabel=getContext().getString(R.string.battery_stats_phone_signal_label);
  int pos=0;
  int lastInteresting=0;
  byte lastLevel=-1;
  mBatLow=0;
  mBatHigh=100;
  int aggrStates=0;
  boolean first=true;
  if (stats.startIteratingHistoryLocked()) {
    final HistoryItem rec=new HistoryItem();
    while (stats.getNextHistoryLocked(rec)) {
      pos++;
      if (rec.isDeltaData()) {
        if (first) {
          first=false;
          mHistStart=rec.time;
        }
        if (rec.batteryLevel != lastLevel || pos == 1) {
          lastLevel=rec.batteryLevel;
        }
        lastInteresting=pos;
        mHistEnd=rec.time;
        aggrStates|=rec.states;
      }
    }
  }
  mNumHist=lastInteresting;
  mHaveGps=(aggrStates & HistoryItem.STATE_GPS_ON_FLAG) != 0;
  mHaveWifi=(aggrStates & HistoryItem.STATE_WIFI_RUNNING_FLAG) != 0;
  if (!com.android.settings.Utils.isWifiOnly(getContext())) {
    mHavePhoneSignal=true;
  }
  if (mHistEnd <= mHistStart)   mHistEnd=mHistStart + 1;
  mDurationString=Utils.formatElapsedTime(getContext(),mHistEnd - mHistStart,true);
  int batteryLevel=com.android.settings.Utils.getBatteryLevel(mBatteryBroadcast);
  final int status=mBatteryBroadcast.getIntExtra(BatteryManager.EXTRA_STATUS,BatteryManager.BATTERY_STATUS_UNKNOWN);
  if (status == BatteryManager.BATTERY_STATUS_DISCHARGING) {
    final long drainTime=mStats.computeBatteryTimeRemaining(elapsedRealtimeUs);
    if (drainTime > 0) {
      String timeString=Formatter.formatShortElapsedTime(getContext(),drainTime / 1000);
      mChargeLabelString=getContext().getResources().getString(R.string.power_discharging_duration,batteryLevel,timeString);
    }
 else {
      mChargeLabelString=getContext().getResources().getString(R.string.power_discharging,batteryLevel);
    }
  }
 else {
    final long chargeTime=mStats.computeChargeTimeRemaining(elapsedRealtimeUs);
    final String statusLabel=com.android.settings.Utils.getBatteryStatus(getResources(),mBatteryBroadcast);
    if (chargeTime > 0 && status != BatteryManager.BATTERY_STATUS_FULL) {
      String timeString=Formatter.formatShortElapsedTime(getContext(),chargeTime / 1000);
      mChargeLabelString=getContext().getResources().getString(R.string.power_charging_duration,batteryLevel,statusLabel,timeString);
    }
 else {
      mChargeLabelString=getContext().getResources().getString(R.string.power_charging,batteryLevel,statusLabel);
    }
  }
  mDrainString="";
  mChargeDurationString="";
}
