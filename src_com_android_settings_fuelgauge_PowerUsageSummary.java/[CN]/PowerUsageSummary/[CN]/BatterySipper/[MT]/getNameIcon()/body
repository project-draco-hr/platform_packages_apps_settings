{
  PackageManager pm=getPackageManager();
  final int uid=uidObj.getUid();
  final Drawable defaultActivityIcon=pm.getDefaultActivityIcon();
  String[] packages=pm.getPackagesForUid(uid);
  if (packages == null) {
    name=Integer.toString(uid);
    return;
  }
  String[] packageLabels=new String[packages.length];
  System.arraycopy(packages,0,packageLabels,0,packages.length);
  int preferredIndex=-1;
  for (int i=0; i < packageLabels.length; i++) {
    if (packageLabels[i].equals(name))     preferredIndex=i;
    try {
      ApplicationInfo ai=pm.getApplicationInfo(packageLabels[i],0);
      CharSequence label=ai.loadLabel(pm);
      if (label != null) {
        packageLabels[i]=label.toString();
      }
      if (ai.icon != 0) {
        icon=ai.loadIcon(pm);
        break;
      }
    }
 catch (    NameNotFoundException e) {
    }
  }
  if (icon == null)   icon=defaultActivityIcon;
  if (packageLabels.length == 1) {
    name=packageLabels[0];
  }
 else {
    for (    String pkgName : packages) {
      try {
        PackageInfo pi=pm.getPackageInfo(pkgName,0);
        if (pi.sharedUserLabel != 0) {
          CharSequence nm=pm.getText(pkgName,pi.sharedUserLabel,pi.applicationInfo);
          if (nm != null) {
            name=nm.toString();
            if (pi.applicationInfo.icon != 0) {
              icon=pi.applicationInfo.loadIcon(pm);
            }
            break;
          }
        }
      }
 catch (      PackageManager.NameNotFoundException e) {
      }
    }
  }
  final String uidString=Integer.toString(uidObj.getUid());
  mNameCache.put(uidString,name);
  mIconCache.put(uidString,icon);
  mHandler.sendMessage(mHandler.obtainMessage(MSG_UPDATE_NAME_ICON,this));
}
