{
  SensorManager sensorManager=(SensorManager)getSystemService(Context.SENSOR_SERVICE);
  final int which=mStatsType;
  final double powerCpuNormal=mPowerProfile.getAveragePower(PowerProfile.POWER_CPU_NORMAL);
  long uSecTime=mStats.computeBatteryRealtime(SystemClock.elapsedRealtime(),which) * 1000;
  SparseArray<? extends Uid> uidStats=mStats.getUidStats();
  final int NU=uidStats.size();
  if (DEBUG)   Log.i(TAG,"uidStats size = " + NU);
  for (int iu=0; iu < NU; iu++) {
    Uid u=uidStats.valueAt(iu);
    double power=0;
    Map<String,? extends BatteryStats.Uid.Proc> processStats=u.getProcessStats();
    long cpuTime=0;
    long cpuFgTime=0;
    long gpsTime=0;
    if (processStats.size() > 0) {
      for (      Map.Entry<String,? extends BatteryStats.Uid.Proc> ent : processStats.entrySet()) {
        Uid.Proc ps=ent.getValue();
        long userTime=ps.getUserTime(which);
        long systemTime=ps.getSystemTime(which);
        long foregroundTime=ps.getForegroundTime(which);
        cpuFgTime+=foregroundTime * 10;
        if (DEBUG)         Log.i(TAG,"CPU Fg time for " + u.getUid() + " = "+ foregroundTime);
        cpuTime=(userTime + systemTime) * 10;
        power+=cpuTime * powerCpuNormal;
      }
    }
    if (cpuFgTime > cpuTime) {
      if (DEBUG && cpuFgTime > cpuTime + 10000) {
        Log.i(TAG,"WARNING! Cputime is more than 10 seconds behind Foreground time");
      }
      cpuTime=cpuFgTime;
    }
    power/=1000;
    Map<Integer,? extends BatteryStats.Uid.Sensor> sensorStats=u.getSensorStats();
    for (    Map.Entry<Integer,? extends BatteryStats.Uid.Sensor> sensorEntry : sensorStats.entrySet()) {
      Uid.Sensor sensor=sensorEntry.getValue();
      int sensorType=sensor.getHandle();
      BatteryStats.Timer timer=sensor.getSensorTime();
      long sensorTime=timer.getTotalTimeLocked(uSecTime,which) / 1000;
      double multiplier=0;
switch (sensorType) {
case Uid.Sensor.GPS:
        multiplier=mPowerProfile.getAveragePower(PowerProfile.POWER_GPS_ON);
      gpsTime=sensorTime;
    break;
default :
  android.hardware.Sensor sensorData=sensorManager.getDefaultSensor(sensorType);
if (sensorData != null) {
  multiplier=sensorData.getPower();
  if (DEBUG) {
    Log.i(TAG,"Got sensor " + sensorData.getName() + " with power = "+ multiplier);
  }
}
}
power+=(multiplier * sensorTime) / 1000;
}
if (power != 0) {
BatterySipper app=new BatterySipper(null,DrainType.APP,0,u,new double[]{power});
app.mCpuTime=cpuTime;
app.mGpsTime=gpsTime;
app.mCpuFgTime=cpuFgTime;
mUsageList.add(app);
}
if (power > mMaxPower) mMaxPower=power;
mTotalPower+=power;
if (DEBUG) Log.i(TAG,"Added power = " + power);
}
}
