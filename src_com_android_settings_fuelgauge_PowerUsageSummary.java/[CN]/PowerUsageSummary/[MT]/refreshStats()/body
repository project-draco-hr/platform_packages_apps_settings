{
  if (mStats == null) {
    load();
  }
  mMaxPower=0;
  mTotalPower=0;
  mWifiPower=0;
  mBluetoothPower=0;
  mAppWifiRunning=0;
  mAppListGroup.removeAll();
  mUsageList.clear();
  mWifiSippers.clear();
  mBluetoothSippers.clear();
  processAppUsage();
  processMiscUsage();
  mAppListGroup.setOrderingAsAdded(false);
  BatteryHistoryPreference hist=new BatteryHistoryPreference(this,mStats);
  hist.setOrder(-1);
  mAppListGroup.addPreference(hist);
  Collections.sort(mUsageList);
  for (  BatterySipper sipper : mUsageList) {
    if (sipper.getSortValue() < MIN_POWER_THRESHOLD)     continue;
    final double percentOfTotal=((sipper.getSortValue() / mTotalPower) * 100);
    if (percentOfTotal < 1)     continue;
    PowerGaugePreference pref=new PowerGaugePreference(this,sipper.getIcon(),sipper);
    double percentOfMax=(sipper.getSortValue() * 100) / mMaxPower;
    sipper.percent=percentOfTotal;
    pref.setTitle(sipper.name);
    pref.setPercent(percentOfTotal);
    pref.setOrder(Integer.MAX_VALUE - (int)sipper.getSortValue());
    pref.setGaugeValue(percentOfMax);
    if (sipper.uidObj != null) {
      pref.setKey(Integer.toString(sipper.uidObj.getUid()));
    }
    mAppListGroup.addPreference(pref);
    if (mAppListGroup.getPreferenceCount() > (MAX_ITEMS_TO_LIST + 1))     break;
  }
  if (DEBUG)   setTitle("Battery total uAh = " + ((mTotalPower * 1000) / 3600));
synchronized (mRequestQueue) {
    if (!mRequestQueue.isEmpty()) {
      if (mRequestThread == null) {
        mRequestThread=new Thread(this,"BatteryUsage Icon Loader");
        mRequestThread.setPriority(Thread.MIN_PRIORITY);
        mRequestThread.start();
      }
      mRequestQueue.notify();
    }
  }
}
