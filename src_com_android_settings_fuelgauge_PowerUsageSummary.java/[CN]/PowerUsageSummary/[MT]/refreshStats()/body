{
  mAppListGroup.removeAll();
  mAppListGroup.setOrderingAsAdded(false);
  mBatteryStatusPref.setOrder(-2);
  mAppListGroup.addPreference(mBatteryStatusPref);
  BatteryHistoryPreference hist=new BatteryHistoryPreference(getActivity(),mStatsHelper.getStats());
  hist.setOrder(-1);
  mAppListGroup.addPreference(hist);
  if (mStatsHelper.getPowerProfile().getAveragePower(PowerProfile.POWER_SCREEN_FULL) < 10) {
    addNotAvailableMessage();
    return;
  }
  mStatsHelper.refreshStats(false);
  List<BatterySipper> usageList=mStatsHelper.getUsageList();
  for (  BatterySipper sipper : usageList) {
    if (sipper.getSortValue() < MIN_POWER_THRESHOLD)     continue;
    final double percentOfTotal=((sipper.getSortValue() / mStatsHelper.getTotalPower()) * 100);
    if (percentOfTotal < 1)     continue;
    PowerGaugePreference pref=new PowerGaugePreference(getActivity(),sipper.getIcon(),sipper);
    final double percentOfMax=(sipper.getSortValue() * 100) / mStatsHelper.getMaxPower();
    sipper.percent=percentOfTotal;
    pref.setTitle(sipper.name);
    pref.setOrder(Integer.MAX_VALUE - (int)sipper.getSortValue());
    pref.setPercent(percentOfMax,percentOfTotal);
    if (sipper.uidObj != null) {
      pref.setKey(Integer.toString(sipper.uidObj.getUid()));
    }
    mAppListGroup.addPreference(pref);
    if (mAppListGroup.getPreferenceCount() > (MAX_ITEMS_TO_LIST + 1))     break;
  }
}
