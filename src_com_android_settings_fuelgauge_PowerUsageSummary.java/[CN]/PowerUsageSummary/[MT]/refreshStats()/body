{
  mAppListGroup.removeAll();
  mAppListGroup.setOrderingAsAdded(false);
  mHistPref=new BatteryHistoryPreference(getActivity(),mStatsHelper.getStats(),mStatsHelper.getBatteryBroadcast());
  mHistPref.setOrder(-1);
  mAppListGroup.addPreference(mHistPref);
  boolean addedSome=false;
  PowerProfile powerProfile=mStatsHelper.getPowerProfile();
  final double averagePower=powerProfile.getAveragePower(PowerProfile.POWER_SCREEN_FULL);
  if (averagePower >= MIN_AVERAGE_POWER_THRESHOLD_MILLI_AMP) {
    final List<UserHandle> profiles=mUm.getUserProfiles();
    mStatsHelper.refreshStats(BatteryStats.STATS_SINCE_CHARGED,profiles);
    final List<BatterySipper> usageList=mStatsHelper.getUsageList();
    final int dischargeAmount=mStatsHelper.getStats().getDischargeAmount(mStatsType);
    final int numSippers=usageList.size();
    for (int i=0; i < numSippers; i++) {
      final BatterySipper sipper=usageList.get(i);
      if ((sipper.value * SECONDS_IN_HOUR) < MIN_POWER_THRESHOLD_MILLI_AMP) {
        continue;
      }
      final double percentOfTotal=((sipper.value / mStatsHelper.getTotalPower()) * dischargeAmount);
      if (((int)(percentOfTotal + .5)) < 1) {
        continue;
      }
      if (sipper.drainType == BatterySipper.DrainType.OVERCOUNTED) {
        if (sipper.value < ((mStatsHelper.getMaxRealPower() * 2) / 3)) {
          continue;
        }
        if (percentOfTotal < 10) {
          continue;
        }
      }
      if (sipper.drainType == BatterySipper.DrainType.UNACCOUNTED) {
        if (sipper.value < (mStatsHelper.getMaxRealPower() / 2)) {
          continue;
        }
        if (percentOfTotal < 5) {
          continue;
        }
      }
      final UserHandle userHandle=new UserHandle(UserHandle.getUserId(sipper.getUid()));
      final BatteryEntry entry=new BatteryEntry(getActivity(),mHandler,mUm,sipper);
      final PowerGaugePreference pref=new PowerGaugePreference(getActivity(),mUm.getBadgedDrawableForUser(entry.getIcon(),userHandle),entry);
      final double percentOfMax=(sipper.value * 100) / mStatsHelper.getMaxPower();
      sipper.percent=percentOfTotal;
      pref.setTitle(entry.getLabel());
      pref.setOrder(i + 1);
      pref.setPercent(percentOfMax,percentOfTotal);
      if (sipper.uidObj != null) {
        pref.setKey(Integer.toString(sipper.uidObj.getUid()));
      }
      addedSome=true;
      mAppListGroup.addPreference(pref);
      if (mAppListGroup.getPreferenceCount() > (MAX_ITEMS_TO_LIST + 1)) {
        break;
      }
    }
  }
  if (!addedSome) {
    addNotAvailableMessage();
  }
  BatteryEntry.startRequestQueue();
}
