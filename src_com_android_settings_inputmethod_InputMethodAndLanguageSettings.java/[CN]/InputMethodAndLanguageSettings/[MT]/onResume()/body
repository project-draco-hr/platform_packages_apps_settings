{
  super.onResume();
  mSettingsObserver.resume();
  mIm.registerInputDeviceListener(this,null);
  if (!mIsOnlyImeSettings) {
    if (mLanguagePref != null) {
      Configuration conf=getResources().getConfiguration();
      String language=conf.locale.getLanguage();
      String localeString;
      if (language.equals("zz")) {
        String country=conf.locale.getCountry();
        if (country.equals("ZZ")) {
          localeString="[Developer] Accented English (zz_ZZ)";
        }
 else         if (country.equals("ZY")) {
          localeString="[Developer] Fake Bi-Directional (zz_ZY)";
        }
 else {
          localeString="";
        }
      }
 else       if (hasOnlyOneLanguageInstance(language,Resources.getSystem().getAssets().getLocales())) {
        localeString=conf.locale.getDisplayLanguage(conf.locale);
      }
 else {
        localeString=conf.locale.getDisplayName(conf.locale);
      }
      if (localeString.length() > 1) {
        localeString=Character.toUpperCase(localeString.charAt(0)) + localeString.substring(1);
        mLanguagePref.setSummary(localeString);
      }
    }
    updateUserDictionaryPreference(findPreference(KEY_USER_DICTIONARY_SETTINGS));
    if (SHOW_INPUT_METHOD_SWITCHER_SETTINGS) {
      mShowInputMethodSelectorPref.setOnPreferenceChangeListener(this);
    }
  }
  if (!mHardKeyboardPreferenceList.isEmpty()) {
    for (int i=0; i < sHardKeyboardKeys.length; ++i) {
      CheckBoxPreference chkPref=(CheckBoxPreference)mHardKeyboardCategory.findPreference(sHardKeyboardKeys[i]);
      chkPref.setChecked(System.getInt(getContentResolver(),sSystemSettingNames[i],1) > 0);
    }
  }
  updateInputDevices();
  InputMethodAndSubtypeUtil.loadInputMethodSubtypeList(this,getContentResolver(),mImis,null);
  updateActiveInputMethodsSummary();
}
