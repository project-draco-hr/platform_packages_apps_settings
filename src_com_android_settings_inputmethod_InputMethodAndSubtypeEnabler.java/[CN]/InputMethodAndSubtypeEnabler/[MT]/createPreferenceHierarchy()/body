{
  PreferenceScreen root=getPreferenceManager().createPreferenceScreen(getActivity());
  int N=(mInputMethodProperties == null ? 0 : mInputMethodProperties.size());
  for (int i=0; i < N; ++i) {
    final InputMethodInfo imi=mInputMethodProperties.get(i);
    if (imi.getSubtypes().size() <= 1)     continue;
    final String imiId=imi.getId();
    if (!TextUtils.isEmpty(mInputMethodId) && !mInputMethodId.equals(imiId)) {
      continue;
    }
    PreferenceCategory keyboardSettingsCategory=new PreferenceCategory(getActivity());
    root.addPreference(keyboardSettingsCategory);
    PackageManager pm=getPackageManager();
    CharSequence label=imi.loadLabel(pm);
    keyboardSettingsCategory.setTitle(label);
    keyboardSettingsCategory.setKey(imiId);
    CheckBoxPreference autoCB=new CheckBoxPreference(getActivity());
    autoCB.setTitle(R.string.use_system_language_to_select_input_method_subtypes);
    mSubtypeAutoSelectionCBMap.put(imiId,autoCB);
    keyboardSettingsCategory.addPreference(autoCB);
    PreferenceCategory activeInputMethodsCategory=new PreferenceCategory(getActivity());
    activeInputMethodsCategory.setTitle(R.string.active_input_method_subtypes);
    root.addPreference(activeInputMethodsCategory);
    ArrayList<InputMethodSubtype> subtypes=imi.getSubtypes();
    ArrayList<Preference> subtypePreferences=new ArrayList<Preference>();
    if (subtypes.size() > 0) {
      for (      InputMethodSubtype subtype : subtypes) {
        CharSequence subtypeLabel;
        int nameResId=subtype.getNameResId();
        if (nameResId != 0) {
          subtypeLabel=pm.getText(imi.getPackageName(),nameResId,imi.getServiceInfo().applicationInfo);
        }
 else {
          String mode=subtype.getMode();
          CharSequence language=subtype.getLocale();
          subtypeLabel=(mode == null ? "" : mode) + "," + (language == null ? "" : language);
        }
        CheckBoxPreference chkbxPref=new CheckBoxPreference(getActivity());
        chkbxPref.setKey(imiId + subtype.hashCode());
        chkbxPref.setTitle(subtypeLabel);
        activeInputMethodsCategory.addPreference(chkbxPref);
        subtypePreferences.add(chkbxPref);
      }
      mInputMethodAndSubtypePrefsMap.put(imiId,subtypePreferences);
    }
  }
  return root;
}
