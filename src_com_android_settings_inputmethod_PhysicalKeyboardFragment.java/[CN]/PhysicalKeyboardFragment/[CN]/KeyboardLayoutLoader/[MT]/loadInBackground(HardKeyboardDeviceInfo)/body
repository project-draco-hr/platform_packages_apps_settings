{
  final ArrayList<Keyboards.KeyboardInfo> keyboardInfoList=new ArrayList<>();
  final InputMethodManager imm=getContext().getSystemService(InputMethodManager.class);
  final InputManager im=getContext().getSystemService(InputManager.class);
  if (imm != null && im != null) {
    for (    InputMethodInfo imi : imm.getEnabledInputMethodList()) {
      final List<InputMethodSubtype> subtypes=imm.getEnabledInputMethodSubtypeList(imi,true);
      if (subtypes.isEmpty()) {
        final InputMethodSubtype nullSubtype=null;
        final KeyboardLayout layout=im.getKeyboardLayoutForInputDevice(deviceInfo.mDeviceIdentifier,imi,nullSubtype);
        keyboardInfoList.add(new Keyboards.KeyboardInfo(imi,nullSubtype,layout));
        continue;
      }
      final int N=subtypes.size();
      for (int i=0; i < N; ++i) {
        final InputMethodSubtype subtype=subtypes.get(i);
        if (!IM_SUBTYPE_MODE_KEYBOARD.equalsIgnoreCase(subtype.getMode())) {
          continue;
        }
        final KeyboardLayout layout=im.getKeyboardLayoutForInputDevice(deviceInfo.mDeviceIdentifier,imi,subtype);
        keyboardInfoList.add(new Keyboards.KeyboardInfo(imi,subtype,layout));
      }
    }
  }
  return new Keyboards(deviceInfo,keyboardInfoList);
}
