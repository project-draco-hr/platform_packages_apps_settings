{
  this.mFeedItemList=feedItemList;
  this.mContext=context;
  final float dragElevation=TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,8,context.getResources().getDisplayMetrics());
  this.mItemTouchHelper=new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(ItemTouchHelper.UP | ItemTouchHelper.DOWN,0){
    @Override public boolean onMove(    RecyclerView view,    RecyclerView.ViewHolder source,    RecyclerView.ViewHolder target){
      onItemMove(source.getAdapterPosition(),target.getAdapterPosition());
      return true;
    }
    @Override public void onSwiped(    RecyclerView.ViewHolder viewHolder,    int i){
    }
    private static final int SELECTION_GAINED=1;
    private static final int SELECTION_LOST=0;
    private static final int SELECTION_UNCHANGED=-1;
    private int mSelectionStatus=SELECTION_UNCHANGED;
    @Override public void onChildDraw(    Canvas c,    RecyclerView recyclerView,    RecyclerView.ViewHolder viewHolder,    float dX,    float dY,    int actionState,    boolean isCurrentlyActive){
      super.onChildDraw(c,recyclerView,viewHolder,dX,dY,actionState,isCurrentlyActive);
      if (mSelectionStatus != SELECTION_UNCHANGED) {
        viewHolder.itemView.setElevation(mSelectionStatus == SELECTION_GAINED ? dragElevation : 0);
        mSelectionStatus=SELECTION_UNCHANGED;
      }
    }
    @Override public void onSelectedChanged(    RecyclerView.ViewHolder viewHolder,    int actionState){
      super.onSelectedChanged(viewHolder,actionState);
      if (actionState == ItemTouchHelper.ACTION_STATE_DRAG) {
        mSelectionStatus=SELECTION_GAINED;
      }
 else       if (actionState == ItemTouchHelper.ACTION_STATE_IDLE) {
        mSelectionStatus=SELECTION_LOST;
      }
    }
  }
);
}
