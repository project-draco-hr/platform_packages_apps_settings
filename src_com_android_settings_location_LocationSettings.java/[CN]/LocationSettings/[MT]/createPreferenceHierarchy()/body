{
  final SettingsActivity activity=(SettingsActivity)getActivity();
  PreferenceScreen root=getPreferenceScreen();
  if (root != null) {
    root.removeAll();
  }
  addPreferencesFromResource(R.xml.location_settings);
  root=getPreferenceScreen();
  setupManagedProfileCategory(root);
  mLocationMode=root.findPreference(KEY_LOCATION_MODE);
  mLocationMode.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      activity.startPreferencePanel(LocationMode.class.getName(),null,R.string.location_mode_screen_title,null,LocationSettings.this,0);
      return true;
    }
  }
);
  mCategoryRecentLocationRequests=(PreferenceCategory)root.findPreference(KEY_RECENT_LOCATION_REQUESTS);
  RecentLocationApps recentApps=new RecentLocationApps(activity);
  List<RecentLocationApps.Request> recentLocationRequests=recentApps.getAppList();
  List<Preference> recentLocationPrefs=new ArrayList<>(recentLocationRequests.size());
  for (  final RecentLocationApps.Request request : recentLocationRequests) {
    DimmableIconPreference pref=new DimmableIconPreference(getPrefContext(),request.contentDescription);
    pref.setIcon(request.icon);
    pref.setTitle(request.label);
    if (request.isHighBattery) {
      pref.setSummary(R.string.location_high_battery_use);
    }
 else {
      pref.setSummary(R.string.location_low_battery_use);
    }
    pref.setOnPreferenceClickListener(new PackageEntryClickedListener(request.packageName,request.userHandle));
    recentLocationPrefs.add(pref);
  }
  if (recentLocationRequests.size() > 0) {
    addPreferencesSorted(recentLocationPrefs,mCategoryRecentLocationRequests);
  }
 else {
    Preference banner=new Preference(getPrefContext());
    banner.setLayoutResource(R.layout.location_list_no_item);
    banner.setTitle(R.string.location_no_recent_apps);
    banner.setSelectable(false);
    mCategoryRecentLocationRequests.addPreference(banner);
  }
  boolean lockdownOnLocationAccess=false;
  if (mManagedProfile != null && mUm.hasUserRestriction(UserManager.DISALLOW_SHARE_LOCATION,mManagedProfile)) {
    lockdownOnLocationAccess=true;
  }
  addLocationServices(activity,root,lockdownOnLocationAccess);
  refreshLocationMode();
  return root;
}
