{
  final PreferenceActivity activity=(PreferenceActivity)getActivity();
  PreferenceScreen root=getPreferenceScreen();
  if (root != null) {
    root.removeAll();
  }
  addPreferencesFromResource(R.xml.location_settings);
  root=getPreferenceScreen();
  mLocationMode=root.findPreference(KEY_LOCATION_MODE);
  mLocationMode.setOnPreferenceClickListener(new Preference.OnPreferenceClickListener(){
    @Override public boolean onPreferenceClick(    Preference preference){
      activity.startPreferencePanel(LocationMode.class.getName(),null,R.string.location_mode_screen_title,null,LocationSettings.this,0);
      return true;
    }
  }
);
  PreferenceCategory categoryRecentLocationRequests=(PreferenceCategory)root.findPreference(KEY_RECENT_LOCATION_REQUESTS);
  RecentLocationApps recentApps=new RecentLocationApps(activity,mStatsHelper);
  List<Preference> recentLocationRequests=recentApps.getAppList();
  if (recentLocationRequests.size() > 0) {
    addPreferencesSorted(recentLocationRequests,categoryRecentLocationRequests);
  }
 else {
    Preference banner=new Preference(activity);
    banner.setLayoutResource(R.layout.location_list_no_item);
    banner.setTitle(R.string.location_no_recent_apps);
    banner.setSelectable(false);
    banner.setEnabled(false);
    categoryRecentLocationRequests.addPreference(banner);
  }
  PreferenceCategory categoryLocationServices=(PreferenceCategory)root.findPreference(KEY_LOCATION_SERVICES);
  final SettingsInjector injector=new SettingsInjector(activity);
  List<Preference> locationServices=injector.getInjectedSettings();
  mReceiver=new BroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      if (Log.isLoggable(TAG,Log.DEBUG)) {
        Log.d(TAG,"Received settings change intent: " + intent);
      }
      injector.reloadStatusMessages();
    }
  }
;
  activity.registerReceiver(mReceiver,new IntentFilter(SettingInjectorService.ACTION_INJECTED_SETTING_CHANGED));
  if (locationServices.size() > 0) {
    addPreferencesSorted(locationServices,categoryLocationServices);
  }
 else {
    root.removePreference(categoryLocationServices);
  }
  if (activity.onIsHidingHeaders() || !activity.onIsMultiPane()) {
    final int padding=activity.getResources().getDimensionPixelSize(R.dimen.action_bar_switch_padding);
    mSwitch.setPaddingRelative(0,0,padding,0);
    activity.getActionBar().setDisplayOptions(ActionBar.DISPLAY_SHOW_CUSTOM,ActionBar.DISPLAY_SHOW_CUSTOM);
    activity.getActionBar().setCustomView(mSwitch,new ActionBar.LayoutParams(ActionBar.LayoutParams.WRAP_CONTENT,ActionBar.LayoutParams.WRAP_CONTENT,Gravity.CENTER_VERTICAL | Gravity.END));
  }
  setHasOptionsMenu(true);
  refreshLocationMode();
  return root;
}
