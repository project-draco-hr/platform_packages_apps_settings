{
  final ActivityManager am=(ActivityManager)mContext.getSystemService(Context.ACTIVITY_SERVICE);
  if (!am.isUserRunning(setting.mUserHandle.getIdentifier())) {
    if (Log.isLoggable(TAG,Log.VERBOSE)) {
      Log.v(TAG,"Cannot start service as user " + setting.mUserHandle.getIdentifier() + " is not running");
    }
    return;
  }
  Handler handler=new Handler(){
    @Override public void handleMessage(    Message msg){
      Bundle bundle=msg.getData();
      boolean enabled=bundle.getBoolean(SettingInjectorService.ENABLED_KEY,true);
      if (Log.isLoggable(TAG,Log.DEBUG)) {
        Log.d(TAG,setting + ": received " + msg+ ", bundle: "+ bundle);
      }
      preference.setSummary(null);
      preference.setEnabled(enabled);
      mHandler.sendMessage(mHandler.obtainMessage(WHAT_RECEIVED_STATUS,Setting.this));
    }
  }
;
  Messenger messenger=new Messenger(handler);
  Intent intent=setting.getServiceIntent();
  intent.putExtra(SettingInjectorService.MESSENGER_KEY,messenger);
  if (Log.isLoggable(TAG,Log.DEBUG)) {
    Log.d(TAG,setting + ": sending update intent: " + intent+ ", handler: "+ handler);
    startMillis=SystemClock.elapsedRealtime();
  }
 else {
    startMillis=0;
  }
  mContext.startServiceAsUser(intent,setting.mUserHandle);
}
