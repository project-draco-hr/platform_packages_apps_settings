{
  final UidDetail cached=mUidDetailCache.get(uid);
  if (cached != null) {
    return cached;
  }
 else   if (!blocking) {
    return null;
  }
  final Resources res=mContext.getResources();
  final PackageManager pm=mContext.getPackageManager();
  final UidDetail detail=new UidDetail();
  detail.label=pm.getNameForUid(uid);
  detail.icon=pm.getDefaultActivityIcon();
switch (uid) {
case android.os.Process.SYSTEM_UID:
    detail.label=res.getString(R.string.process_kernel_label);
  detail.icon=pm.getDefaultActivityIcon();
mUidDetailCache.put(uid,detail);
return detail;
case TrafficStats.UID_REMOVED:
detail.label=res.getString(R.string.data_usage_uninstalled_apps);
detail.icon=pm.getDefaultActivityIcon();
mUidDetailCache.put(uid,detail);
return detail;
}
final String[] packageNames=pm.getPackagesForUid(uid);
final int length=packageNames != null ? packageNames.length : 0;
try {
if (length == 1) {
final ApplicationInfo info=pm.getApplicationInfo(packageNames[0],0);
detail.label=info.loadLabel(pm).toString();
detail.icon=info.loadIcon(pm);
}
 else if (length > 1) {
detail.detailLabels=new CharSequence[length];
for (int i=0; i < length; i++) {
final String packageName=packageNames[i];
final PackageInfo packageInfo=pm.getPackageInfo(packageName,0);
final ApplicationInfo appInfo=pm.getApplicationInfo(packageName,0);
detail.detailLabels[i]=appInfo.loadLabel(pm).toString();
if (packageInfo.sharedUserLabel != 0) {
detail.label=pm.getText(packageName,packageInfo.sharedUserLabel,packageInfo.applicationInfo).toString();
detail.icon=appInfo.loadIcon(pm);
}
}
}
}
 catch (NameNotFoundException e) {
}
if (TextUtils.isEmpty(detail.label)) {
detail.label=Integer.toString(uid);
}
mUidDetailCache.put(uid,detail);
return detail;
}
