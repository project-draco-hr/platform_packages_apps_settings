{
  if (component == null || category == null) {
    Log.e(TAG,"Component or category are null");
    return false;
  }
  if (!CardEmulation.CATEGORY_PAYMENT.equals(category)) {
    Log.e(TAG,"Don't support defaults for category " + category);
    return false;
  }
  boolean found=false;
  List<PaymentAppInfo> services=mBackend.getPaymentAppInfos();
  for (  PaymentAppInfo service : services) {
    if (component.equals(service.componentName)) {
      found=true;
      break;
    }
  }
  if (!found) {
    Log.e(TAG,"Component " + component + " is not a registered payment service.");
    return false;
  }
  ComponentName defaultComponent=mBackend.getDefaultPaymentApp();
  if (defaultComponent != null && defaultComponent.equals(component)) {
    Log.e(TAG,"Component " + component + " is already default.");
    return false;
  }
  PackageManager pm=getPackageManager();
  ApplicationInfo newAppInfo;
  try {
    newAppInfo=pm.getApplicationInfo(component.getPackageName(),0);
  }
 catch (  NameNotFoundException e) {
    Log.e(TAG,"PM could not load app info for " + component);
    return false;
  }
  ApplicationInfo defaultAppInfo=null;
  try {
    if (defaultComponent != null) {
      defaultAppInfo=pm.getApplicationInfo(defaultComponent.getPackageName(),0);
    }
  }
 catch (  NameNotFoundException e) {
    Log.e(TAG,"PM could not load app info for " + defaultComponent);
  }
  mNewDefault=component;
  final AlertController.AlertParams p=mAlertParams;
  p.mTitle=getString(R.string.nfc_payment_set_default);
  if (defaultAppInfo == null) {
    p.mMessage="Always use " + newAppInfo.loadLabel(pm) + " when you tap and pay?";
  }
 else {
    p.mMessage="Always use " + newAppInfo.loadLabel(pm) + " instead of "+ defaultAppInfo.loadLabel(pm)+ " when you tap and pay?";
  }
  p.mPositiveButtonText=getString(R.string.yes);
  p.mNegativeButtonText=getString(R.string.no);
  p.mPositiveButtonListener=this;
  p.mNegativeButtonListener=this;
  setupAlert();
  return true;
}
