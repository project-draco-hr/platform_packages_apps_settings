{
  super.onCreate(savedInstanceState);
  mContext=getActivity();
  Intent intent=getActivity().getIntent();
  Bundle args=getArguments();
  if (DEBUG)   Log.d(TAG,"onCreate getIntent()=" + intent);
  if (intent == null && args == null) {
    Log.w(TAG,"No intent");
    toastAndFinish();
    return;
  }
  final String pkg=args != null && args.containsKey(AppInfoBase.ARG_PACKAGE_NAME) ? args.getString(AppInfoBase.ARG_PACKAGE_NAME) : intent.getStringExtra(Settings.EXTRA_APP_PACKAGE);
  mUid=args != null && args.containsKey(AppInfoBase.ARG_PACKAGE_UID) ? args.getInt(AppInfoBase.ARG_PACKAGE_UID) : intent.getIntExtra(Settings.EXTRA_APP_UID,-1);
  if (mUid == -1 || TextUtils.isEmpty(pkg)) {
    Log.w(TAG,"Missing extras: " + Settings.EXTRA_APP_PACKAGE + " was "+ pkg+ ", "+ Settings.EXTRA_APP_UID+ " was "+ mUid);
    toastAndFinish();
    return;
  }
  if (DEBUG)   Log.d(TAG,"Load details for pkg=" + pkg + " uid="+ mUid);
  final PackageManager pm=getPackageManager();
  final PackageInfo info=findPackageInfo(pm,pkg,mUid);
  if (info == null) {
    Log.w(TAG,"Failed to find package info: " + Settings.EXTRA_APP_PACKAGE + " was "+ pkg+ ", "+ Settings.EXTRA_APP_UID+ " was "+ mUid);
    toastAndFinish();
    return;
  }
  mIsSystemPackage=Utils.isSystemPackage(pm,info);
  addPreferencesFromResource(R.xml.app_notification_settings);
  mBlock=(SwitchPreference)findPreference(KEY_BLOCK);
  mAppRow=mBackend.loadAppRow(pm,info.applicationInfo);
  ArrayMap<String,AppRow> rows=new ArrayMap<String,AppRow>();
  rows.put(mAppRow.pkg,mAppRow);
  collectConfigActivities(getPackageManager(),rows);
  List<Notification.Topic> topics=mBackend.getTopics(pkg,mUid);
  for (  Notification.Topic topic : topics) {
    Preference topicPreference=new Preference(mContext);
    topicPreference.setKey(topic.getId());
    topicPreference.setTitle(topic.getLabel());
    Bundle topicArgs=new Bundle();
    topicArgs.putInt(AppInfoBase.ARG_PACKAGE_UID,mUid);
    topicArgs.putParcelable(TopicNotificationSettings.ARG_TOPIC,topic);
    topicArgs.putBoolean(AppHeader.EXTRA_HIDE_INFO_BUTTON,true);
    topicArgs.putParcelable(TopicNotificationSettings.ARG_PACKAGE_INFO,info);
    Intent topicIntent=Utils.onBuildStartFragmentIntent(getActivity(),TopicNotificationSettings.class.getName(),topicArgs,null,R.string.topic_notifications_title,null,false);
    topicPreference.setIntent(topicIntent);
    getPreferenceScreen().addPreference(topicPreference);
  }
  mBlock.setChecked(mAppRow.banned);
  updateDependents(mAppRow.banned);
  mBlock.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      final boolean banned=(Boolean)newValue;
      if (banned) {
        MetricsLogger.action(getActivity(),MetricsLogger.ACTION_BAN_APP_NOTES,pkg);
      }
      final boolean success=mBackend.setNotificationsBanned(pkg,mUid,banned);
      if (success) {
        updateDependents(banned);
      }
      return success;
    }
  }
);
  if (mAppRow.settingsIntent != null) {
    findPreference(KEY_APP_SETTINGS).setOnPreferenceClickListener(new OnPreferenceClickListener(){
      @Override public boolean onPreferenceClick(      Preference preference){
        mContext.startActivity(mAppRow.settingsIntent);
        return true;
      }
    }
);
  }
 else {
    removePreference(KEY_APP_SETTINGS);
  }
}
