{
  super.onCreate(savedInstanceState);
  mContext=getActivity();
  final ContentResolver resolver=mContext.getContentResolver();
  mPM=mContext.getPackageManager();
  addPreferencesFromResource(R.xml.notification_settings);
  final PreferenceScreen root=getPreferenceScreen();
  PreferenceGroup tweaksCategory=(PreferenceGroup)root.findPreference(KEY_TWEAKS_CATEGORY);
  if (tweaksCategory != null && !(Build.TYPE.equals("eng") || Build.TYPE.equals("userdebug"))) {
    root.removePreference(tweaksCategory);
    tweaksCategory=null;
  }
  mNotificationSoundPreference=findPreference(KEY_NOTIFICATION_SOUND);
  mNotificationAccess=findPreference(KEY_NOTIFICATION_ACCESS);
  refreshNotificationListeners();
  mLockscreen=(DropDownPreference)root.findPreference(KEY_LOCK_SCREEN_NOTIFICATIONS);
  if (mLockscreen != null) {
    if (!getDeviceLockscreenNotificationsEnabled()) {
      root.removePreference(mLockscreen);
    }
 else {
      mLockscreen.addItem(R.string.lock_screen_notifications_summary_show,1);
      mLockscreen.addItem(R.string.lock_screen_notifications_summary_hide,0);
      final int val=getLockscreenAllowPrivateNotifications() ? 1 : 0;
      mLockscreen.setSelectedValue(val);
      mLockscreen.setCallback(new DropDownPreference.Callback(){
        @Override public boolean onItemSelected(        int pos,        Object value){
          final int val=(Integer)value;
          Settings.Secure.putInt(getContentResolver(),Settings.Secure.LOCK_SCREEN_ALLOW_PRIVATE_NOTIFICATIONS,val);
          return true;
        }
      }
);
    }
  }
  mHeadsUp=(TwoStatePreference)findPreference(KEY_HEADS_UP);
  if (mHeadsUp != null) {
    updateHeadsUpMode(resolver);
    mHeadsUp.setOnPreferenceChangeListener(this);
    resolver.registerContentObserver(Settings.Global.getUriFor(Settings.Global.HEADS_UP_NOTIFICATIONS_ENABLED),false,new ContentObserver(mHandler){
      @Override public void onChange(      boolean selfChange){
        updateHeadsUpMode(resolver);
      }
    }
);
  }
  mNotificationPulse=(TwoStatePreference)findPreference(KEY_NOTIFICATION_PULSE);
  if (mNotificationPulse != null && getResources().getBoolean(com.android.internal.R.bool.config_intrusiveNotificationLed) == false) {
    getPreferenceScreen().removePreference(mNotificationPulse);
  }
 else {
    try {
      mNotificationPulse.setChecked(Settings.System.getInt(resolver,Settings.System.NOTIFICATION_LIGHT_PULSE) == 1);
      mNotificationPulse.setOnPreferenceChangeListener(this);
    }
 catch (    Settings.SettingNotFoundException snfe) {
      Log.e(TAG,Settings.System.NOTIFICATION_LIGHT_PULSE + " not found");
    }
  }
}
