{
  super.onCreate(savedInstanceState);
  mContext=getActivity();
  mPm=getPackageManager();
  mUserManager=UserManager.get(getContext());
  mVoiceCapable=Utils.isVoiceCapable(mContext);
  mAudioManager=(AudioManager)mContext.getSystemService(Context.AUDIO_SERVICE);
  mVibrator=(Vibrator)getActivity().getSystemService(Context.VIBRATOR_SERVICE);
  if (mVibrator != null && !mVibrator.hasVibrator()) {
    mVibrator=null;
  }
  addPreferencesFromResource(R.xml.sound_settings);
  initVolumePreference(KEY_MEDIA_VOLUME,AudioManager.STREAM_MUSIC,com.android.internal.R.drawable.ic_audio_media_mute);
  initVolumePreference(KEY_ALARM_VOLUME,AudioManager.STREAM_ALARM,com.android.internal.R.drawable.ic_audio_alarm_mute);
  if (mVoiceCapable) {
    mRingOrNotificationPreference=initVolumePreference(KEY_RING_VOLUME,AudioManager.STREAM_RING,com.android.internal.R.drawable.ic_audio_ring_notif_mute);
    removePreference(KEY_NOTIFICATION_VOLUME);
  }
 else {
    mRingOrNotificationPreference=initVolumePreference(KEY_NOTIFICATION_VOLUME,AudioManager.STREAM_NOTIFICATION,com.android.internal.R.drawable.ic_audio_ring_notif_mute);
    removePreference(KEY_RING_VOLUME);
  }
  boolean isCellBroadcastAppLinkEnabled=this.getResources().getBoolean(com.android.internal.R.bool.config_cellBroadcastAppLinks);
  try {
    if (isCellBroadcastAppLinkEnabled) {
      if (mPm.getApplicationEnabledSetting("com.android.cellbroadcastreceiver") == PackageManager.COMPONENT_ENABLED_STATE_DISABLED) {
        isCellBroadcastAppLinkEnabled=false;
      }
    }
  }
 catch (  IllegalArgumentException ignored) {
    isCellBroadcastAppLinkEnabled=false;
  }
  if (!mUserManager.isAdminUser() || !isCellBroadcastAppLinkEnabled) {
    removePreference(KEY_CELL_BROADCAST_SETTINGS);
  }
  initRingtones();
  initVibrateWhenRinging();
  initMasterMono();
  updateRingerMode();
  updateEffectsSuppressor();
}
