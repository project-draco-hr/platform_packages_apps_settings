{
  final PreferenceScreen screen=getPreferenceScreen();
  screen.removeAll();
  final ArrayList<ApplicationInfo> apps=new ArrayList<>();
  final ArraySet<String> requesting=mNoMan.getPackagesRequestingNotificationPolicyAccess();
  if (!requesting.isEmpty()) {
    final List<ApplicationInfo> installed=mPkgMan.getInstalledApplications(0);
    if (installed != null) {
      for (      ApplicationInfo app : installed) {
        if (requesting.contains(app.packageName)) {
          apps.add(app);
        }
      }
    }
  }
  ArraySet<String> autoApproved=getEnabledNotificationListeners();
  requesting.addAll(autoApproved);
  Collections.sort(apps,new PackageItemInfo.DisplayNameComparator(mPkgMan));
  for (  ApplicationInfo app : apps) {
    final String pkg=app.packageName;
    final CharSequence label=app.loadLabel(mPkgMan);
    final SwitchPreference pref=new SwitchPreference(getPrefContext());
    pref.setPersistent(false);
    pref.setIcon(app.loadIcon(mPkgMan));
    pref.setTitle(label);
    pref.setChecked(hasAccess(pkg));
    if (autoApproved.contains(pkg)) {
      pref.setEnabled(false);
      pref.setSummary(getString(R.string.zen_access_disabled_package_warning));
    }
    pref.setOnPreferenceChangeListener(new OnPreferenceChangeListener(){
      @Override public boolean onPreferenceChange(      Preference preference,      Object newValue){
        final boolean access=(Boolean)newValue;
        if (access) {
          new ScaryWarningDialogFragment().setPkgInfo(pkg,label).show(getFragmentManager(),"dialog");
        }
 else {
          new FriendlyWarningDialogFragment().setPkgInfo(pkg,label).show(getFragmentManager(),"dialog");
        }
        return false;
      }
    }
);
    screen.addPreference(pref);
  }
}
