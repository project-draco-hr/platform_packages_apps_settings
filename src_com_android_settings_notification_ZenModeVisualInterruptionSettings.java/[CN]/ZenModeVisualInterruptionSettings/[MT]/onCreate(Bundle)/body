{
  super.onCreate(savedInstanceState);
  addPreferencesFromResource(R.xml.zen_mode_visual_interruptions_settings);
  final PreferenceScreen root=getPreferenceScreen();
  mPolicy=NotificationManager.from(mContext).getNotificationPolicy();
  mScreenOff=(SwitchPreference)root.findPreference(KEY_SCREEN_OFF);
  mScreenOff.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      if (mDisableListeners)       return true;
      final boolean val=(Boolean)newValue;
      MetricsLogger.action(mContext,MetricsEvent.ACTION_ZEN_ALLOW_WHEN_SCREEN_OFF,val);
      if (DEBUG)       Log.d(TAG,"onPrefChange suppressWhenScreenOff=" + val);
      savePolicy(getNewSuppressedEffects(val,Policy.SUPPRESSED_EFFECT_SCREEN_OFF));
      return true;
    }
  }
);
  mScreenOn=(SwitchPreference)root.findPreference(KEY_SCREEN_ON);
  mScreenOn.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener(){
    @Override public boolean onPreferenceChange(    Preference preference,    Object newValue){
      if (mDisableListeners)       return true;
      final boolean val=(Boolean)newValue;
      MetricsLogger.action(mContext,MetricsEvent.ACTION_ZEN_ALLOW_WHEN_SCREEN_ON,val);
      if (DEBUG)       Log.d(TAG,"onPrefChange suppressWhenScreenOn=" + val);
      savePolicy(getNewSuppressedEffects(val,Policy.SUPPRESSED_EFFECT_SCREEN_ON));
      return true;
    }
  }
);
}
