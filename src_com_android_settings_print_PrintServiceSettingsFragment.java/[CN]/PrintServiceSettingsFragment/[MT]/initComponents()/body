{
  mPrintersAdapter=new PrintersAdapter();
  mPrintersAdapter.registerDataSetObserver(mDataObserver);
  final SettingsActivity activity=(SettingsActivity)getActivity();
  mSwitchBar=activity.getSwitchBar();
  mSwitchBar.addOnSwitchChangeListener(this);
  mSwitchBar.show();
  mToggleSwitch=mSwitchBar.getSwitch();
  mToggleSwitch.setOnBeforeCheckedChangeListener(new ToggleSwitch.OnBeforeCheckedChangeListener(){
    @Override public boolean onBeforeCheckedChanged(    ToggleSwitch toggleSwitch,    boolean checked){
      onPreferenceToggled(mPreferenceKey,checked);
      return false;
    }
  }
);
  getBackupListView().setSelector(new ColorDrawable(Color.TRANSPARENT));
  getBackupListView().setAdapter(mPrintersAdapter);
  getBackupListView().setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      PrinterInfo printer=(PrinterInfo)mPrintersAdapter.getItem(position);
      if (printer.getInfoIntent() != null) {
        try {
          getActivity().startIntentSender(printer.getInfoIntent().getIntentSender(),null,0,0,0);
        }
 catch (        SendIntentException e) {
          Log.e(LOG_TAG,"Could not execute info intent: %s",e);
        }
      }
    }
  }
);
}
