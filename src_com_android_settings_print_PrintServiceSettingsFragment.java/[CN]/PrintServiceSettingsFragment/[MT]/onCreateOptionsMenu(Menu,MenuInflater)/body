{
  super.onCreateOptionsMenu(menu,inflater);
  inflater.inflate(R.menu.print_service_settings,menu);
  MenuItem addPrinters=menu.findItem(R.id.print_menu_item_add_printer);
  if (mServiceEnabled && !TextUtils.isEmpty(mAddPrintersTitle) && mAddPrintersIntent != null) {
    addPrinters.setIntent(mAddPrintersIntent);
  }
 else {
    menu.removeItem(R.id.print_menu_item_add_printer);
  }
  MenuItem settings=menu.findItem(R.id.print_menu_item_settings);
  if (mServiceEnabled && !TextUtils.isEmpty(mSettingsTitle) && mSettingsIntent != null) {
    settings.setIntent(mSettingsIntent);
  }
 else {
    menu.removeItem(R.id.print_menu_item_settings);
  }
  MenuItem searchItem=menu.findItem(R.id.print_menu_item_search);
  if (mServiceEnabled && mPrintersAdapter.getUnfilteredCount() > 0) {
    mSearchView=(SearchView)searchItem.getActionView();
    mSearchView.setOnQueryTextListener(new SearchView.OnQueryTextListener(){
      @Override public boolean onQueryTextSubmit(      String query){
        return true;
      }
      @Override public boolean onQueryTextChange(      String searchString){
        mPrintersAdapter.getFilter().filter(searchString);
        return true;
      }
    }
);
    mSearchView.addOnAttachStateChangeListener(new View.OnAttachStateChangeListener(){
      @Override public void onViewAttachedToWindow(      View view){
        if (AccessibilityManager.getInstance(getActivity()).isEnabled()) {
          view.announceForAccessibility(getString(R.string.print_search_box_shown_utterance));
        }
      }
      @Override public void onViewDetachedFromWindow(      View view){
        Activity activity=getActivity();
        if (activity != null && !activity.isFinishing() && AccessibilityManager.getInstance(activity).isEnabled()) {
          view.announceForAccessibility(getString(R.string.print_search_box_hidden_utterance));
        }
      }
    }
);
  }
 else {
    menu.removeItem(R.id.print_menu_item_search);
  }
}
