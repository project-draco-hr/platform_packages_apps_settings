{
  final Resources res=getResources();
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  final View dialogLayout=getActivity().getLayoutInflater().inflate(R.layout.multi_sim_dialog,null);
  builder.setView(dialogLayout);
  EditText nameText=(EditText)dialogLayout.findViewById(R.id.sim_name);
  nameText.setText(mSubInfoRecord.getDisplayName());
  final Spinner tintSpinner=(Spinner)dialogLayout.findViewById(R.id.spinner);
  SelectColorAdapter adapter=new SelectColorAdapter(getContext(),R.layout.settings_color_picker_item,mColorStrings);
  adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  tintSpinner.setAdapter(adapter);
  for (int i=0; i < mTintArr.length; i++) {
    if (mTintArr[i] == mSubInfoRecord.getIconTint()) {
      tintSpinner.setSelection(i);
      mTintSelectorPos=i;
      break;
    }
  }
  tintSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int pos,    long id){
      tintSpinner.setSelection(pos);
      mTintSelectorPos=pos;
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  TextView numberView=(TextView)dialogLayout.findViewById(R.id.number);
  final String rawNumber=mSubInfoRecord.getNumber();
  if (TextUtils.isEmpty(rawNumber)) {
    numberView.setText(res.getString(com.android.internal.R.string.unknownName));
  }
 else {
    numberView.setText(PhoneNumberUtils.formatNumber(rawNumber));
  }
  TextView carrierView=(TextView)dialogLayout.findViewById(R.id.carrier);
  carrierView.setText(mSubInfoRecord.getCarrierName());
  builder.setTitle(String.format(res.getString(R.string.sim_editor_title),(mSubInfoRecord.getSimSlotIndex() + 1)));
  builder.setPositiveButton(R.string.okay,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int whichButton){
      final EditText nameText=(EditText)dialogLayout.findViewById(R.id.sim_name);
      String displayName=nameText.getText().toString();
      int subId=mSubInfoRecord.getSubscriptionId();
      mSubInfoRecord.setDisplayName(displayName);
      mSubscriptionManager.setDisplayName(displayName,subId,SubscriptionManager.NAME_SOURCE_USER_INPUT);
      Utils.findRecordBySubId(getActivity(),subId).setDisplayName(displayName);
      final int tintSelected=tintSpinner.getSelectedItemPosition();
      int subscriptionId=mSubInfoRecord.getSubscriptionId();
      int tint=mTintArr[tintSelected];
      mSubInfoRecord.setIconTint(tint);
      mSubscriptionManager.setIconTint(tint,subscriptionId);
      Utils.findRecordBySubId(getActivity(),subscriptionId).setIconTint(tint);
      updateAllOptions();
      update();
    }
  }
);
  builder.setNegativeButton(R.string.cancel,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int whichButton){
      dialog.dismiss();
    }
  }
);
  builder.create().show();
}
