{
  final Resources res=getResources();
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  final View dialogLayout=getActivity().getLayoutInflater().inflate(R.layout.multi_sim_dialog,null);
  builder.setView(dialogLayout);
  EditText nameText=(EditText)dialogLayout.findViewById(R.id.sim_name);
  nameText.setText(mSubInfoRecord.displayName);
  final Spinner colorSpinner=(Spinner)dialogLayout.findViewById(R.id.spinner);
  ArrayAdapter<CharSequence> adapter=ArrayAdapter.createFromResource(getContext(),R.array.color_picker,android.R.layout.simple_spinner_item);
  adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
  colorSpinner.setAdapter(adapter);
  for (int i=0; i < colorArr.length; i++) {
    if (colorArr[i] == mSubInfoRecord.color) {
      colorSpinner.setSelection(i);
      break;
    }
  }
  colorSpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener(){
    @Override public void onItemSelected(    AdapterView<?> parent,    View view,    int pos,    long id){
      colorSpinner.setSelection(pos);
    }
    @Override public void onNothingSelected(    AdapterView<?> parent){
    }
  }
);
  TextView numberView=(TextView)dialogLayout.findViewById(R.id.number);
  numberView.setText(simPref.getFormattedPhoneNumber());
  TextView carrierView=(TextView)dialogLayout.findViewById(R.id.carrier);
  carrierView.setText(getCarrierName());
  builder.setTitle(String.format(res.getString(R.string.sim_editor_title),(mSubInfoRecord.slotId + 1)));
  builder.setPositiveButton(R.string.okay,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int whichButton){
      final EditText nameText=(EditText)dialogLayout.findViewById(R.id.sim_name);
      mSubInfoRecord.displayName=nameText.getText().toString();
      SubscriptionManager.setDisplayName(mSubInfoRecord.displayName,mSubInfoRecord.subId);
      findRecordBySubId(mSubInfoRecord.subId).displayName=nameText.getText().toString();
      final int colorSelected=colorSpinner.getSelectedItemPosition();
      mSubInfoRecord.color=colorArr[colorSelected];
      SubscriptionManager.setColor(colorArr[colorSelected],mSubInfoRecord.subId);
      findRecordBySubId(mSubInfoRecord.subId).color=colorArr[colorSelected];
      updateAllOptions();
      update();
    }
  }
);
  builder.setNegativeButton(R.string.cancel,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int whichButton){
      dialog.dismiss();
    }
  }
);
  builder.create().show();
}
