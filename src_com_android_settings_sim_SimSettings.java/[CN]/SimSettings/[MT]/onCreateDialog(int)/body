{
  final ArrayList<String> list=new ArrayList<String>();
  final int selectableSubInfoLength=mSelectableSubInfos.size();
  final DialogInterface.OnClickListener selectionListener=new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int value){
      final SubInfoRecord sir;
      if (id == DATA_PICK) {
        sir=mSelectableSubInfos.get(value);
        SubscriptionManager.setDefaultDataSubId(sir.subId);
      }
 else       if (id == CALLS_PICK) {
        if (value != 0) {
          sir=mSelectableSubInfos.get(value - 1);
          SubscriptionManager.setDefaultVoiceSubId(sir.subId);
        }
 else {
          SubscriptionManager.setDefaultVoiceSubId(SubscriptionManager.ASK_USER_SUB_ID);
        }
      }
 else       if (id == SMS_PICK) {
        sir=mSelectableSubInfos.get(value);
        SubscriptionManager.setDefaultSmsSubId(sir.subId);
      }
      updateActivitesCategory();
    }
  }
;
  if (id == CALLS_PICK) {
    list.add(getResources().getString(R.string.sim_calls_ask_first_prefs_title));
  }
  for (int i=0; i < selectableSubInfoLength; ++i) {
    final SubInfoRecord sir=mSelectableSubInfos.get(i);
    list.add(sir.displayName);
  }
  String[] arr=new String[selectableSubInfoLength];
  arr=list.toArray(arr);
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  ListAdapter adapter=new SelectAccountListAdapter(builder.getContext(),R.layout.select_account_list_item,arr);
  if (id == DATA_PICK) {
    builder.setTitle(R.string.select_sim_for_data);
  }
 else   if (id == CALLS_PICK) {
    builder.setTitle(R.string.select_sim_for_calls);
  }
 else   if (id == SMS_PICK) {
    builder.setTitle(R.string.sim_card_select_title);
  }
  return builder.setAdapter(adapter,selectionListener).create();
}
