{
  final ContentResolver resolver=getContentResolver();
  mDefaultRate=android.provider.Settings.Secure.getInt(resolver,TTS_DEFAULT_RATE,TextToSpeech.Engine.DEFAULT_RATE);
  mDefaultPitch=android.provider.Settings.Secure.getInt(resolver,TTS_DEFAULT_PITCH,TextToSpeech.Engine.DEFAULT_PITCH);
  mDefaultRatePref.setProgress(mDefaultRate);
  mDefaultRatePref.setOnPreferenceChangeListener(this);
  mDefaultRatePref.setMax(MAX_SPEECH_RATE);
  mDefaultPitchPref.setProgress(getPitchSeekBarProgressFromSpeechPitchValue(mDefaultPitch));
  mDefaultPitchPref.setOnPreferenceChangeListener(this);
  mDefaultPitchPref.setMax(getPitchSeekBarProgressFromSpeechPitchValue(MAX_SPEECH_PITCH));
  if (mTts != null) {
    mCurrentEngine=mTts.getCurrentEngine();
    mTts.setSpeechRate(mDefaultRate / 100.0f);
    mTts.setPitch(mDefaultPitch / 100.0f);
  }
  SettingsActivity activity=null;
  if (getActivity() instanceof SettingsActivity) {
    activity=(SettingsActivity)getActivity();
  }
 else {
    throw new IllegalStateException("TextToSpeechSettings used outside a " + "Settings");
  }
  mEnginePreferenceCategory.removeAll();
  List<EngineInfo> engines=mEnginesHelper.getEngines();
  for (  EngineInfo engine : engines) {
    TtsEnginePreference enginePref=new TtsEnginePreference(getPrefContext(),engine,this,activity);
    mEnginePreferenceCategory.addPreference(enginePref);
  }
  checkVoiceData(mCurrentEngine);
}
