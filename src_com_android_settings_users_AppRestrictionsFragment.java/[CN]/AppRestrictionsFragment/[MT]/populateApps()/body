{
  mAppList.setOrderingAsAdded(false);
  List<ApplicationInfo> visibleApps=new ArrayList<ApplicationInfo>();
  final Context context=getActivity();
  PackageManager pm=context.getPackageManager();
  Intent launcherIntent=new Intent(Intent.ACTION_MAIN);
  launcherIntent.addCategory(Intent.CATEGORY_LAUNCHER);
  addSystemApps(visibleApps,launcherIntent);
  Intent widgetIntent=new Intent(AppWidgetManager.ACTION_APPWIDGET_UPDATE);
  addSystemApps(visibleApps,widgetIntent);
  List<ApplicationInfo> installedApps=pm.getInstalledApplications(0);
  for (  ApplicationInfo app : installedApps) {
    if ((app.flags & ApplicationInfo.FLAG_SYSTEM) == 0 && (app.flags & ApplicationInfo.FLAG_UPDATED_SYSTEM_APP) == 0) {
      visibleApps.add(app);
    }
  }
  Collections.sort(visibleApps,new AppLabelComparator(pm));
  for (int i=visibleApps.size() - 1; i > 1; i--) {
    ApplicationInfo appInfo=visibleApps.get(i);
    if (appInfo.packageName.equals(visibleApps.get(i - 1).packageName)) {
      visibleApps.remove(i);
    }
  }
  Intent restrictionsIntent=new Intent(Intent.ACTION_GET_RESTRICTION_ENTRIES);
  final List<ResolveInfo> receivers=pm.queryBroadcastReceivers(restrictionsIntent,0);
  final List<ResolveInfo> existingApps=pm.queryIntentActivitiesAsUser(launcherIntent,0,mUser.getIdentifier());
  int i=0;
  if (visibleApps.size() > 0) {
    for (    ApplicationInfo app : visibleApps) {
      if (app.packageName == null)       continue;
      String packageName=app.packageName;
      Drawable icon=app.loadIcon(pm);
      CharSequence label=app.loadLabel(pm);
      AppRestrictionsPreference p=new AppRestrictionsPreference(context,this);
      p.setIcon(icon);
      p.setTitle(label);
      p.setKey(PKG_PREFIX + packageName);
      p.setSettingsEnabled(hasPackage(receivers,packageName) || packageName.equals(getActivity().getPackageName()));
      p.setPersistent(false);
      p.setOnPreferenceChangeListener(this);
      p.setOnPreferenceClickListener(this);
      try {
        PackageInfo pi=pm.getPackageInfo(packageName,0);
        if (pi.requiredForAllUsers) {
          p.setChecked(true);
          p.setRequired(true);
        }
 else         if (!mNewUser && hasPackage(existingApps,packageName)) {
          p.setChecked(true);
        }
      }
 catch (      NameNotFoundException re) {
      }
      mAppList.addPreference(p);
      if (packageName.equals(getActivity().getPackageName())) {
        p.setOrder(MAX_APP_RESTRICTIONS * 1);
      }
 else {
        p.setOrder(MAX_APP_RESTRICTIONS * (i + 2));
      }
      mSelectedPackages.put(packageName,p.isChecked());
      i++;
    }
  }
}
