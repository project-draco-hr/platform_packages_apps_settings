{
  final Context context=getActivity();
  if (context == null)   return;
  final PackageManager pm=mPackageManager;
  IPackageManager ipm=AppGlobals.getPackageManager();
  mAppList.removeAll();
  Intent restrictionsIntent=new Intent(Intent.ACTION_GET_RESTRICTION_ENTRIES);
  final List<ResolveInfo> receivers=pm.queryBroadcastReceivers(restrictionsIntent,0);
  int i=0;
  if (mVisibleApps.size() > 0) {
    for (    SelectableAppInfo app : mVisibleApps) {
      String packageName=app.packageName;
      if (packageName == null)       continue;
      final boolean isSettingsApp=packageName.equals(context.getPackageName());
      AppRestrictionsPreference p=new AppRestrictionsPreference(context,this);
      final boolean hasSettings=resolveInfoListHasPackage(receivers,packageName);
      p.setIcon(app.icon);
      p.setChecked(false);
      p.setTitle(app.activityName);
      if (app.masterEntry != null) {
        p.setSummary(context.getString(R.string.user_restrictions_controlled_by,app.masterEntry.activityName));
      }
      p.setKey(PKG_PREFIX + packageName);
      p.setSettingsEnabled(hasSettings || isSettingsApp);
      p.setPersistent(false);
      p.setOnPreferenceChangeListener(this);
      p.setOnPreferenceClickListener(this);
      PackageInfo pi=null;
      try {
        pi=pm.getPackageInfo(packageName,0);
      }
 catch (      NameNotFoundException re) {
        try {
          pi=ipm.getPackageInfo(packageName,0,mUser.getIdentifier());
        }
 catch (        RemoteException e) {
        }
      }
      if (pi != null && pi.requiredForAllUsers) {
        p.setChecked(true);
        p.setImmutable(true);
        if (!hasSettings && !isSettingsApp)         continue;
      }
 else       if (!mNewUser && appInfoListHasPackage(mUserApps,packageName)) {
        p.setChecked(true);
      }
      if (pi.requiredAccountType != null && pi.restrictedAccountType == null) {
        p.setChecked(false);
        p.setImmutable(true);
        p.setSummary(R.string.app_not_supported_in_limited);
      }
      if (pi.restrictedAccountType != null) {
        p.setSummary(R.string.app_sees_restricted_accounts);
      }
      if (app.masterEntry != null) {
        p.setImmutable(true);
        p.setChecked(mSelectedPackages.get(packageName));
      }
      mAppList.addPreference(p);
      if (isSettingsApp) {
        p.setOrder(MAX_APP_RESTRICTIONS * 1);
      }
 else {
        p.setOrder(MAX_APP_RESTRICTIONS * (i + 2));
      }
      p.setSelectableAppInfo(app);
      mSelectedPackages.put(packageName,p.isChecked());
      mAppListChanged=true;
      i++;
    }
  }
  if (mNewUser && mFirstTime) {
    mFirstTime=false;
    updateUserAppList();
  }
}
