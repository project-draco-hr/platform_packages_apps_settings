{
  Activity activity=fragment.getActivity();
  mUser=user;
  if (mUserManager == null) {
    mUserManager=UserManager.get(activity);
  }
  LayoutInflater inflater=activity.getLayoutInflater();
  View content=inflater.inflate(R.layout.edit_user_info_dialog_content,null);
  UserInfo info=mUserManager.getUserInfo(mUser.getIdentifier());
  final EditText userNameView=(EditText)content.findViewById(R.id.user_name);
  userNameView.setText(info.name);
  final ImageView userPhotoView=(ImageView)content.findViewById(R.id.user_photo);
  Drawable drawable=null;
  if (mSavedPhoto != null) {
    drawable=CircleFramedDrawable.getInstance(activity,mSavedPhoto);
  }
 else {
    drawable=currentUserIcon;
    if (drawable == null) {
      drawable=Utils.getUserIcon(activity,mUserManager,info);
    }
  }
  userPhotoView.setImageDrawable(drawable);
  mEditUserPhotoController=new EditUserPhotoController(fragment,userPhotoView,mSavedPhoto,drawable,mWaitingForActivityResult);
  mEditUserInfoDialog=new AlertDialog.Builder(activity).setTitle(R.string.profile_info_settings_title).setView(content).setCancelable(true).setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (which == DialogInterface.BUTTON_POSITIVE) {
        CharSequence userName=userNameView.getText();
        if (!TextUtils.isEmpty(userName)) {
          if (currentUserName == null || !userName.toString().equals(currentUserName.toString())) {
            if (callback != null) {
              callback.onLabelChanged(userName.toString());
            }
            mUserManager.setUserName(mUser.getIdentifier(),userName.toString());
          }
        }
        Drawable drawable=mEditUserPhotoController.getNewUserPhotoDrawable();
        Bitmap bitmap=mEditUserPhotoController.getNewUserPhotoBitmap();
        if (drawable != null && bitmap != null && !drawable.equals(currentUserIcon)) {
          if (callback != null) {
            callback.onPhotoChanged(drawable);
          }
          new AsyncTask<Void,Void,Void>(){
            @Override protected Void doInBackground(            Void... params){
              mUserManager.setUserIcon(mUser.getIdentifier(),mEditUserPhotoController.getNewUserPhotoBitmap());
              return null;
            }
          }
.executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,(Void[])null);
        }
        fragment.getActivity().removeDialog(RestrictedProfileSettings.DIALOG_ID_EDIT_USER_INFO);
      }
      clear();
    }
  }
).setNegativeButton(android.R.string.cancel,new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      clear();
    }
  }
).create();
  mEditUserInfoDialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
  return mEditUserInfoDialog;
}
