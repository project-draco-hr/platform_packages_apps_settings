{
  super.onCreate(icicle);
  if (icicle != null) {
    if (icicle.containsKey(SAVE_ADDING_USER)) {
      mAddedUserId=icicle.getInt(SAVE_ADDING_USER);
    }
    if (icicle.containsKey(SAVE_REMOVING_USER)) {
      mRemovingUserId=icicle.getInt(SAVE_REMOVING_USER);
    }
  }
  mUserManager=(UserManager)getActivity().getSystemService(Context.USER_SERVICE);
  addPreferencesFromResource(R.xml.user_settings);
  mTrustedUserListCategory=(PreferenceGroup)findPreference(KEY_TRUSTED_USER_LIST);
  mLimitedUserListCategory=(PreferenceGroup)findPreference(KEY_LIMITED_USER_LIST);
  mMePreference=new UserPreference(getActivity(),null,UserHandle.myUserId(),mUserManager.isLinkedUser() ? null : this,null);
  mMePreference.setKey(KEY_USER_ME);
  mMePreference.setOnPreferenceClickListener(this);
  if (mIsOwner) {
    mMePreference.setSummary(R.string.user_owner);
  }
  mAddRestrictedUser=findPreference(KEY_ADD_RESTRICTED_USER);
  mAddTrustedUser=findPreference(KEY_ADD_TRUSTED_USER);
  mAddRestrictedUser.setOnPreferenceClickListener(this);
  mAddTrustedUser.setOnPreferenceClickListener(this);
  if (!mIsOwner || UserManager.getMaxSupportedUsers() < 2) {
    removePreference(KEY_ADD_RESTRICTED_USER);
    removePreference(KEY_ADD_TRUSTED_USER);
  }
  loadProfile();
  setHasOptionsMenu(true);
  IntentFilter filter=new IntentFilter(Intent.ACTION_USER_REMOVED);
  filter.addAction(Intent.ACTION_USER_INFO_CHANGED);
  getActivity().registerReceiverAsUser(mUserChangeReceiver,UserHandle.ALL,filter,null,mHandler);
}
