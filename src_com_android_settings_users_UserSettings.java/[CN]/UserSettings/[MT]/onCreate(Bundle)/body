{
  super.onCreate(icicle);
  if (icicle != null) {
    if (icicle.containsKey(SAVE_ADDING_USER)) {
      mAddedUserId=icicle.getInt(SAVE_ADDING_USER);
    }
    if (icicle.containsKey(SAVE_REMOVING_USER)) {
      mRemovingUserId=icicle.getInt(SAVE_REMOVING_USER);
    }
  }
  final Context context=getActivity();
  mUserManager=(UserManager)context.getSystemService(Context.USER_SERVICE);
  boolean hasMultipleUsers=mUserManager.getUserCount() > 1;
  if ((!UserManager.supportsMultipleUsers() && !hasMultipleUsers) || Utils.isMonkeyRunning()) {
    mEnabled=false;
    return;
  }
  final int myUserId=UserHandle.myUserId();
  mIsGuest=mUserManager.getUserInfo(myUserId).isGuest();
  addPreferencesFromResource(R.xml.user_settings);
  mUserListCategory=(PreferenceGroup)findPreference(KEY_USER_LIST);
  mMePreference=new UserPreference(context,null,myUserId,mUserManager.isLinkedUser() ? null : this,null);
  mMePreference.setKey(KEY_USER_ME);
  mMePreference.setOnPreferenceClickListener(this);
  if (mIsOwner) {
    mMePreference.setSummary(R.string.user_owner);
  }
  mAddUser=findPreference(KEY_ADD_USER);
  if (!mIsOwner || UserManager.getMaxSupportedUsers() < 2 || !UserManager.supportsMultipleUsers() || mUserManager.hasUserRestriction(UserManager.DISALLOW_ADD_USER)) {
    removePreference(KEY_ADD_USER);
  }
 else {
    mAddUser.setOnPreferenceClickListener(this);
    DevicePolicyManager dpm=(DevicePolicyManager)context.getSystemService(Context.DEVICE_POLICY_SERVICE);
    if (dpm.getDeviceOwner() != null || Utils.isVoiceCapable(context)) {
      mCanAddRestrictedProfile=false;
      mAddUser.setTitle(R.string.user_add_user_menu);
    }
  }
  loadProfile();
  setHasOptionsMenu(true);
  IntentFilter filter=new IntentFilter(Intent.ACTION_USER_REMOVED);
  filter.addAction(Intent.ACTION_USER_INFO_CHANGED);
  context.registerReceiverAsUser(mUserChangeReceiver,UserHandle.ALL,filter,null,mHandler);
}
