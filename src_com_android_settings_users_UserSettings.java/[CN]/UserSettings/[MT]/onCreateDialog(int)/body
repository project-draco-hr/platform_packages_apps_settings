{
  Context context=getActivity();
  if (context == null)   return null;
switch (dialogId) {
case DIALOG_CONFIRM_REMOVE:
{
      Dialog dlg=new AlertDialog.Builder(getActivity()).setTitle(UserHandle.myUserId() == mRemovingUserId ? R.string.user_confirm_remove_self_title : R.string.user_confirm_remove_title).setMessage(UserHandle.myUserId() == mRemovingUserId ? R.string.user_confirm_remove_self_message : R.string.user_confirm_remove_message).setPositiveButton(R.string.user_delete_button,new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int which){
          removeUserNow();
        }
      }
).setNegativeButton(android.R.string.cancel,null).create();
      return dlg;
    }
case DIALOG_USER_CANNOT_MANAGE:
  return new AlertDialog.Builder(context).setMessage(R.string.user_cannot_manage_message).setPositiveButton(android.R.string.ok,null).create();
case DIALOG_ADD_USER:
{
  final SharedPreferences preferences=getActivity().getPreferences(Context.MODE_PRIVATE);
  final boolean longMessageDisplayed=preferences.getBoolean(KEY_ADD_USER_LONG_MESSAGE_DISPLAYED,false);
  final int messageResId=longMessageDisplayed ? R.string.user_add_user_message_short : R.string.user_add_user_message_long;
  final int userType=dialogId == DIALOG_ADD_USER ? USER_TYPE_USER : USER_TYPE_RESTRICTED_PROFILE;
  Dialog dlg=new AlertDialog.Builder(context).setTitle(R.string.user_add_user_title).setMessage(messageResId).setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
    public void onClick(    DialogInterface dialog,    int which){
      addUserNow(userType);
      if (!longMessageDisplayed) {
        preferences.edit().putBoolean(KEY_ADD_USER_LONG_MESSAGE_DISPLAYED,true).apply();
      }
    }
  }
).setNegativeButton(android.R.string.cancel,null).create();
  return dlg;
}
case DIALOG_SETUP_USER:
{
Dialog dlg=new AlertDialog.Builder(context).setTitle(R.string.user_setup_dialog_title).setMessage(R.string.user_setup_dialog_message).setPositiveButton(R.string.user_setup_button_setup_now,new DialogInterface.OnClickListener(){
  public void onClick(  DialogInterface dialog,  int which){
    switchUserNow(mAddedUserId);
  }
}
).setNegativeButton(R.string.user_setup_button_setup_later,null).create();
return dlg;
}
case DIALOG_SETUP_PROFILE:
{
Dialog dlg=new AlertDialog.Builder(context).setMessage(R.string.user_setup_profile_dialog_message).setPositiveButton(android.R.string.ok,new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int which){
  switchUserNow(mAddedUserId);
}
}
).setNegativeButton(android.R.string.cancel,null).create();
return dlg;
}
case DIALOG_CHOOSE_USER_TYPE:
{
List<HashMap<String,String>> data=new ArrayList<HashMap<String,String>>();
HashMap<String,String> addUserItem=new HashMap<String,String>();
addUserItem.put(KEY_TITLE,getString(R.string.user_add_user_item_title));
addUserItem.put(KEY_SUMMARY,getString(R.string.user_add_user_item_summary));
HashMap<String,String> addProfileItem=new HashMap<String,String>();
addProfileItem.put(KEY_TITLE,getString(R.string.user_add_profile_item_title));
addProfileItem.put(KEY_SUMMARY,getString(R.string.user_add_profile_item_summary));
data.add(addUserItem);
data.add(addProfileItem);
Dialog dlg=new AlertDialog.Builder(context).setTitle(R.string.user_add_user_type_title).setAdapter(new SimpleAdapter(context,data,R.layout.two_line_list_item,new String[]{KEY_TITLE,KEY_SUMMARY},new int[]{R.id.title,R.id.summary}),new DialogInterface.OnClickListener(){
public void onClick(DialogInterface dialog,int which){
onAddUserClicked(which == 0 ? USER_TYPE_USER : USER_TYPE_RESTRICTED_PROFILE);
}
}
).create();
return dlg;
}
default :
return null;
}
}
