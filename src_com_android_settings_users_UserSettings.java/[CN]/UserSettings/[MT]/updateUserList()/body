{
  if (getActivity() == null)   return;
  List<UserInfo> users=mUserManager.getUsers(true);
  final Context context=getActivity();
  final boolean voiceCapable=Utils.isVoiceCapable(context);
  final ArrayList<Integer> missingIcons=new ArrayList<>();
  final ArrayList<UserPreference> userPreferences=new ArrayList<>();
  userPreferences.add(mMePreference);
  for (  UserInfo user : users) {
    if (!user.supportsSwitchToByUser()) {
      continue;
    }
    UserPreference pref;
    if (user.id == UserHandle.myUserId()) {
      pref=mMePreference;
    }
 else     if (user.isGuest()) {
      continue;
    }
 else {
      final boolean showSettings=mUserCaps.mIsAdmin && (voiceCapable || user.isRestricted());
      final boolean showDelete=mUserCaps.mIsAdmin && (!voiceCapable && !user.isRestricted() && !user.isGuest());
      pref=new UserPreference(getPrefContext(),null,user.id,showSettings ? this : null,showDelete ? this : null);
      pref.setOnPreferenceClickListener(this);
      pref.setKey("id=" + user.id);
      userPreferences.add(pref);
      if (user.isAdmin()) {
        pref.setSummary(R.string.user_admin);
      }
      pref.setTitle(user.name);
    }
    if (!isInitialized(user)) {
      if (user.isRestricted()) {
        pref.setSummary(R.string.user_summary_restricted_not_set_up);
      }
 else {
        pref.setSummary(R.string.user_summary_not_set_up);
      }
    }
 else     if (user.isRestricted()) {
      pref.setSummary(R.string.user_summary_restricted_profile);
    }
    if (user.iconPath != null) {
      if (mUserIcons.get(user.id) == null) {
        missingIcons.add(user.id);
        pref.setIcon(getEncircledDefaultIcon());
      }
 else {
        setPhotoId(pref,user);
      }
    }
 else {
      pref.setIcon(getEncircledDefaultIcon());
    }
  }
  if (mAddingUser) {
    UserPreference pref=new UserPreference(getPrefContext(),null,UserPreference.USERID_UNKNOWN,null,null);
    pref.setEnabled(false);
    pref.setTitle(mAddingUserName);
    pref.setIcon(getEncircledDefaultIcon());
    userPreferences.add(pref);
  }
  if (!mUserCaps.mIsGuest && (mUserCaps.mCanAddGuest || mUserCaps.mDisallowAddUserSetByAdmin)) {
    UserPreference pref=new UserPreference(getPrefContext(),null,UserPreference.USERID_GUEST_DEFAULTS,mUserCaps.mIsAdmin && voiceCapable ? this : null,null);
    pref.setTitle(R.string.user_guest);
    pref.setIcon(getEncircledDefaultIcon());
    userPreferences.add(pref);
    pref.setDisabledByAdmin(mUserCaps.mDisallowAddUser ? mUserCaps.mEnforcedAdmin : null);
  }
  Collections.sort(userPreferences,UserPreference.SERIAL_NUMBER_COMPARATOR);
  getActivity().invalidateOptionsMenu();
  if (missingIcons.size() > 0) {
    loadIconsAsync(missingIcons);
  }
  PreferenceScreen preferenceScreen=getPreferenceScreen();
  preferenceScreen.removeAll();
  PreferenceGroup groupToAddUsers;
  if (mUserCaps.mCanAddRestrictedProfile) {
    mUserListCategory.removeAll();
    mUserListCategory.setOrder(Preference.DEFAULT_ORDER);
    preferenceScreen.addPreference(mUserListCategory);
    groupToAddUsers=mUserListCategory;
  }
 else {
    groupToAddUsers=preferenceScreen;
  }
  for (  UserPreference userPreference : userPreferences) {
    userPreference.setOrder(Preference.DEFAULT_ORDER);
    groupToAddUsers.addPreference(userPreference);
  }
  if (mUserCaps.mCanAddUser || mUserCaps.mDisallowAddUserSetByAdmin) {
    boolean moreUsers=mUserManager.canAddMoreUsers();
    mAddUser.setOrder(Preference.DEFAULT_ORDER);
    preferenceScreen.addPreference(mAddUser);
    mAddUser.setEnabled(moreUsers && !mAddingUser);
    if (!moreUsers) {
      mAddUser.setSummary(getString(R.string.user_add_max_count,getMaxRealUsers()));
    }
 else {
      mAddUser.setSummary(null);
    }
    if (mAddUser.isEnabled()) {
      mAddUser.setDisabledByAdmin(mUserCaps.mDisallowAddUser ? mUserCaps.mEnforcedAdmin : null);
    }
  }
  if (mUserCaps.mIsAdmin && (!mUserCaps.mDisallowAddUser || mUserCaps.mDisallowAddUserSetByAdmin)) {
    mLockScreenSettings.setOrder(Preference.DEFAULT_ORDER);
    preferenceScreen.addPreference(mLockScreenSettings);
    mAddUserWhenLocked.setChecked(Settings.Global.getInt(getContentResolver(),Settings.Global.ADD_USERS_WHEN_LOCKED,0) == 1);
    mAddUserWhenLocked.setOnPreferenceChangeListener(this);
    mAddUserWhenLocked.setDisabledByAdmin(mUserCaps.mDisallowAddUser ? mUserCaps.mEnforcedAdmin : null);
  }
  if (emergencyInfoActivityPresent()) {
    mEmergencyInfoPreference.setOnPreferenceClickListener(this);
    mEmergencyInfoPreference.setOrder(Preference.DEFAULT_ORDER);
    preferenceScreen.addPreference(mEmergencyInfoPreference);
  }
}
