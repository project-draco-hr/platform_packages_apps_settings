{
  if (getActivity() == null)   return;
  List<UserInfo> users=mUserManager.getUsers(true);
  final Context context=getActivity();
  mUserListCategory.removeAll();
  mUserListCategory.setOrderingAsAdded(false);
  mUserListCategory.addPreference(mMePreference);
  final boolean voiceCapable=Utils.isVoiceCapable(context);
  final ArrayList<Integer> missingIcons=new ArrayList<Integer>();
  for (  UserInfo user : users) {
    if (user.isManagedProfile()) {
      continue;
    }
    Preference pref;
    if (user.id == UserHandle.myUserId()) {
      pref=mMePreference;
    }
 else     if (user.isGuest()) {
      continue;
    }
 else {
      final boolean showSettings=mIsOwner && (voiceCapable || user.isRestricted());
      final boolean showDelete=mIsOwner && (!voiceCapable && !user.isRestricted() && !user.isGuest());
      pref=new UserPreference(context,null,user.id,showSettings ? this : null,showDelete ? this : null);
      pref.setOnPreferenceClickListener(this);
      pref.setKey("id=" + user.id);
      mUserListCategory.addPreference(pref);
      if (user.id == UserHandle.USER_OWNER) {
        pref.setSummary(R.string.user_owner);
      }
      pref.setTitle(user.name);
    }
    if (!isInitialized(user)) {
      if (user.isRestricted()) {
        pref.setSummary(R.string.user_summary_restricted_not_set_up);
      }
 else {
        pref.setSummary(R.string.user_summary_not_set_up);
      }
    }
 else     if (user.isRestricted()) {
      pref.setSummary(R.string.user_summary_restricted_profile);
    }
    if (user.iconPath != null) {
      if (mUserIcons.get(user.id) == null) {
        missingIcons.add(user.id);
        pref.setIcon(getEncircledDefaultIcon());
      }
 else {
        setPhotoId(pref,user);
      }
    }
 else {
      pref.setIcon(getEncircledDefaultIcon());
    }
  }
  if (mAddingUser) {
    Preference pref=new UserPreference(getActivity(),null,UserPreference.USERID_UNKNOWN,null,null);
    pref.setEnabled(false);
    pref.setTitle(R.string.user_new_user_name);
    pref.setIcon(getEncircledDefaultIcon());
    mUserListCategory.addPreference(pref);
  }
  boolean showGuestPreference=!mIsGuest;
  if (showGuestPreference && mUserManager.hasUserRestriction(UserManager.DISALLOW_ADD_USER)) {
    showGuestPreference=false;
    for (    UserInfo user : users) {
      if (user.isGuest()) {
        showGuestPreference=true;
        break;
      }
    }
  }
  if (showGuestPreference) {
    Preference pref=new UserPreference(getActivity(),null,UserPreference.USERID_GUEST_DEFAULTS,mIsOwner && voiceCapable ? this : null,null);
    pref.setTitle(R.string.user_guest);
    pref.setIcon(getEncircledDefaultIcon());
    pref.setOnPreferenceClickListener(this);
    mUserListCategory.addPreference(pref);
  }
  getActivity().invalidateOptionsMenu();
  if (missingIcons.size() > 0) {
    loadIconsAsync(missingIcons);
  }
  boolean moreUsers=mUserManager.canAddMoreUsers();
  mAddUser.setEnabled(moreUsers);
}
