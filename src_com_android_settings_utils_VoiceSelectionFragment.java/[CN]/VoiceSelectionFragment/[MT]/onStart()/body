{
  super.onStart();
  final int numItems=getListAdapter().getCount();
  if (numItems <= 0) {
    return;
  }
  Option[] options=new Option[numItems];
  for (int idx=0; idx < numItems; idx++) {
    options[idx]=getSelectionAt(idx).toOption(idx);
  }
  mRequest=new PickOptionRequest(mPrompt,options,null){
    @Override public void onPickOptionResult(    boolean isComplete,    Option[] options,    Bundle args){
      if (!isComplete || options == null) {
        return;
      }
      if (options.length == 1 && mOnItemSelectedListener != null) {
        int idx=options[0].getExtras().getInt("index",-1);
        mOnItemSelectedListener.onItemSelected(idx,getSelectionAt(idx));
      }
 else {
        onCancel();
      }
    }
  }
;
  mVoiceInteractor=getActivity().getVoiceInteractor();
  if (mVoiceInteractor != null) {
    mVoiceInteractor.submitRequest(mRequest);
  }
}
