{
  if (mSharedState == null) {
    throw new IllegalStateException("Call to getView() before a call to" + "setSharedState()");
  }
  View view=super.getView(convertView,parent);
  final RadioButton rb=(RadioButton)view.findViewById(R.id.tts_engine_radiobutton);
  rb.setOnCheckedChangeListener(mRadioChangeListener);
  boolean isChecked=getKey().equals(mSharedState.getCurrentKey());
  if (isChecked) {
    mSharedState.setCurrentChecked(rb);
  }
  mPreventRadioButtonCallbacks=true;
  rb.setChecked(isChecked);
  mPreventRadioButtonCallbacks=false;
  mRadioButton=rb;
  View textLayout=view.findViewById(R.id.tts_engine_pref_text);
  textLayout.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      onRadioButtonClicked(rb,!rb.isChecked());
    }
  }
);
  mSettingsIcon=view.findViewById(R.id.tts_engine_settings);
  mSettingsIcon.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Intent intent=new Intent(Intent.ACTION_MAIN);
      intent.setComponent(mSettingsComponent);
      getContext().startActivity(new Intent(intent));
    }
  }
);
  updateCheckedState(isChecked);
  return view;
}
