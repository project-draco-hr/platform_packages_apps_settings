{
  mView=getLayoutInflater().inflate(R.layout.vpn_dialog,null);
  setView(mView);
  Context context=getContext();
  mName=(TextView)mView.findViewById(R.id.name);
  mType=(Spinner)mView.findViewById(R.id.type);
  mServer=(TextView)mView.findViewById(R.id.server);
  mUsername=(TextView)mView.findViewById(R.id.username);
  mPassword=(TextView)mView.findViewById(R.id.password);
  mSearchDomains=(TextView)mView.findViewById(R.id.search_domains);
  mDnsServers=(TextView)mView.findViewById(R.id.dns_servers);
  mRoutes=(TextView)mView.findViewById(R.id.routes);
  mMppe=(CheckBox)mView.findViewById(R.id.mppe);
  mL2tpSecret=(TextView)mView.findViewById(R.id.l2tp_secret);
  mIpsecIdentifier=(TextView)mView.findViewById(R.id.ipsec_identifier);
  mIpsecSecret=(TextView)mView.findViewById(R.id.ipsec_secret);
  mIpsecUserCert=(Spinner)mView.findViewById(R.id.ipsec_user_cert);
  mIpsecCaCert=(Spinner)mView.findViewById(R.id.ipsec_ca_cert);
  mIpsecServerCert=(Spinner)mView.findViewById(R.id.ipsec_server_cert);
  mSaveLogin=(CheckBox)mView.findViewById(R.id.save_login);
  mShowOptions=(CheckBox)mView.findViewById(R.id.show_options);
  mAlwaysOnVpn=(CheckBox)mView.findViewById(R.id.always_on_vpn);
  mName.setText(mProfile.name);
  mType.setSelection(mProfile.type);
  mServer.setText(mProfile.server);
  if (mProfile.saveLogin) {
    mUsername.setText(mProfile.username);
    mPassword.setText(mProfile.password);
  }
  mSearchDomains.setText(mProfile.searchDomains);
  mDnsServers.setText(mProfile.dnsServers);
  mRoutes.setText(mProfile.routes);
  mMppe.setChecked(mProfile.mppe);
  mL2tpSecret.setText(mProfile.l2tpSecret);
  mIpsecIdentifier.setText(mProfile.ipsecIdentifier);
  mIpsecSecret.setText(mProfile.ipsecSecret);
  loadCertificates(mIpsecUserCert,Credentials.USER_PRIVATE_KEY,0,mProfile.ipsecUserCert);
  loadCertificates(mIpsecCaCert,Credentials.CA_CERTIFICATE,R.string.vpn_no_ca_cert,mProfile.ipsecCaCert);
  loadCertificates(mIpsecServerCert,Credentials.USER_CERTIFICATE,R.string.vpn_no_server_cert,mProfile.ipsecServerCert);
  mSaveLogin.setChecked(mProfile.saveLogin);
  mAlwaysOnVpn.setChecked(mProfile.key.equals(VpnUtils.getLockdownVpn()));
  mAlwaysOnVpn.setOnCheckedChangeListener(this);
  updateSaveLoginStatus();
  if (SystemProperties.getBoolean("persist.radio.imsregrequired",false)) {
    mAlwaysOnVpn.setVisibility(View.GONE);
  }
  mName.addTextChangedListener(this);
  mType.setOnItemSelectedListener(this);
  mServer.addTextChangedListener(this);
  mUsername.addTextChangedListener(this);
  mPassword.addTextChangedListener(this);
  mDnsServers.addTextChangedListener(this);
  mRoutes.addTextChangedListener(this);
  mIpsecSecret.addTextChangedListener(this);
  mIpsecUserCert.setOnItemSelectedListener(this);
  mShowOptions.setOnClickListener(this);
  boolean valid=validate(true);
  mEditing=mEditing || !valid;
  if (mEditing) {
    setTitle(R.string.vpn_edit);
    mView.findViewById(R.id.editor).setVisibility(View.VISIBLE);
    changeType(mProfile.type);
    if (!mProfile.searchDomains.isEmpty() || !mProfile.dnsServers.isEmpty() || !mProfile.routes.isEmpty()) {
      showAdvancedOptions();
    }
    if (mExists) {
      setButton(DialogInterface.BUTTON_NEUTRAL,context.getString(R.string.vpn_forget),mListener);
    }
    setButton(DialogInterface.BUTTON_POSITIVE,context.getString(R.string.vpn_save),mListener);
  }
 else {
    setTitle(context.getString(R.string.vpn_connect_to,mProfile.name));
    mView.findViewById(R.id.login).setVisibility(View.VISIBLE);
    setButton(DialogInterface.BUTTON_POSITIVE,context.getString(R.string.vpn_connect),mListener);
  }
  setButton(DialogInterface.BUTTON_NEGATIVE,context.getString(R.string.vpn_cancel),mListener);
  super.onCreate(savedState);
  getButton(DialogInterface.BUTTON_POSITIVE).setEnabled(mEditing ? valid : validate(false));
  getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_RESIZE | WindowManager.LayoutParams.SOFT_INPUT_STATE_VISIBLE);
}
