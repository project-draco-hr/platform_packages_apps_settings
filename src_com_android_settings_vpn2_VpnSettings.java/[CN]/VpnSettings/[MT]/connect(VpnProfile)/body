{
  LinkProperties network=mService.getActiveLinkProperties();
  String interfaze=(network == null) ? null : network.getInterfaceName();
  if (interfaze == null) {
    throw new IllegalStateException("Cannot get network interface");
  }
  String privateKey="";
  String userCert="";
  String caCert="";
  if (!profile.ipsecUserCert.isEmpty()) {
    byte[] value=mKeyStore.get(Credentials.USER_PRIVATE_KEY + profile.ipsecUserCert);
    privateKey=(value == null) ? null : new String(value,Charsets.UTF_8);
    value=mKeyStore.get(Credentials.USER_CERTIFICATE + profile.ipsecUserCert);
    userCert=(value == null) ? null : new String(value,Charsets.UTF_8);
  }
  if (!profile.ipsecCaCert.isEmpty()) {
    byte[] value=mKeyStore.get(Credentials.CA_CERTIFICATE + profile.ipsecCaCert);
    caCert=(value == null) ? null : new String(value,Charsets.UTF_8);
  }
  if (privateKey == null || userCert == null || caCert == null) {
    throw new IllegalStateException("Cannot load credentials");
  }
  Log.i(TAG,userCert);
  String[] racoon=null;
switch (profile.type) {
case VpnProfile.TYPE_L2TP_IPSEC_PSK:
    racoon=new String[]{interfaze,profile.server,"udppsk","1701",profile.ipsecSecret};
  break;
case VpnProfile.TYPE_L2TP_IPSEC_RSA:
racoon=new String[]{interfaze,profile.server,"udprsa","1701",privateKey,userCert,caCert};
break;
case VpnProfile.TYPE_IPSEC_XAUTH_PSK:
break;
case VpnProfile.TYPE_IPSEC_XAUTH_RSA:
break;
case VpnProfile.TYPE_IPSEC_HYBRID_RSA:
break;
}
String[] mtpd=null;
switch (profile.type) {
case VpnProfile.TYPE_PPTP:
mtpd=new String[]{"pptp",profile.server,"1723","name",profile.username,"password",profile.password,"linkname","vpn","refuse-eap","nodefaultroute","usepeerdns","idle","1800","mtu","1400","mru","1400","ipparam",profile.routes,(profile.mppe ? "+mppe" : "nomppe")};
break;
case VpnProfile.TYPE_L2TP_IPSEC_PSK:
case VpnProfile.TYPE_L2TP_IPSEC_RSA:
mtpd=new String[]{"l2tp",profile.server,"1701",profile.l2tpSecret,"name",profile.username,"password",profile.password,"linkname","vpn","refuse-eap","nodefaultroute","usepeerdns","idle","1800","mtu","1400","mru","1400","ipparam",profile.routes};
break;
}
VpnConfig config=new VpnConfig();
config.packagz=profile.key;
config.session=profile.name;
config.routes=profile.routes;
if (!profile.searchDomains.isEmpty()) {
config.searchDomains=Arrays.asList(profile.searchDomains.split(" "));
}
mService.startLegacyVpn(config,racoon,mtpd);
}
