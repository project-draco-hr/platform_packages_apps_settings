{
  mUpdater.removeMessages(0);
  if (isResumed()) {
    try {
      LegacyVpnInfo info=mConnectivityService.getLegacyVpnInfo();
      if (mConnectedLegacyVpn != null) {
        ConfigPreference preference=mConfigPreferences.get(mConnectedLegacyVpn.key);
        if (preference != null) {
          preference.setState(-1);
        }
        mConnectedLegacyVpn=null;
      }
      if (info != null) {
        ConfigPreference preference=mConfigPreferences.get(info.key);
        if (preference != null) {
          preference.setState(info.state);
          mConnectedLegacyVpn=info;
        }
      }
      for (      String key : mConnectedVpns) {
        AppPreference preference=mAppPreferences.get(key);
        if (preference != null) {
          preference.setState(AppPreference.STATE_DISCONNECTED);
        }
      }
      mConnectedVpns.clear();
      VpnConfig cfg=mConnectivityService.getVpnConfig();
      if (cfg != null) {
        mConnectedVpns.add(cfg.user);
      }
      for (      String key : mConnectedVpns) {
        AppPreference preference=mAppPreferences.get(key);
        if (preference != null) {
          preference.setState(AppPreference.STATE_CONNECTED);
        }
      }
    }
 catch (    RemoteException e) {
    }
    mUpdater.sendEmptyMessageDelayed(0,1000);
  }
  return true;
}
