{
  if (DEBUG)   Log.d(TAG,"onActivityResult , result = " + resultCode + ", data = "+ data);
  if ((resultCode == Activity.RESULT_CANCELED) || (data == null)) {
    Log.d(TAG,"no result returned by editor");
    return;
  }
  if (requestCode == REQUEST_SELECT_VPN_TYPE) {
    final String typeName=data.getStringExtra(KEY_VPN_TYPE);
    startVpnEditor(createVpnProfile(typeName),true);
  }
 else   if (requestCode == REQUEST_ADD_OR_EDIT_PROFILE) {
    VpnProfile p=data.getParcelableExtra(KEY_VPN_PROFILE);
    if (p == null) {
      Log.e(TAG,"null object returned by editor");
      return;
    }
    final Activity activity=getActivity();
    int index=getProfileIndexFromId(p.getId());
    if (checkDuplicateName(p,index)) {
      final VpnProfile profile=p;
      Util.showErrorMessage(activity,String.format(activity.getString(R.string.vpn_error_duplicate_name),p.getName()),new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int w){
          startVpnEditor(profile,false);
        }
      }
);
      return;
    }
    if (needKeyStoreToSave(p)) {
      Runnable action=new Runnable(){
        public void run(){
          onActivityResult(requestCode,resultCode,data);
        }
      }
;
      if (!unlockKeyStore(p,action))       return;
    }
    try {
      if (index < 0) {
        addProfile(p);
        Util.showShortToastMessage(activity,String.format(activity.getString(R.string.vpn_profile_added),p.getName()));
      }
 else {
        replaceProfile(index,p);
        Util.showShortToastMessage(activity,String.format(activity.getString(R.string.vpn_profile_replaced),p.getName()));
      }
    }
 catch (    IOException e) {
      final VpnProfile profile=p;
      Util.showErrorMessage(activity,e + ": " + e.getMessage(),new DialogInterface.OnClickListener(){
        public void onClick(        DialogInterface dialog,        int w){
          startVpnEditor(profile,false);
        }
      }
);
    }
  }
 else {
    throw new RuntimeException("unknown request code: " + requestCode);
  }
}
