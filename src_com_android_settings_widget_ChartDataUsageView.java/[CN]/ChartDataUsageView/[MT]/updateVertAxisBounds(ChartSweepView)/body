{
  final long max=mVertMax;
  long newMax=0;
  if (activeSweep != null) {
    final int adjustAxis=activeSweep.shouldAdjustAxis();
    if (adjustAxis > 0) {
      newMax=max * 11 / 10;
    }
 else     if (adjustAxis < 0) {
      newMax=max * 9 / 10;
    }
 else {
      newMax=max;
    }
  }
  final long maxSweep=Math.max(mSweepWarning.getValue(),mSweepLimit.getValue());
  final long maxSeries=Math.max(mSeries.getMaxVisible(),mDetailSeries.getMaxVisible());
  final long maxVisible=Math.max(maxSeries,maxSweep) * 12 / 10;
  final long maxDefault=Math.max(maxVisible,50 * MB_IN_BYTES);
  newMax=Math.max(maxDefault,newMax);
  if (newMax != mVertMax) {
    mVertMax=newMax;
    final boolean changed=mVert.setBounds(0L,newMax);
    mSweepWarning.setValidRange(0L,newMax);
    mSweepLimit.setValidRange(0L,newMax);
    if (changed) {
      mSeries.invalidatePath();
      mDetailSeries.invalidatePath();
    }
    mGrid.invalidate();
    if (activeSweep != null) {
      activeSweep.updateValueFromPosition();
    }
    if (mSweepLimit != activeSweep) {
      layoutSweep(mSweepLimit);
    }
    if (mSweepWarning != activeSweep) {
      layoutSweep(mSweepWarning);
    }
  }
}
