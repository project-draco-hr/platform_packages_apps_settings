{
  final ContentResolver resolver=context.getContentResolver();
  new AsyncTask<Void,Void,Boolean>(){
    @Override protected Boolean doInBackground(    Void... args){
      final UserManager um=(UserManager)context.getSystemService(Context.USER_SERVICE);
      if (!um.hasUserRestriction(UserManager.DISALLOW_SHARE_LOCATION)) {
        int currentMode=Settings.Secure.getInt(resolver,Settings.Secure.LOCATION_MODE,Settings.Secure.LOCATION_MODE_OFF);
        int mode=Settings.Secure.LOCATION_MODE_HIGH_ACCURACY;
switch (currentMode) {
case Settings.Secure.LOCATION_MODE_HIGH_ACCURACY:
          mode=Settings.Secure.LOCATION_MODE_BATTERY_SAVING;
        break;
case Settings.Secure.LOCATION_MODE_BATTERY_SAVING:
      mode=Settings.Secure.LOCATION_MODE_HIGH_ACCURACY;
    break;
case Settings.Secure.LOCATION_MODE_SENSORS_ONLY:
  mode=Settings.Secure.LOCATION_MODE_OFF;
break;
case Settings.Secure.LOCATION_MODE_OFF:
mode=Settings.Secure.LOCATION_MODE_PREVIOUS;
break;
}
Settings.Secure.putInt(resolver,Settings.Secure.LOCATION_MODE,mode);
return mode != Settings.Secure.LOCATION_MODE_OFF;
}
return getActualState(context) == STATE_ENABLED;
}
@Override protected void onPostExecute(Boolean result){
setCurrentState(context,result ? STATE_ENABLED : STATE_DISABLED);
updateWidget(context);
}
}
.execute();
}
