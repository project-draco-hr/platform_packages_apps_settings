{
  final Context context=getContext();
  final String ssid=mState.getHumanReadableSsid();
  int positiveButtonResId=0;
  int negativeButtonResId=R.string.cancel;
  int neutralButtonResId=0;
  if (mCustomTitle == null) {
    super.setTitle(ssid);
  }
  setInverseBackgroundForced(true);
  boolean defaultPasswordVisibility=true;
  if (mMode == MODE_CONFIGURE) {
    setLayout(R.layout.wifi_ap_configure);
    positiveButtonResId=R.string.wifi_save_config;
    mSaveButtonPos=POSITIVE_BUTTON;
  }
 else   if (mMode == MODE_INFO) {
    setLayout(R.layout.wifi_ap_info);
    if (mState.isConnectable()) {
      if (mCustomTitle == null) {
        super.setTitle(context.getString(R.string.connect_to_blank,ssid));
      }
      positiveButtonResId=R.string.connect;
      mConnectButtonPos=POSITIVE_BUTTON;
    }
    if (mState.isForgetable()) {
      if (positiveButtonResId == 0) {
        positiveButtonResId=R.string.forget_network;
        mForgetButtonPos=POSITIVE_BUTTON;
      }
 else {
        neutralButtonResId=R.string.forget_network;
        mForgetButtonPos=NEUTRAL_BUTTON;
      }
    }
  }
 else   if (mMode == MODE_RETRY_PASSWORD) {
    setLayout(R.layout.wifi_ap_retry_password);
    positiveButtonResId=R.string.connect;
    mConnectButtonPos=POSITIVE_BUTTON;
    setGenericPasswordVisible(true);
    defaultPasswordVisibility=false;
  }
  if (defaultPasswordVisibility) {
    if (!mState.configured && mState.seen && mState.hasSecurity()) {
      setGenericPasswordVisible(true);
    }
 else {
      setGenericPasswordVisible(false);
    }
  }
  setButtons(positiveButtonResId,negativeButtonResId,neutralButtonResId);
}
