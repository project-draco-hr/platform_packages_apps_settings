{
  mIdentityText=(TextView)view.findViewById(R.id.identity_text);
  mIdentityEdit=(EditText)view.findViewById(R.id.identity_edit);
  mAnonymousIdentityText=(TextView)view.findViewById(R.id.anonymous_identity_text);
  mAnonymousIdentityEdit=(EditText)view.findViewById(R.id.anonymous_identity_edit);
  mClientCertText=(TextView)view.findViewById(R.id.client_certificate_text);
  mCaCertText=(TextView)view.findViewById(R.id.ca_certificate_text);
  mPrivateKeyText=(TextView)view.findViewById(R.id.private_key_text);
  mPrivateKeyPasswdText=(TextView)view.findViewById(R.id.private_key_passwd_text);
  mPrivateKeyPasswdEdit=(EditText)view.findViewById(R.id.private_key_passwd_edit);
  mEapText=(TextView)view.findViewById(R.id.eap_text);
  mEapSpinner=(Spinner)view.findViewById(R.id.eap_spinner);
  mEapSpinner.setOnItemSelectedListener(this);
  mEapSpinner.setPromptId(R.string.please_select_eap);
  setSpinnerAdapter(mEapSpinner,R.array.wifi_eap_entries);
  mPhase2Text=(TextView)view.findViewById(R.id.phase2_text);
  mPhase2Spinner=(Spinner)view.findViewById(R.id.phase2_spinner);
  mPhase2Spinner.setOnItemSelectedListener(this);
  mPhase2Spinner.setPromptId(R.string.please_select_phase2);
  setSpinnerAdapter(mPhase2Spinner,R.array.wifi_phase2_entries);
  Keystore ks=Keystore.getInstance();
  mClientCertSpinner=(Spinner)view.findViewById(R.id.client_certificate_spinner);
  mClientCertSpinner.setOnItemSelectedListener(this);
  mClientCertSpinner.setPromptId(R.string.please_select_client_certificate);
  setSpinnerAdapter(mClientCertSpinner,ks.getAllCertificateKeys());
  mCaCertSpinner=(Spinner)view.findViewById(R.id.ca_certificate_spinner);
  mCaCertSpinner.setOnItemSelectedListener(this);
  mCaCertSpinner.setPromptId(R.string.please_select_ca_certificate);
  setSpinnerAdapter(mCaCertSpinner,ks.getAllCertificateKeys());
  mPrivateKeySpinner=(Spinner)view.findViewById(R.id.private_key_spinner);
  mPrivateKeySpinner.setOnItemSelectedListener(this);
  mPrivateKeySpinner.setPromptId(R.string.please_select_private_key);
  setSpinnerAdapter(mPrivateKeySpinner,ks.getAllUserkeyKeys());
  mEnterpriseTextFields=new EditText[]{mIdentityEdit,mAnonymousIdentityEdit,mPrivateKeyPasswdEdit};
  mEnterpriseSpinnerFields=new Spinner[]{mClientCertSpinner,mCaCertSpinner,mPrivateKeySpinner};
}
