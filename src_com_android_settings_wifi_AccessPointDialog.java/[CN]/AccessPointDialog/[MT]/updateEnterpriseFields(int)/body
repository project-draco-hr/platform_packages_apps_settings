{
  int i;
  for (i=AccessPointState.IDENTITY; i < AccessPointState.MAX_ENTRPRISE_FIELD; i++) {
    String value;
    if (i <= AccessPointState.PRIVATE_KEY_PASSWD) {
      value=mEnterpriseTextFields[i].getText().toString();
    }
 else {
      Spinner spinner=mEnterpriseSpinnerFields[i - AccessPointState.CLIENT_CERT];
      int index=spinner.getSelectedItemPosition();
      if (index == (spinner.getCount() - 1)) {
        value="";
      }
 else {
        if (i != AccessPointState.PRIVATE_KEY) {
          value=mKeystore.getCertificate(getAllCertificateKeys()[index]);
        }
 else {
          value=mKeystore.getUserkey(getAllUserkeyKeys()[index]);
        }
      }
    }
    if (!TextUtils.isEmpty(value) || (i == AccessPointState.PRIVATE_KEY_PASSWD)) {
      mState.setEnterpriseField(i,value);
    }
  }
switch (securityType) {
case SECURITY_WPA_EAP:
{
      mState.setSecurity(AccessPointState.WPA_EAP);
      mState.setEap(mEapSpinner.getSelectedItemPosition());
      break;
    }
case SECURITY_IEEE8021X:
{
    mState.setSecurity(AccessPointState.IEEE8021X);
    mState.setEap(mEapSpinner.getSelectedItemPosition());
    break;
  }
default :
mState.setSecurity(AccessPointState.OPEN);
}
}
