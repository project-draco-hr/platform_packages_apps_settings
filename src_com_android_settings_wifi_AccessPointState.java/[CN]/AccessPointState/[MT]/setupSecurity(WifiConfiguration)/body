{
  config.allowedAuthAlgorithms.clear();
  config.allowedGroupCiphers.clear();
  config.allowedKeyManagement.clear();
  config.allowedPairwiseCiphers.clear();
  config.allowedProtocols.clear();
  if (TextUtils.isEmpty(security)) {
    security=OPEN;
    Log.w(TAG,"Empty security, assuming open");
  }
  if (security.equals(WEP)) {
    if (!TextUtils.isEmpty(mPassword)) {
      if (mWepPasswordType == WEP_PASSWORD_AUTO) {
        if (isHexWepKey(mPassword)) {
          config.wepKeys[0]=mPassword;
        }
 else {
          config.wepKeys[0]=convertToQuotedString(mPassword);
        }
      }
 else {
        config.wepKeys[0]=mWepPasswordType == WEP_PASSWORD_ASCII ? convertToQuotedString(mPassword) : mPassword;
      }
    }
    config.wepTxKeyIndex=0;
    config.allowedAuthAlgorithms.set(AuthAlgorithm.OPEN);
    config.allowedAuthAlgorithms.set(AuthAlgorithm.SHARED);
    config.allowedKeyManagement.set(KeyMgmt.NONE);
    config.allowedGroupCiphers.set(GroupCipher.WEP40);
    config.allowedGroupCiphers.set(GroupCipher.WEP104);
  }
 else   if (security.equals(WPA) || security.equals(WPA2)) {
    config.allowedGroupCiphers.set(GroupCipher.TKIP);
    config.allowedGroupCiphers.set(GroupCipher.CCMP);
    config.allowedKeyManagement.set(KeyMgmt.WPA_PSK);
    config.allowedPairwiseCiphers.set(PairwiseCipher.CCMP);
    config.allowedPairwiseCiphers.set(PairwiseCipher.TKIP);
    config.allowedProtocols.set(security.equals(WPA2) ? Protocol.RSN : Protocol.WPA);
    if (!TextUtils.isEmpty(mPassword)) {
      if (mPassword.length() == 64 && isHex(mPassword)) {
        config.preSharedKey=mPassword;
      }
 else {
        config.preSharedKey=convertToQuotedString(mPassword);
      }
    }
  }
 else   if (security.equals(OPEN)) {
    config.allowedKeyManagement.set(KeyMgmt.NONE);
  }
 else   if (security.equals(WPA_EAP) || security.equals(IEEE8021X)) {
    config.allowedGroupCiphers.set(GroupCipher.TKIP);
    config.allowedGroupCiphers.set(GroupCipher.CCMP);
    if (security.equals(WPA_EAP)) {
      config.allowedKeyManagement.set(KeyMgmt.WPA_EAP);
    }
 else {
      config.allowedKeyManagement.set(KeyMgmt.IEEE8021X);
    }
    if (!TextUtils.isEmpty(mPassword)) {
    }
  }
}
