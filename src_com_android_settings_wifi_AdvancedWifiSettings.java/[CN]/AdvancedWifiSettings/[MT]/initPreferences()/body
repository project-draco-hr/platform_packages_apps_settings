{
  SwitchPreference notifyOpenNetworks=(SwitchPreference)findPreference(KEY_NOTIFY_OPEN_NETWORKS);
  notifyOpenNetworks.setChecked(Settings.Global.getInt(getContentResolver(),Settings.Global.WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON,0) == 1);
  notifyOpenNetworks.setEnabled(mWifiManager.isWifiEnabled());
  Intent intent=new Intent(Credentials.INSTALL_AS_USER_ACTION);
  intent.setClassName("com.android.certinstaller","com.android.certinstaller.CertInstallerMain");
  intent.putExtra(Credentials.EXTRA_INSTALL_AS_UID,android.os.Process.WIFI_UID);
  Preference pref=findPreference(KEY_INSTALL_CREDENTIALS);
  pref.setIntent(intent);
  final Context context=getActivity();
  mWifiAssistantPreference=(AppListSwitchPreference)findPreference(KEY_WIFI_ASSISTANT);
  Collection<NetworkScorerAppData> scorers=NetworkScorerAppManager.getAllValidScorers(context);
  if (UserManager.get(context).isAdminUser() && !scorers.isEmpty()) {
    mWifiAssistantPreference.setOnPreferenceChangeListener(this);
    initWifiAssistantPreference(scorers);
  }
 else   if (mWifiAssistantPreference != null) {
    getPreferenceScreen().removePreference(mWifiAssistantPreference);
  }
  Intent wifiDirectIntent=new Intent(context,com.android.settings.Settings.WifiP2pSettingsActivity.class);
  Preference wifiDirectPref=findPreference(KEY_WIFI_DIRECT);
  wifiDirectPref.setIntent(wifiDirectIntent);
  Preference wpsPushPref=findPreference(KEY_WPS_PUSH);
  wpsPushPref.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    public boolean onPreferenceClick(    Preference arg0){
      WpsFragment wpsFragment=new WpsFragment(WpsInfo.PBC);
      wpsFragment.show(getFragmentManager(),KEY_WPS_PUSH);
      return true;
    }
  }
);
  Preference wpsPinPref=findPreference(KEY_WPS_PIN);
  wpsPinPref.setOnPreferenceClickListener(new OnPreferenceClickListener(){
    public boolean onPreferenceClick(    Preference arg0){
      WpsFragment wpsFragment=new WpsFragment(WpsInfo.DISPLAY);
      wpsFragment.show(getFragmentManager(),KEY_WPS_PIN);
      return true;
    }
  }
);
  ListPreference frequencyPref=(ListPreference)findPreference(KEY_FREQUENCY_BAND);
  if (mWifiManager.isDualBandSupported()) {
    frequencyPref.setOnPreferenceChangeListener(this);
    int value=mWifiManager.getFrequencyBand();
    if (value != -1) {
      frequencyPref.setValue(String.valueOf(value));
      updateFrequencyBandSummary(frequencyPref,value);
    }
 else {
      Log.e(TAG,"Failed to fetch frequency band");
    }
  }
 else {
    if (frequencyPref != null) {
      getPreferenceScreen().removePreference(frequencyPref);
    }
  }
  ListPreference sleepPolicyPref=(ListPreference)findPreference(KEY_SLEEP_POLICY);
  if (sleepPolicyPref != null) {
    if (Utils.isWifiOnly(context)) {
      sleepPolicyPref.setEntries(R.array.wifi_sleep_policy_entries_wifi_only);
    }
    sleepPolicyPref.setOnPreferenceChangeListener(this);
    int value=Settings.Global.getInt(getContentResolver(),Settings.Global.WIFI_SLEEP_POLICY,Settings.Global.WIFI_SLEEP_POLICY_NEVER);
    String stringValue=String.valueOf(value);
    sleepPolicyPref.setValue(stringValue);
    updateSleepPolicySummary(sleepPolicyPref,stringValue);
  }
}
