{
  mConfigUi=parent;
  mInXlSetupWizard=(parent instanceof WifiConfigUiForSetupWizardXL);
  mView=view;
  mAccessPoint=accessPoint;
  mAccessPointSecurity=(accessPoint == null) ? AccessPoint.SECURITY_NONE : accessPoint.security;
  mEdit=edit;
  final Context context=mConfigUi.getContext();
  final Resources resources=context.getResources();
  if (mAccessPoint == null) {
    mConfigUi.setTitle(R.string.wifi_add_network);
    mSsidView=(TextView)mView.findViewById(R.id.ssid);
    mSsidView.addTextChangedListener(this);
    mSecuritySpinner=((Spinner)mView.findViewById(R.id.security));
    mSecuritySpinner.setOnItemSelectedListener(this);
    if (mInXlSetupWizard) {
      mView.findViewById(R.id.type_ssid).setVisibility(View.VISIBLE);
      mView.findViewById(R.id.type_security).setVisibility(View.VISIBLE);
      mSecuritySpinner.setAdapter(new ArrayAdapter<String>(context,R.layout.wifi_setup_custom_list_item_1,android.R.id.text1,context.getResources().getStringArray(R.array.wifi_security)));
    }
 else {
      mView.findViewById(R.id.type).setVisibility(View.VISIBLE);
    }
    mConfigUi.setSubmitButton(context.getString(R.string.wifi_save));
  }
 else {
    mConfigUi.setTitle(mAccessPoint.ssid);
    mIpSettingsSpinner=(Spinner)mView.findViewById(R.id.ip_settings);
    mIpSettingsSpinner.setOnItemSelectedListener(this);
    mProxySettingsSpinner=(Spinner)mView.findViewById(R.id.proxy_settings);
    mProxySettingsSpinner.setOnItemSelectedListener(this);
    ViewGroup group=(ViewGroup)mView.findViewById(R.id.info);
    DetailedState state=mAccessPoint.getState();
    if (state != null) {
      addRow(group,R.string.wifi_status,Summary.get(mConfigUi.getContext(),state));
    }
    String[] type=resources.getStringArray(R.array.wifi_security);
    addRow(group,R.string.wifi_security,type[mAccessPoint.security]);
    int level=mAccessPoint.getLevel();
    if (level != -1) {
      String[] signal=resources.getStringArray(R.array.wifi_signal);
      addRow(group,R.string.wifi_signal,signal[level]);
    }
    WifiInfo info=mAccessPoint.getInfo();
    if (info != null) {
      addRow(group,R.string.wifi_speed,info.getLinkSpeed() + WifiInfo.LINK_SPEED_UNITS);
    }
    if (mAccessPoint.networkId != INVALID_NETWORK_ID) {
      WifiConfiguration config=mAccessPoint.getConfig();
      if (config.ipAssignment == IpAssignment.STATIC) {
        mIpSettingsSpinner.setSelection(STATIC_IP);
      }
 else {
        mIpSettingsSpinner.setSelection(DHCP);
        for (        InetAddress a : config.linkProperties.getAddresses()) {
          addRow(group,R.string.wifi_ip_address,a.getHostAddress());
        }
      }
      if (config.proxySettings == ProxySettings.STATIC) {
        mProxySettingsSpinner.setSelection(PROXY_STATIC);
      }
 else {
        mProxySettingsSpinner.setSelection(PROXY_NONE);
      }
    }
    if (mAccessPoint.networkId == INVALID_NETWORK_ID && mAccessPoint.wpsAvailable) {
      showNetworkSetupFields();
    }
    if (mAccessPoint.networkId == INVALID_NETWORK_ID || mEdit) {
      showSecurityFields();
      showIpConfigFields();
      showProxyFields();
    }
    if (mEdit) {
      mConfigUi.setSubmitButton(context.getString(R.string.wifi_save));
    }
 else {
      if (state == null && level != -1) {
        mConfigUi.setSubmitButton(context.getString(R.string.wifi_connect));
      }
 else {
        mView.findViewById(R.id.ip_fields).setVisibility(View.GONE);
      }
      if (mAccessPoint.networkId != INVALID_NETWORK_ID) {
        mConfigUi.setForgetButton(context.getString(R.string.wifi_forget));
      }
    }
  }
  mConfigUi.setCancelButton(context.getString(R.string.wifi_cancel));
  if (mConfigUi.getSubmitButton() != null) {
    enableSubmitIfAppropriate();
  }
}
