{
  if (mAccessPointSecurity == AccessPoint.SECURITY_NONE) {
    mView.findViewById(R.id.security_fields).setVisibility(View.GONE);
    return;
  }
  mView.findViewById(R.id.security_fields).setVisibility(View.VISIBLE);
  if (mPasswordView == null) {
    mPasswordView=(TextView)mView.findViewById(R.id.password);
    mPasswordView.addTextChangedListener(this);
    mPasswordView.setOnEditorActionListener(this);
    mPasswordView.setOnKeyListener(this);
    ((CheckBox)mView.findViewById(R.id.show_password)).setOnCheckedChangeListener(this);
    if (mAccessPoint != null && mAccessPoint.isSaved()) {
      mPasswordView.setHint(R.string.wifi_unchanged);
    }
  }
  if (mAccessPointSecurity != AccessPoint.SECURITY_EAP) {
    mView.findViewById(R.id.eap).setVisibility(View.GONE);
    return;
  }
  mView.findViewById(R.id.eap).setVisibility(View.VISIBLE);
  if (mEapMethodSpinner == null) {
    mEapMethodSpinner=(Spinner)mView.findViewById(R.id.method);
    mEapMethodSpinner.setOnItemSelectedListener(this);
    if (Utils.isWifiOnly(mContext) || !mContext.getResources().getBoolean(com.android.internal.R.bool.config_eap_sim_based_auth_supported)) {
      String[] eapMethods=mContext.getResources().getStringArray(R.array.eap_method_without_sim_auth);
      ArrayAdapter<String> spinnerAdapter=new ArrayAdapter<String>(mContext,android.R.layout.simple_spinner_item,eapMethods);
      spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
      mEapMethodSpinner.setAdapter(spinnerAdapter);
    }
    mPhase2Spinner=(Spinner)mView.findViewById(R.id.phase2);
    mEapCaCertSpinner=(Spinner)mView.findViewById(R.id.ca_cert);
    mEapCaCertSpinner.setOnItemSelectedListener(this);
    mEapDomainView=(TextView)mView.findViewById(R.id.domain);
    mEapDomainView.addTextChangedListener(this);
    mEapUserCertSpinner=(Spinner)mView.findViewById(R.id.user_cert);
    mEapUserCertSpinner.setOnItemSelectedListener(this);
    mEapIdentityView=(TextView)mView.findViewById(R.id.identity);
    mEapAnonymousView=(TextView)mView.findViewById(R.id.anonymous);
    loadCertificates(mEapCaCertSpinner,Credentials.CA_CERTIFICATE,mDoNotValidateEapServerString,false,true);
    loadCertificates(mEapUserCertSpinner,Credentials.USER_PRIVATE_KEY,mDoNotProvideEapUserCertString,false,false);
    if (mAccessPoint != null && mAccessPoint.isSaved()) {
      WifiEnterpriseConfig enterpriseConfig=mAccessPoint.getConfig().enterpriseConfig;
      int eapMethod=enterpriseConfig.getEapMethod();
      int phase2Method=enterpriseConfig.getPhase2Method();
      mEapMethodSpinner.setSelection(eapMethod);
      showEapFieldsByMethod(eapMethod);
switch (eapMethod) {
case Eap.PEAP:
switch (phase2Method) {
case Phase2.NONE:
          mPhase2Spinner.setSelection(WIFI_PEAP_PHASE2_NONE);
        break;
case Phase2.MSCHAPV2:
      mPhase2Spinner.setSelection(WIFI_PEAP_PHASE2_MSCHAPV2);
    break;
case Phase2.GTC:
  mPhase2Spinner.setSelection(WIFI_PEAP_PHASE2_GTC);
break;
default :
Log.e(TAG,"Invalid phase 2 method " + phase2Method);
break;
}
break;
default :
mPhase2Spinner.setSelection(phase2Method);
break;
}
if (!TextUtils.isEmpty(enterpriseConfig.getCaPath())) {
setSelection(mEapCaCertSpinner,mUseSystemCertsString);
}
 else {
String[] caCerts=enterpriseConfig.getCaCertificateAliases();
if (caCerts == null) {
setSelection(mEapCaCertSpinner,mDoNotValidateEapServerString);
}
 else if (caCerts.length == 1) {
setSelection(mEapCaCertSpinner,caCerts[0]);
}
 else {
loadCertificates(mEapCaCertSpinner,Credentials.CA_CERTIFICATE,mDoNotValidateEapServerString,true,true);
setSelection(mEapCaCertSpinner,mMultipleCertSetString);
}
}
mEapDomainView.setText(enterpriseConfig.getDomainSuffixMatch());
String userCert=enterpriseConfig.getClientCertificateAlias();
if (TextUtils.isEmpty(userCert)) {
setSelection(mEapUserCertSpinner,mDoNotProvideEapUserCertString);
}
 else {
setSelection(mEapUserCertSpinner,userCert);
}
mEapIdentityView.setText(enterpriseConfig.getIdentity());
mEapAnonymousView.setText(enterpriseConfig.getAnonymousIdentity());
}
 else {
showEapFieldsByMethod(mEapMethodSpinner.getSelectedItemPosition());
}
}
 else {
showEapFieldsByMethod(mEapMethodSpinner.getSelectedItemPosition());
}
}
