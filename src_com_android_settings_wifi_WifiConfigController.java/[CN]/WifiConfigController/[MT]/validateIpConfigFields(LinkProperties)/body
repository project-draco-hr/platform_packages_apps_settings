{
  try {
    String ipAddr=mIpAddressView.getText().toString();
    if (!InetAddress.isNumeric(ipAddr)) {
      return R.string.wifi_ip_settings_invalid_ip_address;
    }
    InetAddress inetAddr=InetAddress.getByName(ipAddr);
    int networkPrefixLength=Integer.parseInt(mNetworkPrefixLengthView.getText().toString());
    if (networkPrefixLength < 0 || networkPrefixLength > 32) {
      return R.string.wifi_ip_settings_invalid_network_prefix_length;
    }
    linkProperties.addLinkAddress(new LinkAddress(inetAddr,networkPrefixLength));
    String gateway=mGatewayView.getText().toString();
    if (!InetAddress.isNumeric(gateway)) {
      return R.string.wifi_ip_settings_invalid_gateway;
    }
    linkProperties.setGateway(InetAddress.getByName(gateway));
    String dns=mDns1View.getText().toString();
    if (!InetAddress.isNumeric(dns)) {
      return R.string.wifi_ip_settings_invalid_dns;
    }
    linkProperties.addDns(InetAddress.getByName(dns));
    if (mDns2View.length() > 0) {
      dns=mDns2View.getText().toString();
      if (!InetAddress.isNumeric(dns)) {
        return R.string.wifi_ip_settings_invalid_dns;
      }
      linkProperties.addDns(InetAddress.getByName(dns));
    }
  }
 catch (  NumberFormatException ignore) {
    return R.string.wifi_ip_settings_invalid_network_prefix_length;
  }
catch (  UnknownHostException e) {
    Log.e(TAG,"Failure to validate IP configuration " + e);
    return R.string.wifi_ip_settings_invalid_ip_address;
  }
  return 0;
}
