{
  String ipAddr=mIpAddressView.getText().toString();
  InetAddress inetAddr=null;
  try {
    inetAddr=NetworkUtils.numericToInetAddress(ipAddr);
  }
 catch (  IllegalArgumentException e) {
    return R.string.wifi_ip_settings_invalid_ip_address;
  }
  int networkPrefixLength=-1;
  try {
    networkPrefixLength=Integer.parseInt(mNetworkPrefixLengthView.getText().toString());
  }
 catch (  NumberFormatException e) {
  }
  if (networkPrefixLength < 0 || networkPrefixLength > 32) {
    return R.string.wifi_ip_settings_invalid_network_prefix_length;
  }
  linkProperties.addLinkAddress(new LinkAddress(inetAddr,networkPrefixLength));
  String gateway=mGatewayView.getText().toString();
  InetAddress gatewayAddr=null;
  try {
    gatewayAddr=NetworkUtils.numericToInetAddress(gateway);
  }
 catch (  IllegalArgumentException e) {
    return R.string.wifi_ip_settings_invalid_gateway;
  }
  linkProperties.addGateway(gatewayAddr);
  String dns=mDns1View.getText().toString();
  InetAddress dnsAddr=null;
  try {
    dnsAddr=NetworkUtils.numericToInetAddress(dns);
  }
 catch (  IllegalArgumentException e) {
    return R.string.wifi_ip_settings_invalid_dns;
  }
  linkProperties.addDns(dnsAddr);
  if (mDns2View.length() > 0) {
    dns=mDns2View.getText().toString();
    try {
      dnsAddr=NetworkUtils.numericToInetAddress(dns);
    }
 catch (    IllegalArgumentException e) {
      return R.string.wifi_ip_settings_invalid_dns;
    }
    linkProperties.addDns(dnsAddr);
  }
  return 0;
}
