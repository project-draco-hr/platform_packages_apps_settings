{
  if (mIpAddressView == null)   return 0;
  String ipAddr=mIpAddressView.getText().toString();
  if (TextUtils.isEmpty(ipAddr))   return R.string.wifi_ip_settings_invalid_ip_address;
  Inet4Address inetAddr=getIPv4Address(ipAddr);
  if (inetAddr == null) {
    return R.string.wifi_ip_settings_invalid_ip_address;
  }
  int networkPrefixLength=-1;
  try {
    networkPrefixLength=Integer.parseInt(mNetworkPrefixLengthView.getText().toString());
    if (networkPrefixLength < 0 || networkPrefixLength > 32) {
      return R.string.wifi_ip_settings_invalid_network_prefix_length;
    }
    staticIpConfiguration.ipAddress=new LinkAddress(inetAddr,networkPrefixLength);
  }
 catch (  NumberFormatException e) {
    mNetworkPrefixLengthView.setText(mConfigUi.getContext().getString(R.string.wifi_network_prefix_length_hint));
  }
  String gateway=mGatewayView.getText().toString();
  if (TextUtils.isEmpty(gateway)) {
    try {
      InetAddress netPart=NetworkUtils.getNetworkPart(inetAddr,networkPrefixLength);
      byte[] addr=netPart.getAddress();
      addr[addr.length - 1]=1;
      mGatewayView.setText(InetAddress.getByAddress(addr).getHostAddress());
    }
 catch (    RuntimeException ee) {
    }
catch (    java.net.UnknownHostException u) {
    }
  }
 else {
    InetAddress gatewayAddr=getIPv4Address(gateway);
    if (gatewayAddr == null) {
      return R.string.wifi_ip_settings_invalid_gateway;
    }
    staticIpConfiguration.gateway=gatewayAddr;
  }
  String dns=mDns1View.getText().toString();
  InetAddress dnsAddr=null;
  if (TextUtils.isEmpty(dns)) {
    mDns1View.setText(mConfigUi.getContext().getString(R.string.wifi_dns1_hint));
  }
 else {
    dnsAddr=getIPv4Address(dns);
    if (dnsAddr == null) {
      return R.string.wifi_ip_settings_invalid_dns;
    }
    staticIpConfiguration.dnsServers.add(dnsAddr);
  }
  if (mDns2View.length() > 0) {
    dns=mDns2View.getText().toString();
    dnsAddr=getIPv4Address(dns);
    if (dnsAddr == null) {
      return R.string.wifi_ip_settings_invalid_dns;
    }
    staticIpConfiguration.dnsServers.add(dnsAddr);
  }
  return 0;
}
