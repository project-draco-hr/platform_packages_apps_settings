{
synchronized (this) {
    List<AccessPointState> oldScanList=mApScanList;
    List<AccessPointState> newScanList=new ArrayList<AccessPointState>(oldScanList.size());
    List<ScanResult> list=mWifiManager.getScanResults();
    if (list != null) {
      for (int i=list.size() - 1; i >= 0; i--) {
        final ScanResult scanResult=list.get(i);
        if (LOGV) {
        }
        if (scanResult == null) {
          continue;
        }
        if (AccessPointState.isAdhoc(scanResult) || TextUtils.isEmpty(scanResult.SSID)) {
          continue;
        }
        final String ssid=scanResult.SSID;
        String security=AccessPointState.getScanResultSecurity(scanResult);
        AccessPointState ap=findApLocked(newScanList,AccessPointState.NETWORK_ID_ANY,AccessPointState.BSSID_ANY,ssid,security);
        if (ap != null) {
          if (WifiManager.compareSignalLevel(scanResult.level,ap.signal) > 0) {
            ap.setSignal(scanResult.level);
          }
          if (LOGV) {
          }
          continue;
        }
        ap=findApLocked(AccessPointState.NETWORK_ID_ANY,AccessPointState.BSSID_ANY,ssid,security);
        if (ap != null) {
          oldScanList.remove(ap);
          mApOtherList.remove(ap);
        }
 else {
          ap=new AccessPointState(mContext);
        }
        ap.updateFromScanResult(scanResult);
        if (mCallback != null) {
          mCallback.onAccessPointSetChanged(ap,true);
        }
        newScanList.add(ap);
      }
    }
    List<AccessPointState> otherList=mApOtherList;
    for (int i=oldScanList.size() - 1; i >= 0; i--) {
      final AccessPointState ap=oldScanList.get(i);
      if (ap.configured) {
        ap.setSeen(false);
        otherList.add(ap);
      }
 else {
        removeApFromUi(ap);
      }
    }
    mApScanList=newScanList;
  }
  onScanningEnded();
}
