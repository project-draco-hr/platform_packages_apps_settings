{
  super.onCreate(savedInstanceState);
  final Intent intent=getIntent();
  if (intent == null || !intent.getAction().equals(ConnectivityManager.ACTION_PROMPT_UNVALIDATED) || !"netId".equals(intent.getScheme())) {
    Log.e(TAG,"Unexpected intent " + intent + ", exiting");
    finish();
    return;
  }
  try {
    mNetwork=new Network(Integer.parseInt(intent.getData().getSchemeSpecificPart()));
  }
 catch (  NullPointerException|NumberFormatException e) {
    mNetwork=null;
  }
  if (mNetwork == null) {
    Log.e(TAG,"Can't determine network from '" + intent.getData() + "' , exiting");
    finish();
    return;
  }
  final NetworkRequest request=new NetworkRequest.Builder().clearCapabilities().build();
  mNetworkCallback=new NetworkCallback(){
    @Override public void onLost(    Network network){
      if (mNetwork.equals(network)) {
        Log.d(TAG,"Network " + mNetwork + " disconnected");
        finish();
      }
    }
    @Override public void onCapabilitiesChanged(    Network network,    NetworkCapabilities nc){
      if (mNetwork.equals(network) && nc.hasCapability(NET_CAPABILITY_VALIDATED)) {
        Log.d(TAG,"Network " + mNetwork + " validated");
        finish();
      }
    }
  }
;
  mCM=(ConnectivityManager)getSystemService(Context.CONNECTIVITY_SERVICE);
  mCM.registerNetworkCallback(request,mNetworkCallback);
  final NetworkInfo ni=mCM.getNetworkInfo(mNetwork);
  if (ni == null || !ni.isConnectedOrConnecting()) {
    Log.d(TAG,"Network " + mNetwork + " is not connected: "+ ni);
    finish();
    return;
  }
  mNetworkName=ni.getExtraInfo();
  if (mNetworkName != null) {
    mNetworkName=mNetworkName.replaceAll("^\"|\"$","");
  }
  createDialog();
}
