{
  super.onActivityCreated(savedInstanceState);
  mP2pSupported=getPackageManager().hasSystemFeature(PackageManager.FEATURE_WIFI_DIRECT);
  mWifiManager=(WifiManager)getSystemService(Context.WIFI_SERVICE);
  mConnectListener=new WifiManager.ActionListener(){
    @Override public void onSuccess(){
    }
    @Override public void onFailure(    int reason){
      Activity activity=getActivity();
      if (activity != null) {
        Toast.makeText(activity,R.string.wifi_failed_connect_message,Toast.LENGTH_SHORT).show();
      }
    }
  }
;
  mSaveListener=new WifiManager.ActionListener(){
    @Override public void onSuccess(){
    }
    @Override public void onFailure(    int reason){
      Activity activity=getActivity();
      if (activity != null) {
        Toast.makeText(activity,R.string.wifi_failed_save_message,Toast.LENGTH_SHORT).show();
      }
    }
  }
;
  mForgetListener=new WifiManager.ActionListener(){
    @Override public void onSuccess(){
    }
    @Override public void onFailure(    int reason){
      Activity activity=getActivity();
      if (activity != null) {
        Toast.makeText(activity,R.string.wifi_failed_forget_message,Toast.LENGTH_SHORT).show();
      }
    }
  }
;
  if (savedInstanceState != null && savedInstanceState.containsKey(SAVE_DIALOG_ACCESS_POINT_STATE)) {
    mDlgEdit=savedInstanceState.getBoolean(SAVE_DIALOG_EDIT_MODE);
    mAccessPointSavedState=savedInstanceState.getBundle(SAVE_DIALOG_ACCESS_POINT_STATE);
  }
  final Activity activity=getActivity();
  final Intent intent=activity.getIntent();
  mAutoFinishOnConnection=intent.getBooleanExtra(EXTRA_AUTO_FINISH_ON_CONNECT,false);
  if (mAutoFinishOnConnection) {
    if (hasNextButton()) {
      getNextButton().setVisibility(View.GONE);
    }
    final ConnectivityManager connectivity=(ConnectivityManager)activity.getSystemService(Context.CONNECTIVITY_SERVICE);
    if (connectivity != null && connectivity.getNetworkInfo(ConnectivityManager.TYPE_WIFI).isConnected()) {
      activity.setResult(Activity.RESULT_OK);
      activity.finish();
      return;
    }
  }
  mEnableNextOnConnection=intent.getBooleanExtra(EXTRA_ENABLE_NEXT_ON_CONNECT,false);
  if (mEnableNextOnConnection) {
    if (hasNextButton()) {
      final ConnectivityManager connectivity=(ConnectivityManager)activity.getSystemService(Context.CONNECTIVITY_SERVICE);
      if (connectivity != null) {
        NetworkInfo info=connectivity.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
        changeNextButtonState(info.isConnected());
      }
    }
  }
  addPreferencesFromResource(R.xml.wifi_settings);
  if (mSetupWizardMode) {
    getView().setSystemUiVisibility(View.STATUS_BAR_DISABLE_HOME | View.STATUS_BAR_DISABLE_RECENT | View.STATUS_BAR_DISABLE_NOTIFICATION_ALERTS| View.STATUS_BAR_DISABLE_CLOCK);
  }
  mEmptyView=(TextView)getView().findViewById(android.R.id.empty);
  getListView().setEmptyView(mEmptyView);
  if (!mSetupWizardMode) {
    registerForContextMenu(getListView());
  }
  setHasOptionsMenu(true);
}
