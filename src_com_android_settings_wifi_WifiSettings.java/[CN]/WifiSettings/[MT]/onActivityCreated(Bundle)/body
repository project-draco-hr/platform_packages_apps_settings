{
  super.onActivityCreated(savedInstanceState);
  mWifiTracker=new WifiTracker(getActivity(),this,true,true);
  mWifiManager=mWifiTracker.getManager();
  mConnectListener=new WifiManager.ActionListener(){
    @Override public void onSuccess(){
    }
    @Override public void onFailure(    int reason){
      Activity activity=getActivity();
      if (activity != null) {
        Toast.makeText(activity,R.string.wifi_failed_connect_message,Toast.LENGTH_SHORT).show();
      }
    }
  }
;
  mSaveListener=new WifiManager.ActionListener(){
    @Override public void onSuccess(){
    }
    @Override public void onFailure(    int reason){
      Activity activity=getActivity();
      if (activity != null) {
        Toast.makeText(activity,R.string.wifi_failed_save_message,Toast.LENGTH_SHORT).show();
      }
    }
  }
;
  mForgetListener=new WifiManager.ActionListener(){
    @Override public void onSuccess(){
    }
    @Override public void onFailure(    int reason){
      Activity activity=getActivity();
      if (activity != null) {
        Toast.makeText(activity,R.string.wifi_failed_forget_message,Toast.LENGTH_SHORT).show();
      }
    }
  }
;
  if (savedInstanceState != null) {
    mDlgEdit=savedInstanceState.getBoolean(SAVE_DIALOG_EDIT_MODE);
    if (savedInstanceState.containsKey(SAVE_DIALOG_ACCESS_POINT_STATE)) {
      mAccessPointSavedState=savedInstanceState.getBundle(SAVE_DIALOG_ACCESS_POINT_STATE);
    }
    if (savedInstanceState.containsKey(SAVED_WIFI_NFC_DIALOG_STATE)) {
      mWifiNfcDialogSavedState=savedInstanceState.getBundle(SAVED_WIFI_NFC_DIALOG_STATE);
    }
  }
  Intent intent=getActivity().getIntent();
  mEnableNextOnConnection=intent.getBooleanExtra(EXTRA_ENABLE_NEXT_ON_CONNECT,false);
  if (mEnableNextOnConnection) {
    if (hasNextButton()) {
      final ConnectivityManager connectivity=(ConnectivityManager)getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);
      if (connectivity != null) {
        NetworkInfo info=connectivity.getNetworkInfo(ConnectivityManager.TYPE_WIFI);
        changeNextButtonState(info.isConnected());
      }
    }
  }
  addPreferencesFromResource(R.xml.wifi_settings);
  mEmptyView=initEmptyView();
  registerForContextMenu(getListView());
  setHasOptionsMenu(true);
  if (intent.hasExtra(EXTRA_START_CONNECT_SSID)) {
    String ssid=intent.getStringExtra(EXTRA_START_CONNECT_SSID);
    onAccessPointsChanged();
    PreferenceScreen preferenceScreen=getPreferenceScreen();
    for (int i=0; i < preferenceScreen.getPreferenceCount(); i++) {
      Preference preference=preferenceScreen.getPreference(i);
      if (preference instanceof AccessPointPreference) {
        AccessPoint accessPoint=((AccessPointPreference)preference).getAccessPoint();
        if (ssid.equals(accessPoint.getSsid()) && !accessPoint.isSaved() && accessPoint.getSecurity() != AccessPoint.SECURITY_NONE) {
          onPreferenceTreeClick(preferenceScreen,preference);
          break;
        }
      }
    }
  }
}
