{
  final WifiConfigUiBase uiBase=(mDialog != null ? mDialog : mConfigPreference);
  final WifiConfigController configController=uiBase.getController();
  boolean successful=true;
switch (configController.chosenNetworkSetupMethod()) {
case WifiConfigController.WPS_PBC:
    mWifiManager.startWpsPbc(mSelectedAccessPoint.bssid);
  break;
case WifiConfigController.WPS_PIN_FROM_ACCESS_POINT:
int apPin=configController.getWpsPin();
mWifiManager.startWpsWithPinFromAccessPoint(mSelectedAccessPoint.bssid,apPin);
break;
case WifiConfigController.WPS_PIN_FROM_DEVICE:
int pin=mWifiManager.startWpsWithPinFromDevice(mSelectedAccessPoint.bssid);
new AlertDialog.Builder(getActivity()).setTitle(R.string.wifi_wps_pin_method_configuration).setMessage(getResources().getString(R.string.wifi_wps_pin_output,pin)).setPositiveButton(android.R.string.ok,null).show();
break;
case WifiConfigController.MANUAL:
final WifiConfiguration config=configController.getConfig();
if (config == null) {
if (mSelectedAccessPoint != null && !requireKeyStore(mSelectedAccessPoint.getConfig()) && mSelectedAccessPoint.networkId != INVALID_NETWORK_ID) {
mWifiManager.connectNetwork(mSelectedAccessPoint.networkId);
}
 else {
successful=false;
}
}
 else if (config.networkId != INVALID_NETWORK_ID) {
if (mSelectedAccessPoint != null) {
mWifiManager.saveNetwork(config);
}
}
 else {
if (uiBase.isEdit() || requireKeyStore(config)) {
mWifiManager.saveNetwork(config);
}
 else {
mWifiManager.connectNetwork(config);
}
}
break;
}
if (mInXlSetupWizard && successful && mConfigPreference != null) {
mConnectingAccessPoint=mSelectedAccessPoint;
mConnectingAccessPoint.setSelectable(false);
}
detachConfigPreference();
}
