{
  final Handler handler=new Handler();
  mPingIpAddrResult=getResources().getString(R.string.radioInfo_unknown);
  mPingHostnameResult=getResources().getString(R.string.radioInfo_unknown);
  mHttpClientTestResult=getResources().getString(R.string.radioInfo_unknown);
  mPingIpAddr.setText(mPingIpAddrResult);
  mPingHostname.setText(mPingHostnameResult);
  mHttpClientTest.setText(mHttpClientTestResult);
  final Runnable updatePingResults=new Runnable(){
    public void run(){
      mPingIpAddr.setText(mPingIpAddrResult);
      mPingHostname.setText(mPingHostnameResult);
      mHttpClientTest.setText(mHttpClientTestResult);
    }
  }
;
  Thread ipAddrThread=new Thread(){
    @Override public void run(){
      pingIpAddr();
      handler.post(updatePingResults);
    }
  }
;
  ipAddrThread.start();
  Thread hostnameThread=new Thread(){
    @Override public void run(){
      pingHostname();
      handler.post(updatePingResults);
    }
  }
;
  hostnameThread.start();
  Thread httpClientThread=new Thread(){
    @Override public void run(){
      httpClientTest();
      handler.post(updatePingResults);
    }
  }
;
  httpClientThread.start();
}
