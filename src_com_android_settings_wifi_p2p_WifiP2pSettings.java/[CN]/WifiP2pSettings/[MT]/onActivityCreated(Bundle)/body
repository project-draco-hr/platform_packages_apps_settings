{
  addPreferencesFromResource(R.xml.wifi_p2p_settings);
  mIntentFilter.addAction(WifiP2pManager.WIFI_P2P_STATE_CHANGED_ACTION);
  mIntentFilter.addAction(WifiP2pManager.WIFI_P2P_PEERS_CHANGED_ACTION);
  mIntentFilter.addAction(WifiP2pManager.WIFI_P2P_CONNECTION_CHANGED_ACTION);
  mIntentFilter.addAction(WifiP2pManager.WIFI_P2P_THIS_DEVICE_CHANGED_ACTION);
  mIntentFilter.addAction(WifiP2pManager.WIFI_P2P_DISCOVERY_CHANGED_ACTION);
  mIntentFilter.addAction(WifiP2pManager.WIFI_P2P_PERSISTENT_GROUPS_CHANGED_ACTION);
  final Activity activity=getActivity();
  mWifiP2pManager=(WifiP2pManager)getSystemService(Context.WIFI_P2P_SERVICE);
  if (mWifiP2pManager != null) {
    mChannel=mWifiP2pManager.initialize(activity,getActivity().getMainLooper(),null);
    if (mChannel == null) {
      Log.e(TAG,"Failed to set up connection with wifi p2p service");
      mWifiP2pManager=null;
    }
  }
 else {
    Log.e(TAG,"mWifiP2pManager is null !");
  }
  if (savedInstanceState != null && savedInstanceState.containsKey(SAVE_DIALOG_PEER)) {
    WifiP2pDevice device=savedInstanceState.getParcelable(SAVE_DIALOG_PEER);
    mSelectedWifiPeer=new WifiP2pPeer(getActivity(),device);
  }
  if (savedInstanceState != null && savedInstanceState.containsKey(SAVE_DEVICE_NAME)) {
    mSavedDeviceName=savedInstanceState.getString(SAVE_DEVICE_NAME);
  }
  if (savedInstanceState != null && savedInstanceState.containsKey(SAVE_SELECTED_GROUP)) {
    mSelectedGroupName=savedInstanceState.getString(SAVE_SELECTED_GROUP);
  }
  mRenameListener=new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (which == DialogInterface.BUTTON_POSITIVE) {
        if (mWifiP2pManager != null) {
          String name=mDeviceNameText.getText().toString();
          if (name != null) {
            for (int i=0; i < name.length(); i++) {
              char cur=name.charAt(i);
              if (!Character.isDigit(cur) && !Character.isLetter(cur) && cur != '-' && cur != '_' && cur != ' ') {
                Toast.makeText(getActivity(),R.string.wifi_p2p_failed_rename_message,Toast.LENGTH_LONG).show();
                return;
              }
            }
          }
          mWifiP2pManager.setDeviceName(mChannel,mDeviceNameText.getText().toString(),new WifiP2pManager.ActionListener(){
            public void onSuccess(){
              if (DBG)               Log.d(TAG," device rename success");
            }
            public void onFailure(            int reason){
              Toast.makeText(getActivity(),R.string.wifi_p2p_failed_rename_message,Toast.LENGTH_LONG).show();
            }
          }
);
        }
      }
    }
  }
;
  mDisconnectListener=new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (which == DialogInterface.BUTTON_POSITIVE) {
        if (mWifiP2pManager != null) {
          mWifiP2pManager.removeGroup(mChannel,new WifiP2pManager.ActionListener(){
            public void onSuccess(){
              if (DBG)               Log.d(TAG," remove group success");
            }
            public void onFailure(            int reason){
              if (DBG)               Log.d(TAG," remove group fail " + reason);
            }
          }
);
        }
      }
    }
  }
;
  mCancelConnectListener=new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (which == DialogInterface.BUTTON_POSITIVE) {
        if (mWifiP2pManager != null) {
          mWifiP2pManager.cancelConnect(mChannel,new WifiP2pManager.ActionListener(){
            public void onSuccess(){
              if (DBG)               Log.d(TAG," cancel connect success");
            }
            public void onFailure(            int reason){
              if (DBG)               Log.d(TAG," cancel connect fail " + reason);
            }
          }
);
        }
      }
    }
  }
;
  mDeleteGroupListener=new OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      if (which == DialogInterface.BUTTON_POSITIVE) {
        if (mWifiP2pManager != null) {
          if (mSelectedGroup != null) {
            if (DBG)             Log.d(TAG," deleting group " + mSelectedGroup.getGroupName());
            mWifiP2pManager.deletePersistentGroup(mChannel,mSelectedGroup.getNetworkId(),new WifiP2pManager.ActionListener(){
              public void onSuccess(){
                if (DBG)                 Log.d(TAG," delete group success");
              }
              public void onFailure(              int reason){
                if (DBG)                 Log.d(TAG," delete group fail " + reason);
              }
            }
);
            mSelectedGroup=null;
          }
 else {
            if (DBG)             Log.w(TAG," No selected group to delete!");
          }
        }
      }
 else       if (which == DialogInterface.BUTTON_NEGATIVE) {
        if (DBG) {
          Log.d(TAG," forgetting selected group " + mSelectedGroup.getGroupName());
        }
        mSelectedGroup=null;
      }
    }
  }
;
  setHasOptionsMenu(true);
  final PreferenceScreen preferenceScreen=getPreferenceScreen();
  preferenceScreen.removeAll();
  preferenceScreen.setOrderingAsAdded(true);
  mThisDevicePref=new Preference(getActivity());
  mThisDevicePref.setPersistent(false);
  mThisDevicePref.setSelectable(false);
  preferenceScreen.addPreference(mThisDevicePref);
  mPeersGroup=new PreferenceCategory(getActivity());
  mPeersGroup.setTitle(R.string.wifi_p2p_peer_devices);
  preferenceScreen.addPreference(mPeersGroup);
  mPersistentGroup=new PreferenceCategory(getActivity());
  mPersistentGroup.setTitle(R.string.wifi_p2p_remembered_groups);
  preferenceScreen.addPreference(mPersistentGroup);
  super.onActivityCreated(savedInstanceState);
}
