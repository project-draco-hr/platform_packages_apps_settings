{
  if (preference instanceof WifiP2pPeer) {
    mSelectedWifiPeer=(WifiP2pPeer)preference;
    if (mSelectedWifiPeer.device.status == WifiP2pDevice.CONNECTED) {
      showDialog(DIALOG_DISCONNECT);
    }
 else     if (mSelectedWifiPeer.device.status == WifiP2pDevice.INVITED) {
      showDialog(DIALOG_CANCEL_CONNECT);
    }
 else {
      WifiP2pConfig config=new WifiP2pConfig();
      config.deviceAddress=mSelectedWifiPeer.device.deviceAddress;
      int forceWps=SystemProperties.getInt("wifidirect.wps",-1);
      if (forceWps != -1) {
        config.wps.setup=forceWps;
      }
 else {
        if (mSelectedWifiPeer.device.wpsPbcSupported()) {
          config.wps.setup=WpsInfo.PBC;
        }
 else         if (mSelectedWifiPeer.device.wpsKeypadSupported()) {
          config.wps.setup=WpsInfo.KEYPAD;
        }
 else {
          config.wps.setup=WpsInfo.DISPLAY;
        }
      }
      mWifiP2pManager.connect(mChannel,config,new WifiP2pManager.ActionListener(){
        public void onSuccess(){
          if (DBG)           Log.d(TAG," connect success");
        }
        public void onFailure(        int reason){
          Log.e(TAG," connect fail " + reason);
          Toast.makeText(getActivity(),R.string.wifi_p2p_failed_connect_message,Toast.LENGTH_SHORT).show();
        }
      }
);
    }
  }
 else   if (preference instanceof WifiP2pPersistentGroup) {
    mSelectedGroup=(WifiP2pPersistentGroup)preference;
    showDialog(DIALOG_DELETE_GROUP);
  }
  return super.onPreferenceTreeClick(screen,preference);
}
