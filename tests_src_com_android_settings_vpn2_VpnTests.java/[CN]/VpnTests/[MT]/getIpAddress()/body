{
  String ip=null;
  HttpURLConnection urlConnection=null;
  NetworkSecurityPolicy networkSecurityPolicy=NetworkSecurityPolicy.getInstance();
  boolean cleartextTrafficPermittedBeforeTest=networkSecurityPolicy.isCleartextTrafficPermitted();
  networkSecurityPolicy.setCleartextTrafficPermitted(true);
  try {
    URL url=new URL(EXTERNAL_SERVER);
    urlConnection=(HttpURLConnection)url.openConnection();
    Log.i(TAG,"Response from httpget: " + urlConnection.getResponseCode());
    InputStream is=urlConnection.getInputStream();
    String response;
    try {
      response=new String(Streams.readFully(is),StandardCharsets.UTF_8);
    }
  finally {
      is.close();
    }
    JSONObject json_data=new JSONObject(response);
    ip=json_data.getString("ip");
    Log.v(TAG,"json_data: " + ip);
  }
 catch (  IllegalArgumentException e) {
    Log.e(TAG,"exception while getting external IP: " + e.toString());
  }
catch (  IOException e) {
    Log.e(TAG,"IOException while getting IP: " + e.toString());
  }
catch (  JSONException e) {
    Log.e(TAG,"exception while creating JSONObject: " + e.toString());
  }
 finally {
    networkSecurityPolicy.setCleartextTrafficPermitted(cleartextTrafficPermittedBeforeTest);
    if (urlConnection != null) {
      urlConnection.disconnect();
    }
  }
  return ip;
}
